{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "796ff0ae-0ee8-4a8a-830e-88140d5fc0ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4017f9a4-4281-4a73-beb3-fb264af3dbef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1aa96bf-def5-4160-852c-23b16be54e37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a7ab3bbf-6a1c-484d-a36e-09f3a3c57d7d"
                }
              }
            ]
          },
          {
            "id": "551d8065-4e4d-4f93-a37d-5789cf5717ac",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2173cee5-915f-4d51-956c-e2ae91602bac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f022ae0d-1f85-4c8f-9e0f-9049fc3323bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e886320-3dcf-4c5a-84d9-568e785751a0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "32621cae-8ac7-4e52-867c-49a2e5dcc43b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9011df1-d2f9-4ac4-acdc-81760516f461",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67d84ad-e231-4606-aa90-278e69054ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14808d9d-fac5-495b-b933-a669a2d71b32"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9052dcde-6261-40b3-8aa0-4a03c2560418",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aee85a7c-be79-47b8-b726-1d69e272a89c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b494346-17f0-4440-be06-7b46f1aaeaf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d2ff903-5ccf-49f5-8e94-818f045d1ff2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "280673de-e37f-46f8-b745-91dc0bd74d8a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "833ce9f7-3dac-445e-9fb2-2249e57ff092"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf10f7ce-5bfd-4ad8-ba93-f077349eacba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0f2d195-e1c8-43e5-928e-4f9fb8c1c9ae"
            }
          }
        ]
      },
      {
        "id": "0ebe42b5-d73f-4307-9d9d-c7f8ef20c424",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "702d533a-fa06-4142-b6cf-86896558fba9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e6552d5-084e-4e98-9e49-4f4c7aca186b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1b4ea71-d751-4794-b737-5210eefcfab5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dc12a2-bb09-4a96-b364-b916df44477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c86e30b-a9e1-4eff-8502-2ca1f5be0924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847d935-d02e-492b-94e2-63276668b556",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88d201f-62b8-4ca3-8681-1088feb3599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb744a5e-d871-4917-8d1a-f9abadea2576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da2a724-e1bd-46cc-a67a-2f39f0b00910",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad29982-40c0-42f9-ba97-d7ea7635918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2e2d17-b19e-4ede-adac-67b22856a063"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5cedd42-8073-4e5b-86bf-710ddf991a04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a5267e1-467c-43b6-b7d5-f5c807942efc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ca2f6-366a-4068-8c7c-b0f948cda5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b674b8ef-6979-4020-9f52-9ca95616b0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978dd812-1eec-4f0b-ad2d-cadbe4c34543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dfba67-1982-4aa0-9ac7-70400a797fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae9971-c930-450b-9d36-e5ef645c39db",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bd9cdb-a66a-4595-8ee6-98a657dcbffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9953747d-718f-42a3-9667-a88bf4f3e90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4366b88e-7f23-4a7b-ac51-cbec4c30319c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "72349bdc-d1d0-4ca5-bf6b-6a4fce2a833d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8021ff7-3987-4981-ae75-8a0e633a80d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42095579-1479-4622-aa99-3e515eec1ba1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "747df45b-d1b2-4244-a41b-ebb4b852d816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c96ea11e-c7a7-4201-b6c9-3b210ae9f8a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62adc5cf-2ea9-4a28-a776-d8be7fc841ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a04b9a21-0124-4096-9327-5e3b39aaebd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bd25cfe-d412-44c7-82c6-bac411425ec5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68ebcf1b-5e50-44f1-b21f-bfc66b2f12b9"
            }
          }
        ]
      },
      {
        "id": "32f53294-9ec3-479a-94ff-b7243efe119e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd2275a5-cffa-476b-9abe-0f96a8a9857d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40e1e904-7c55-4a03-a215-fcf6ab2aa7b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c0c5f6a7-d6bb-453c-ab0c-ce7995c175cd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee5bf2d-9411-4446-bf03-d0c994401d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97296246-3a4b-4ae1-8a4c-436e47e6eacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8d3781-09f6-4c50-84ab-c3d80d0cb1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79b58839-9a54-4342-bc00-81e407e7e4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eb420d-7a11-4a8b-a48f-a5a3e38a6689",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ef65b8-bc28-4bee-8965-b52cacbb8a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738a6147-6fce-4e72-8954-1ec0d2d0497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730dc499-bd01-4572-9f9d-2d92b8927b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dde5f5b-e611-4863-9209-91a7efa5d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a70423-8d75-425c-b6b2-48c2751e8221",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4703f810-502a-4ae4-b62d-395459df08ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dc078b-cae0-47ee-a2aa-bc1aa6490421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024d440a-ee4b-4491-9624-ac231fe75550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2bcb707-b55e-48ff-b90f-5c276e786cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f178df-d2e6-47de-a87a-b41b16992599",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca7e0e-b0c5-43a0-807c-57f7474cd3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1431c9cd-7804-4f66-802a-e4d660e9eda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d17800-0cb5-44e8-a912-c19b6e4cbd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "829dde0e-8f6c-4f80-8072-c50a2356e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a345c4b6-2bd7-4404-b7a7-508d721f7611",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463e5a17-f665-4eeb-8356-b717ee569571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18f0a79-fd5e-491e-94aa-23516451a770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be83c47d-e488-48df-8e67-6069e42f5c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5b328d7-9b53-43d4-828d-38cae89fc9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a9aeed-5404-448f-893d-32de936ac440",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a35e107-28fd-48d5-b1a7-afe5d98ad145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5e20fe-1770-4145-ae11-8bbda4a01822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6096a9-3cc3-49ba-962b-70a68922eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "638ca568-b76b-4b0b-ba87-cbf17c70530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223ebe2a-4537-4f23-83e9-0dab62925dba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f814057d-5efe-4098-af7d-0e8b555aa5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ac55f1-58c6-4e26-96c4-df204567b187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c111fd73-f2c6-45e0-9cd4-3b7fcbddf328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9351f598-be3c-41ef-a996-69dcabe4e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17707a64-0149-477c-b9fb-572c98e415f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f34006-8f3a-4be3-a8ed-7e44c297fcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f610450-f7a1-489b-bda5-f032871648ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2519b510-9e73-4f0a-aa9f-86c581a42567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06980615-dbd7-4118-a27e-44ff41ab32a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca5118d-a093-43f4-a4ac-724fc048bd5a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97252450-599a-4af9-a91a-37de27e9a3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1edb41f-947a-4f08-8e20-653a48332b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cde6ee-4128-4827-bbd1-c839c9c75527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cddd842-74b3-4460-836f-e0f5b1ada4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd8ec5-74f2-4c08-a6a1-0c002b8fd449",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3844333-24dc-4f53-b4a7-ff71d75e8d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ca70dc-bd4c-41be-9abb-ccde585f6a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d240ffcb-ac84-4695-9c4c-0519baae9b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0c290a4-a7d9-4ae7-87a2-5a9872350ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4580a-6980-44bb-b8bc-507aebd78638",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665da12-b197-4280-a6c6-ebafa472830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b8c2db-20f4-4ea5-b10b-58926c092572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e9db77-01fd-42f0-99e0-5a17cec56b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de1751b5-b3c8-4e5a-806d-52d3e2c87075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9770bc-6f53-4948-8307-bc41396d5277",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4a472a-419e-4c80-8737-c64d2c5b3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82fef34-a745-42a8-a695-32c0fc62dcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b4e986-17bd-449f-993a-c9acaa249796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e582dc4a-d2f5-4374-b474-ca76bc533a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37407798-cbe7-4219-82de-2bebdeda15d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc862f-84cd-4f73-af9e-85c969dfd965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08be0a36-8b00-4b36-803e-dc8e0b65a9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dacba6-421a-4595-a89a-52264c3da8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18c1d505-bc85-42c6-89c0-bef2c79841c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd65d2-07da-4666-aa23-f3432e443145",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02b4b4a-72ba-40c5-8ef8-1e703b9a15d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ff5c4e-96d6-4de2-9e96-8008aa295ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3801d8-f7bd-4495-b2ed-a1129eb6285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0521b581-7c7b-4935-b5a0-c4b439a598e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ff6f11-4078-47a5-aa35-43853e76fab2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f692e6-4080-4cae-b44a-1779243447a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b556c675-6f5e-4e68-97ea-7c5dbdbc1104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221e3211-17cf-4451-8105-52e63aa59452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb215100-319d-4358-8d62-7effd7c1fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4a5d5a-1a22-427c-a8ae-614b9fa21722",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451f72a9-a23c-4d3f-a229-550700102792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed217d04-932a-445a-9eb8-873b8e2810bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2673b872-aced-4f88-b92a-3c96547dcb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aea5ecd-e05b-44fa-bd13-b1939fec15a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a760b90-f3e7-479c-89c1-5f0e4f163855",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6503a78d-68d7-488b-9018-0aa0f8473349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e49044-6238-40a3-bfd0-3fb4760d17d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9228294-e3b3-461e-9481-f69c85a0efd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c9316c1-fde9-45ff-92af-da1e9eed5976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea6f52a-2456-4f3f-b650-973b3523eccf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10808f5-fce3-4406-9bcb-440c31dfe184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112b9879-27ad-4ee0-a9db-69eabf47860d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43caa105-7b5f-45d8-91ce-838620e2616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "423fe061-9f5a-4195-9a63-3d6c541e28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d073e70e-7567-4ef2-8395-f8429cc33b56",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187004c9-b2a3-455d-ae65-fcc697f2e717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ba19e-4339-44cd-8fce-93b1baca79c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f4d3e0-1bbb-49c1-bd75-2f4d675893ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "606c6df6-d56f-4028-8aa2-678681d916eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac16b55-a085-4f2d-8674-88505ede30d6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730b300e-3041-4288-aa0a-d48caa94a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830ccb29-89c0-486a-bede-6756cd35b8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd218d7f-dbb1-4256-8dff-ed10866a9764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "403a6b00-139d-4cf3-9bcf-6b64a7a27176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4beeccf-73d8-4577-a237-ada44d40904d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f548e-5e37-4436-9ff8-25b614dfb11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6380b4d-5925-4e58-a11b-0201a7cd90e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb54c762-5238-41d1-9d49-f4275b8090d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6f7b5b-298e-46bb-bcc1-517f80bcc97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeaa173-a88c-4150-9e02-e5dd5d9c51bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f147176-d424-4bde-b3a8-eeb1c09a9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965166b0-9c97-4ef9-a820-18bc4db34c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b73fdcd-44cb-4c63-a464-e2ef02d0ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5091410-5983-4d3d-a3c1-a7b0a0474a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137384bc-d3e2-44d5-98fc-42d99e10b4d3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abab21ee-74fa-43f1-b118-fbc07b21932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4ad2df-ef9a-4507-9a80-6b99b6d7cfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d13177-e3cf-4aaf-8461-a71ef4482e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b20a68f4-fcc2-4a54-a4d6-437ca5d94bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b494a5-5552-4849-92f8-81dadfc6b3c1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d3502e-1c8b-45fa-aa5a-324c86dfc3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f374bfa5-7a4a-4af6-893a-87ac3bc99720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266000bb-63be-4b2c-864e-fe4254d54898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c247f2-1843-46c9-b30d-59f234195919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9095d2ec-599b-4c98-b735-273f4eb9226e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae8be8d-fbad-41c9-ba6a-67aac4fc0816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fc696b-2f0f-4325-bcb3-c928e2893d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2411724-fb47-4584-880a-409de58c9e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a40f3c-993e-4cd5-a039-7cd6d8c71509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e47c012-ab8c-43be-b125-f7af8b2cdd35",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0d589c-e7dd-49c0-b979-8cb7b9a0f24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d423feab-a93f-41fc-bc69-c825f72b278a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5272c-db0d-45f7-9634-574112392d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fa8dfa-3eeb-4170-a0fd-b80f2f7434c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58cd931-652a-45fd-8fd6-9c5f6bb18d4a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1c85f7-7793-4db7-be8c-0f54602eb544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f094f4f9-9326-4cc9-96d1-b80e4f128236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85de4302-a9b3-4377-9180-f5f782061461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "768d8785-f6b1-4fea-8207-017c3e1b0f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2488de9-e2f1-447e-8048-f58e167f9792",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325a473b-f9b8-422b-aa13-1e39f4fcc000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca6cf4e-a4e0-49de-a0ae-dcffd2f59902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9212221-287f-43e8-ac16-72c15d320326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9147834f-0d0d-405e-acb0-57d5c1cb89bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2840a73a-d6b2-4dc0-ae93-54c8947605fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48853c4-1f8c-40de-b0be-d235d87e9f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392083d1-5991-4c68-a791-dc96e6d381f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6689919c-cecd-43e9-9705-7d06644bf360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e546b7bf-ed5d-48bb-9563-458143b31a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db88e6-858d-4b4b-92f2-9a1e76686295",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db42bec6-97a9-458b-97c0-889b62dc027e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc1afdd-c971-4250-b343-c81f462d980d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c8d539-25fe-457d-b974-1fea9da3b4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e0cd1c-8a75-4daf-9177-29d1d479e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068afaa4-79fd-4f1f-b99e-9404ecf98ac1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f269fbf2-c9fd-4f70-bfa1-227a0edfbd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0772745-ee17-4a9b-82a7-6995a60025a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863771d-7ab8-4e56-8404-b12c02318dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fa4765-4d7e-4ce0-82cb-bb8c982e8fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9112fca-3758-4a18-a2d5-220816d527b5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb268b1-4168-48c2-bd37-43cbe18762d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ab17d-ddc4-4536-b8b2-ad6bc1dd267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a7361-a000-46af-8b45-a6886f2d0d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "340e1495-81d0-4f38-ae96-020f4a301464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083ce5a2-5bfc-45e8-b2e3-4d4d3566cbff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b0c3f-28e8-4d04-9c93-7b2bd2ed6b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef1d114-ff67-4c8b-a48b-2d6bcdd116a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b56e7-fb23-479d-9c16-77d23ba6f986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0339b2a9-3218-45e1-acda-bcb8414e47b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f04891c-8d56-4cb4-a96c-9d9d4c139963",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ddd8b4-8ea4-4e83-a223-19dd805f2d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b57ee66-96da-4326-9c16-da4ad76e4ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df4c2cf-43c1-4ca6-9738-7ec86565c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24427866-0c00-43b4-ba43-94e18e6158a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df390ea-ea09-4d56-bacd-44cb3822d4e8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f476b8-0516-409d-a1ba-4501ef974b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d380f60-64df-436a-b4b7-d0ddd077da5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997cb9ab-8aa8-490a-93ff-9f2e5ac1ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0aab41e9-b178-403c-887c-38e4fd5515ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a3783a-af14-45a4-8017-9227e6b9c63e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041202b7-2aa8-4127-851c-f6111e21f457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6176451f-1baa-47e1-80f3-322d0fc1a634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf2691d-7b73-4ecb-99aa-2d0a8f190e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b23d5e5-897a-47f8-a725-7c2698a6d30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd3a692-66d5-4077-abfe-cea3b6eff2bb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd1c5b-0238-4dff-a3c6-104dfcc18dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823e9476-76c3-42e5-bc40-fa2a450c27ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad34f15-3aaa-488a-b8f6-9ffa0dae44ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3c82b9-6c5b-49f1-b6e8-01359c057a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff5670d-9b34-413e-8d6f-f0ae4a7c937a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dac4248-e915-4d33-8d24-a6df661d1d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2278d125-c81e-4faf-872c-4adf62b2bc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1dc24c-9ff4-42ab-986d-729349253783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb19bcc-031c-4e91-9614-00756ced0d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2955942-9d18-4cd0-bea7-dc458772ed6d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670344bd-c97c-42b1-abe2-53a0561d6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845ba49e-be7a-4cc3-99f9-3aa51509c79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f702367c-4532-451d-8d11-3f13b6314128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5e166d-64f9-4d1b-8db1-124a21753d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2776f1d5-76c6-4870-bad5-768fa0c6a8f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c68392-e9a4-4f68-8187-5d83a70d5b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a8a7d3-dbaa-4568-9f7e-e5eafdfdd4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a57ed-5c75-4329-a2c1-c8b35635fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0e8c77-8130-4ca8-8ead-e10799120e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356614a8-1e53-40fa-996c-2601e54dc173",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c9d42-f58f-4ef7-a842-9f3ea08d9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b71a17d-6e4c-474d-865d-5e8d1a439927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ff6f07-e733-4bd6-87cf-0743270c0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6da7f6-82ea-4b7d-96f9-bd1e12a9eb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18ac68f-7738-4a7f-9059-e32d3af9a3c8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97237865-ae00-4d79-8cea-971d820fc0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d21e81-1d28-4e5e-b638-b4a72bca4848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c9b34e-56c5-44ca-b08c-3ad1536e0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6287475e-86cd-45ab-b26d-ef1c824de6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2279eb-1d9b-4ad1-917f-8e28da7cbcfa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6d6c5-f664-4363-a970-b91b2182b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0424b957-ba79-4101-bc46-215ffc45a73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2900d75a-cde8-4838-8423-42b00d89cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e09bf1d-8024-4c7f-b4e3-c743986c82e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2d3de4-17d6-4ed0-88fe-67f193b924b4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa97958-00a6-45ed-940d-1a974f5dd5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7710c914-f6e0-4722-919c-870fcab3d74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb88d7e-be17-4059-8ff8-87a61a08f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "98dac0bc-9426-4dd0-b2f3-9aa9966b456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547e173e-6582-49a3-9d19-47e357861242",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7bf965-745d-4766-ad5f-1b6a843a3901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5c46e0-9ed5-4d7c-8cad-689a75f6cc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e3ae20-5c35-4304-a159-9eaa3dfbd57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e00db8a-54b8-472a-af84-fd67dbc391bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dfd3fb-3656-41ca-8bd9-d4218a126c33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a541b21-e74c-4ff3-8785-f9850b39fadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0648c4-9443-4089-9a25-59462982b89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08b4a71-de2c-4c88-bedb-4935aa9bd959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5895bb-98d7-493e-b297-ce42fb944b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d239ce-d96e-4041-beeb-f97d10dcb2a1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e3cd18-f390-419a-9ae4-b03f3d55906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4980473-d4c4-482a-a8de-a78a051ff853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dc276a-eb54-4ab7-ae3a-228604307229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "752bb316-5b04-4b84-955d-d5e0dcc3c7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf33cb3-7a61-4ece-af1a-d592130b997a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb294871-ac01-46f8-b8ef-ec5b49538125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995afdff-7823-4f10-993f-31d5dd5a851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae53f46c-f8fd-4c16-b302-6cdc07b1a68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcc1828-abd3-468e-b847-a794dc2114cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011485e0-5b22-47d5-9407-2346a07921da",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c2efb1-727a-46ff-b491-b20de7c012c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77e2db6-d4cc-41c2-8806-9a06f5cb4bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663d760-d6b0-4567-a051-4881dc66f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efec39ac-c85a-4650-aee5-d091a9a9a5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13734f7e-27c8-48f8-9ddb-2b5508b8fe9c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911feac1-5c98-4601-a67a-4c5bccfe0053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a523fb34-0f71-44a9-aa93-a473cc72e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4ae318-ec7c-4264-adfa-3d767be4f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c865914a-baa3-4e8b-a350-6d6eb5a1cbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e9f96-aa30-4aee-ad30-0d67e48d0719",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b224ec-a8d5-4cb3-a946-9e5a9be23144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45666133-0851-446b-82a4-bcb78359dc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18be837-b909-4024-b074-d14963981b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7778d9ef-a12c-441c-ba2b-f07f1b336196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a60609-4961-42cf-b5fd-238a860bfbb0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7245e7-83f2-4a49-b9b4-6f550265e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77da0f00-1e1f-45d0-bb49-f42712708939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ff4cc0-26bf-470c-9186-fac5e45210a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab11ef4-ed76-402f-a759-ebb7df786556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc40a81-19de-4165-b087-e2963d9d8884",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5605a6-7a8c-483a-878e-5751388b60ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0850eec8-675e-4abd-b4d3-fc0face39e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487077ed-fc3a-4f10-bfcd-5ba5e38bf782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e595947-8b3a-48b6-9944-65b2b562602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455a58f5-bdd5-43c7-821f-c8e6e0b3e34c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e3a38b-777d-463e-9a16-cb36deed4c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b94f8-7a1c-4788-9733-eac6989bebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa11f70-15cd-4505-95e7-ce837b8b534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "610c9585-b773-4277-8ebf-137d12513f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecc4828-db1f-4794-be9e-d95095c3b93b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490f015c-04bc-433d-a22d-b384b24f7c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ba71db-44a1-4637-b0ab-5c43233ce662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972f7d6d-017d-4c2d-8562-cffa8a1d687b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93077e43-5a28-44d1-8604-86670c05b88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4211cd3-4168-4f33-b433-f744912b69f4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fc7b9a-9e78-4dda-bb03-632f5c540a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f617589-488b-42df-a028-f0cd12bb3531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3207b4-b7cd-4c03-bed1-953744661242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "601dfe78-ea2f-4623-aa03-a2e24005d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30796edb-1d46-46c9-9fd4-f38e3f2e57f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a625bb40-14cc-486f-b3e1-7c5ac16d8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a6418f-a637-43f7-95bc-a85224d75fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f86dc7-b456-4ca0-8a88-a1223e95f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d271cd-471d-4519-a258-a4167fbe35c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123faa99-8f30-4b0b-bd2d-8ce249446689",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb8e9c6-dae0-4275-83b6-57f87ffe6da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c9f51b-52df-47e2-a19e-65d8b3d29925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e900a9-8d78-4a17-aa55-069d0edb2248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63c7641f-e3cb-4dfd-9978-5474ab427ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ef8557-4592-4322-be94-8b4753af5c20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6145fa03-3370-450c-9189-9280ab735020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fab160-a3f2-4715-9d59-5ad2fc05ecd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301fcffa-860d-4e58-8dfd-010adab09896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0eabb3-78b9-43d6-8e15-b226452eaf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a864566d-dc90-4693-a0ea-2550ea44779f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaabbe71-f858-4dd5-8ea1-3b1b964c577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4313da18-e03c-4c49-9127-ba2bb86930d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e536b4-6e7d-47f8-a1c0-f43225b10fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27640fe6-b13f-4dbc-9e8d-70970ba638e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5a32bf-e3c6-4597-b688-a9578015bea6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7227f96d-bd72-47a0-931e-a9dba27bee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8398ae-bc1d-49cd-8ae3-09cb46443c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382b17f3-ab91-4d96-b577-98f6c17cee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99728c96-cf36-4528-929a-6c89bb9be2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99da036f-7232-4425-8e6f-c93ac6139e62",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e07c86-82be-4675-b456-f3b1ff7ea2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919714c6-4828-424c-a4ae-31f042aa069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f352eb49-9460-40cd-897d-dceb14379cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfd68e1-63bd-4fcc-bbb5-1f04539ba98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf0861a-2a6b-45c8-9f5b-d1324de7314b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16b92f8-8bf0-4212-8dea-70c74ac84b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e22db81-5b17-409f-9ef9-84e9c37352ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2f5858-7e90-4928-8b5a-c1e93aed167a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b61ee9-0874-48f2-84d2-fba72ac6f287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473594d9-78b8-4faf-b6c1-65aaf8693e11",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94805e70-2ee9-4a3f-9ce3-171ee12b9ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55df2db-ce7f-4809-84bb-afe83be384be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae35496-f271-42db-bf57-aa177a6457d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d78a827-44e4-4a47-977e-07deb5621a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4d05b1-a430-4b8a-83d4-f2830da0d7a7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f014d107-2787-4555-a8f1-37b3939db091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea727cea-ce99-4f88-be48-04c037781d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a9040-8de4-4210-a650-93b464bb01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1d7fe4-406f-4aba-93b2-996b2543108a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f277a381-82f0-4d0e-8263-260cc6e89a9c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e8692f-f4ee-4aea-a117-ae6dff3f3104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed759bcd-c2aa-4e35-a483-596dbf78095a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986d8777-508b-4602-997c-b895c30ac5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a15909fd-3543-4424-95fd-a207728f3b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf063a9-040d-4aa6-8b24-68392b047ddc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe642608-5156-4a08-bd4e-a0788755be94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4bbcff-2c2e-4ee2-af76-471822f02dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f62149-0282-4f33-9c01-2a63c374d32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c832cf7-e5de-491f-959e-4a9b56574561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b03268-4742-469f-908f-f3b8e317eedc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8851604-f037-4e16-98e6-600ad4b552c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f31f9-9834-4437-a5de-67b372da9897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d790e-bbc6-4880-9fdf-6b8861b0cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "682e9f2e-2dca-4512-91ab-2e8cfe302114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387bf235-e79d-49ca-b8e2-5c0e6b1c01af",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc2c4c-7b0d-4776-86b8-4e573199c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd5c19c-3ba5-49ec-9853-df2040db0598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba4b8f8-1467-4732-97c3-3e9a9b2fc4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b246ae9-661d-4324-9c7a-51466bf9fba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d43b797-7400-4695-bfe6-d6542d177652",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d616975b-6bc7-444d-b95b-7ff32f671807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db464453-c325-4cdc-97ec-71a7ef944a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b8ebbc-7f41-4948-8b6f-f5bcdde93ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66d356f-2259-4ba0-aa75-1fb3c71aa824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e9371-e748-480b-901b-a5e87e92a754",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f462e35a-92b7-4371-a7da-2a10d195c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e511aa8-8f5f-483f-904e-760deff7faae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29080914-1958-43b0-b3c4-a1a10bebd6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4da927-e63f-442b-8fa1-3cf20a42a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1361829-c4c8-4d6c-97e4-6a7a25a32306",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcce39d9-baa8-4704-9473-033cdcefabb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2430a5-052e-4e1e-93c8-40e665f56b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41e556-d1f1-4537-855a-41ec38c66b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0327a6ec-a5b2-41e1-90e1-4413488c7ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45ed844-e536-4988-8a06-268b31fc638e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1f320a-5bc4-4b41-a608-3c8c08373a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fdef9b-72c9-4eb3-b237-8a20fa6d75d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e3da4-c63f-4c1b-a1aa-16419860a8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70477cc2-3ded-42b5-993f-a9e1b3f7c451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eba3b8-d4a9-40a1-b7e8-a60012a8e8f5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b037205-aa26-42f2-83e2-cf50b8b03c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a57708-dbe6-4901-bc03-e510685e7eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02609745-7cff-4772-bc23-9680191215cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f662bd83-6787-4778-9937-5c9961f6c094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76228658-66c5-4a3c-9bba-131a8af1bd0b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cc601d-c42e-4a08-a410-2b9fd381d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb304660-1b02-45bc-a997-a8ccdd7e442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0112393-8434-4a4b-b006-803fdf77f2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6b6891-f8a5-487a-8750-8726d327a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b17b85-1645-4a1a-948a-3eed5a4bc2de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f40a4b-fa01-4153-9719-0027601ebd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e355cf2-c137-4fbb-a525-eb7530805217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c7d146-1827-4641-ac7f-bb34b6ad23ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33001e0-c78a-4a70-a594-76f0f6efbdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc9775-0b88-46e3-b9b3-d1acd15577f9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a284e97-f976-40e1-a355-99b67f7a3729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e95abc-44f3-4064-9399-638820c29b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15fc029-e395-452b-b990-92dae2393a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33edef8-600c-4ed1-a909-73fb80ff3570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d0c79-f951-4e19-9703-2a15d55c6992",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a351c55c-ce0c-4e0a-9eae-2f9655765c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7f4eeb-afed-436e-ad6a-37bb62097ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4203d636-4bc2-4446-b295-aac5c856a51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e365d94-edb7-4281-b2bc-2685fe11ecd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8349a2ec-c00a-4aec-af3c-fd579050adab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e30c87-6462-468b-8b41-78debe778485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f54168-1219-45e2-a45a-242428015252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24beddd-9b55-4f17-9b42-887ae367e64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b126bb6-353e-4883-8fdc-68c599c0662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e24ea7-9a99-41b4-ba9b-1e8678aa9d2b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7c8660-ff98-4e9e-bda5-e0440e24bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdce7d8-3719-4567-b7ae-b6901bb4ad19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e96d3-e491-4f9f-b970-b7deb443f633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a46c69bc-dc5f-43b1-9d8e-b3faaf7d484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f528f129-2505-4dd1-bf45-9bf99c254fc9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd1329-b3e3-4129-9364-861839d82568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f388ae7-24aa-41dd-9d33-82937afda1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511e08e0-98a7-48c1-bb81-8599670abf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d50b96c-bacc-4c16-8ef7-29aad5a2c055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12632f1-8a39-44da-b1f9-e4480c3edfb6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69552c3-20fe-46c2-bb9f-68f6f3c2fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa043c6b-bcd8-42e3-9caa-597fa4f1aa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9432681-c783-4dd6-b930-148704e6cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fea77b3-cbb9-4617-83f9-302318dfd6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f1bf3d-0a4a-4c03-91b8-e19f462264d4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c0b4d1-d6cd-44bd-9dce-dae35b9a9c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c4378c-cc7a-4283-a60e-ec9090ccf265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b111ffaa-063d-4832-9cf6-b4dcf359a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd766533-763f-4f26-aa02-1eb7b777d112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f582a4-5aea-4900-8690-1b2e0ab283d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3918e578-7dc6-4592-96a1-37e69f31e641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81d02ae-1704-4d5c-8019-b879e4022d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9d49dd-4596-4c69-8514-d0de6acbd135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a245d0dd-7246-4695-9bc4-04f04f43e298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477366aa-d90c-422c-baa5-a60640f75479",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b87d6-3276-4de7-9f3c-4d3079683318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caba5f0-289d-415e-b724-f9c55dffad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9503979-5b22-4c25-8bc4-95cc6d537973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0be824d2-2d28-493d-bfd9-850c4b1f3891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5337d7bc-e2d9-4a94-9bf2-831892cd8012",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc94535-a977-4455-bf42-72009b76e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3fef6e-77ce-4c52-a354-7a22d7944e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea47da4a-c26c-40c4-bf04-95802422ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d91e0ca-9e18-4149-a32f-58775be3744d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d93e1-6cc5-4fb2-9b59-d61bfad73e22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb129a5-9358-4db9-99ff-e4a91b2084ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13a8229-e7e7-4b76-ab6f-5c204991cd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0dc31a-d6ae-45fa-8655-cdc9dd7512c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7bd4a1-d5b2-4e83-9963-38ce8569b18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26672b15-7e9d-4578-9921-6949c0155cb4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc616261-ac66-45f0-9d33-a85885e603fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c65cdb-b424-45d6-b062-cdbf3d41bf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aa3526-a4db-40bb-8309-eec50d3ec1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6838d6-3ddc-429c-84ba-15901acde712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b57e526-c698-4365-b65b-d073f22998c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5aafd9-f6f8-4ec6-88c2-8546f4ccf4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbc9e26-6137-4d20-ad1b-bc715fcf23d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a42876-e852-4653-b7f7-9aee6f0cf463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "554e7d01-5ef6-42bf-8ebe-19f7c64cdaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c564e9-efcd-4818-8d17-a3b5c859741e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e002ad-ef0b-42ed-a385-0017f5315599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03a24f7-0261-476c-9ee6-73672cc17a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbbdafa-cae2-4387-8c72-87edd9a8128d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c51d25-2dd0-4055-8aab-b46836b97c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12baebea-0024-4d96-8e7a-2bab945228aa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d0a73b-77d9-4f85-8d02-60dafff316a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbb676c-4c49-4c01-8bbd-a4e8d8bca7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40567412-edc9-48af-a528-7fbf17b027e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd9a765-58bb-4d1d-80fa-f4914b8eb2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9415b2e3-62ae-48cc-a80e-f76530182873",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e4e86b-e358-49d4-bdbe-3a45b42fa904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "95e76728-fdab-4f5d-96b3-12ebecde2190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c1e22-376b-4753-9669-260a0b75c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b00be5-a776-42b2-a497-253bde139771"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7208ef5b-de96-46ad-9952-6049d9302023",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43f0845c-8a4e-49a2-8875-60f4df478381",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6d39d9-42c8-40ab-8dd2-759bf1777554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ef1b83b-716f-4fe7-b5fd-1b86548c8494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef5a192-d1d8-4d02-bbb6-e2077452d7a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "84b0761b-64dc-48bb-857f-d7924d003ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7958e773-0342-45e4-8f85-76b4aafd0417",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e7a961-4bf3-46e4-a087-e137d81c01ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37b2a6e9-46ea-4f9f-aa22-f793be87b11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b79c11-87e9-4c7b-a324-fcb5def8840c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d08568f3-b8b6-46f7-98c0-674f1a580616"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed0b32ef-92a3-4cba-8b1b-1721f4a6c754",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24de6572-a377-4ba7-865c-759b40506356"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e3550d-522b-4d86-92fc-da939c52712e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8764330c-0469-4cd7-93d0-9c6a8b43b46a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b074498e-cc0f-4c2b-bb4d-24ec50a358da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "098973e0-58d6-4839-a277-7642e93692f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc302f81-55a3-479d-9de6-d83d73167c4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3013a32d-b726-4012-baf4-e29b6ca47c2a"
                }
              }
            ]
          },
          {
            "id": "5d51e043-84ac-473a-8998-4a95ab0ac54a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a74128b4-3c93-447f-858b-36f799726397",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36f318f9-8a7e-489b-a6a1-3f5e69e77d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ae04709-516c-48b7-84e5-49e2d0e44d60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbe97bc2-a6fa-4690-86ba-4efb071ad06b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3deabb79-1ba7-4f26-aa7a-24ff573f4f0f"
                    }
                  }
                ]
              },
              {
                "id": "eaec5b2d-a808-4b7a-af0d-5c19f05ad9a7",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6803f0a4-a9ae-4609-a05b-fa794029be94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4847c132-b0ae-404e-b543-0e8c55eaa0d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03399c1-02e8-410d-99d6-d7cd676bec1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "475bdaf5-af66-47c5-bd25-edc97483e7a8"
                    }
                  }
                ]
              },
              {
                "id": "144f4eaf-ad2f-47eb-aeba-d98c522be59a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d6c448a-6f73-436f-ac2f-e96d7a9f1df8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6dc6664-d7f9-464b-ae62-6d57ba22a72f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e61be2-15b4-40d7-9779-62b965190452",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c4f95be-23f1-4c25-bea4-4c18f3e74de7"
                    }
                  }
                ]
              },
              {
                "id": "3145f962-31ce-45ce-bd44-f543d0218a6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6e70a7-4d48-4746-9959-f9cef8e2382f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "647c4695-597a-479b-9272-5eb612f80ae1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c35914a-02d1-4c8e-9c43-5543b79087f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "82ed5bf9-19c9-4b12-9f1f-b3923ba53bb0"
                    }
                  }
                ]
              },
              {
                "id": "69922a95-8ac2-45e5-8da6-106bc080aaea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5e466be-0af4-4998-8b23-6e9446a6a122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7680263f-4f2d-4434-b998-a0296eec4e80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "872151a0-aa57-4449-8c46-001c84dda167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cb711324-5bde-48c0-8f25-e9485f5eba85"
                    }
                  }
                ]
              },
              {
                "id": "8e8ac0cd-9710-4562-8c7b-9532ba90481e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7758adea-3c8a-425e-8b1c-8317d98e2f0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08824ae2-e394-47cf-a52f-1f846fb09cb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634771f5-126d-46fb-8ecd-a84a5e295b36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "711a6a95-d18f-4a12-be98-4f351f4706b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e5d76db-1527-4a98-9ed3-57ade37eb04e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a65560f4-b908-4ccc-8ecc-68b6d307e36e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00993265-4a24-4f98-b147-c5ef0d278065",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e710d30f-3a11-4b21-8bb0-ad56ff383ced"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fce676b5-3b9e-46e4-95f7-7229fe43f2b5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7fd10434-9251-4f75-a913-449be48b7a69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39ec9cc5-39df-4951-b159-5de4a9c2331a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c47d04ec-9d6d-4e07-a4bd-e7e9ec9f2f60"
            }
          }
        ]
      },
      {
        "id": "bbbb0ba1-8ebd-442e-b277-734a7c0340b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0e457e12-66f1-40db-a07c-83acddf1e426",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b46502ba-e65b-4da7-ad84-72e2d776fa22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bd274e9-272a-4545-9637-6b0e975aa1ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeb5a23-7d99-4811-9474-c86f98bf5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fdf654-5e37-466a-9d46-f556f15a2f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4be885-fa2e-4a39-b331-cd324af35e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d9a1ed-f56a-4732-a5e8-b95672aa3adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c366ef7-85e0-4ac4-9ba7-11599f554cc7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b216ed-653a-4000-9528-dda5899d07e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc427d0-1503-409c-99cb-492a4736a2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f634e5c-b87e-447d-845b-41630237541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb07f0e-3a1d-48a6-89be-8f7b140a7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c4f8a1-4b17-4ac2-b00c-8512d746852c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1995d17d-fc1a-4a47-ba25-10956641caea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fac44d-010b-439c-8da5-e6c84f7bf5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea9eaa-ec52-4585-a440-1d46a501147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad233575-bdab-46ef-be7c-644f11aa5d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c097ae-a32e-4ed9-a42b-0260ba94cbea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2c109f-19ed-44ca-8d8a-c739b773a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc5f139-48db-4415-ad10-d14d827e51aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422de1ab-09a2-47a3-ac8e-40a730abc6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb654e4-d017-4d3a-ba55-48c5f50e7380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386aca8d-5d15-40f2-9855-2d45d70dda29",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7942e8e3-d611-42ee-a86f-d047dea5e352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8902f3fc-ed5e-45a2-85c2-1524c7e54bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bca13ee-aae9-467a-8429-e78a9c7ead02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e67da51-8171-464d-9b3b-7dec79166d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f204df-0356-45df-b88d-8a426c24da79",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daefa0bc-e41e-412f-ae40-f6bef4d0a237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d9875d-9185-4fe5-879e-61a069b95010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32e395f-ff03-418b-a9c1-e4d38ba12785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9840e1-5d3f-4bc6-ae36-12ba366f64c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d62db2-f9a3-4451-9aa3-89693ed46aeb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf8d87-68be-48ab-8f32-321a1a92ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d689c69-06d2-43ca-97e1-70899d3bf31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3c3908-300d-43d0-888d-9f2e7de70b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed78ddd-0681-4dfd-863f-fc7ed96af025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b2c3f-102c-4647-968b-b20db5361033",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29613290-8819-4ab2-b63c-e05f39f2ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861dd494-3f2a-4aec-aefa-39697ade35cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a334a2e7-3211-4b50-9a4a-cbe2d7161bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83da6dd0-2ae0-4786-b395-36c57161c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e19e7f1-957d-4b5d-85ee-28a886437648",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697e494c-828d-45cb-a2e6-789d99d8d0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a3f63c-6963-4a8a-9813-d8ea710d6a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9239dd-52c1-474e-8a07-eeb7a69be309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "548acb66-3964-4b02-9be4-0825533e604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687cac45-c072-4f7a-abbe-f1a140249c62",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8aca4b-2ca2-46c9-b75a-1df84f2c4a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74981c6-eaa9-4c9a-ae68-a5def92b7984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90821047-cf5c-407c-becc-dc49001bd798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62eddd29-dadc-4144-8dab-e0fedbd93f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a11a68e-1377-43e3-af60-d0bf0efcd2cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a152578-cc9c-419a-93d2-ab258382376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91272d8-1315-4201-8368-53ac363733e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52881fdf-d99f-4432-b50b-569dc14f544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "58dd4fde-34cd-438e-a839-ae72e09e2634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71d7912-af77-4125-a84e-168d5c8aaadc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87ef726-0b0e-4027-9dcc-ab03b381a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a4c368-9fb5-4022-bb63-a48bd519ce6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d5541-5c6c-4134-8f9b-d254641d050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc313ac6-4149-4f93-9bc7-39c689bf1fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67659344-89a6-4b9f-ad45-617d9b31ac28",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d488bc-c1ed-4fc7-be88-a752e6981594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2428b9ad-07e0-46e4-a98e-be821ccc0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9256c40a-f85c-4ad1-a796-7b00f7b7d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64790e7-4245-4ca6-82b9-d124b0038fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131d638-fe70-4819-a62e-cfde8266c3b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda018c8-2e42-4d7b-9a38-3e3067c5a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0811ad4f-1b40-4893-bec4-c49cc3adbabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0532b0-eb17-4982-9844-7e43684361c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "527d76fa-8e60-445f-a2e8-7bcfa86e5a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97d25e7-d7c3-4302-abf2-67991c716f23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c631ef2-976f-4cfe-a10f-bd7d247bca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c154e5e3-f5b0-4117-b4de-5ff0ce095edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0548bcb-1653-45b9-bcad-f32e6ac50beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ab6f30-fd2a-4fbf-a404-99fab478c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3057647-3714-4952-ad38-a2e031115257",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5267c-f8cc-4e67-a9a0-212f105b2d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64692e6-9311-43a6-9f67-5eec2eeb04b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a5067d-c4d5-4a13-a8c6-059c3e942f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87be029-d9be-41ca-b1a3-c94e4419f083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3814cc-cd89-4b97-bd74-23da447f5388",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b63d6f-bf18-4a1f-8764-d708bc52c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a106f5f-a34e-42c6-acf2-56a3b6eb5f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8d9632-74c8-4f46-b73e-f5026a83c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4048af1a-5880-4c84-ba98-566237330e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae816ac-fa09-4024-97e9-1db7e0ebb4f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a5724a-2ab6-450e-9cf0-a023072e5df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2e278a-48f7-443a-9e6e-fa2aa69a0a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8011f066-2987-4d60-a3bb-b8cea0f273a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a6f3df-e823-4bee-9f89-b467e07b611b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe4601e-0261-4e6f-842f-78f133bf7a5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994fe7b4-0509-4c8f-b226-cc36b3e22194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873d6171-093e-41a9-8d8e-de6621236cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862f5053-100b-4987-bc0e-6231affd31c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "897a23c2-701a-44b6-a5eb-9bf8c3b7b266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1c058-9a2e-4d38-9c36-15405154e4ac",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9eb443-c8f0-4c62-9971-e92df06264ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1bcab8-06e0-4ada-9fb0-55a117940dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7fe4ab-c922-414e-b7ce-35e4ae650e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f7faf3-36e3-4e0d-9088-835ebca8f1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb35eb5-8ac0-451f-b0e9-aaf422b2e5b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1307d3-44ab-4e0e-8fcd-ddba9bc392bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b47e02-75c3-4518-8a1b-2900540a4712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eb724f-3a0a-4f35-bf84-3a3380830ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f07d4e7-821e-443f-a39c-5d756a5c12d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d1e461-5dca-47f3-9e20-418f4a7cf02d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefe508c-01b8-4384-b168-f8638cac5571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433947f9-01ac-494e-8283-f16d1ba5941f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ebbaf-5825-42ef-b9ae-f4f1d88c7694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff4b029-3f17-4619-9c47-69c935749898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17f28d-3860-42f1-8641-4784f46cbb41",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fd7ff1-7297-411e-a101-abf1ecba73c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b80058-cfbe-450d-a143-40df40db429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc5c785-2697-4d15-9f89-f38d70506b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d418f640-8dd7-4cc0-a1a2-f74d7bca0e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9527ac84-274b-42d7-bede-a200de775e4a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105d4b27-ebc0-4c1c-a892-e03a1fa8e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9343899d-705b-421b-a324-8103fd31aa65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4289c6-d00c-4693-b8cc-7f4db19b9c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb968faa-cf6f-4815-a6b6-e6b56e59bb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487ebf6f-75d5-4d0e-8b6d-ead09568ca7e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4328ac3-59dc-4f76-a881-219b67f6b071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b928a0-bc63-42a6-8301-b1dbdb9ee801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944b439c-4a10-4dcf-a03c-28e070a85076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7c760a-4838-488d-b84e-32360c1140c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16b1ecf-ab6b-4fe0-9890-8d3f1a775de8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a89e2f-5d90-4286-9a3c-081251814329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a216db11-85c9-40fc-b51e-05df19f020be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef027f77-54b5-4d15-ba0e-1548cb7b39bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b403632-45ec-4452-9edf-e1be4404fef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cfcd0b-9368-48e8-bb29-1cd42dd7e46a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0518c9-04b3-480e-9070-e49bd75c6af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48473adc-d7b0-401e-aa68-711b05c4c5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a654632-7d7b-403f-8f0b-46bac4ee8385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9841cf-9ee4-41dc-8087-1a09dfff7288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e0e4b0-33e9-4d20-aaa1-85ba8ad98cf5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c095e66-4127-4ff4-9e63-f8387e603771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da69eaf2-980b-480c-84ba-c0c98f6958a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b33e7f0-8620-4b13-a98a-2b2ccb85f087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d46c67-d3f3-4689-be58-4d11a9561480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ff935b-c242-4530-b878-ac49fb4dfafd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d97576-140f-49b1-82f5-477921be3523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08a021c-fced-4379-9a41-7d35203f5381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a78bd2-6c99-427a-968d-20ce4f4c468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "129b936f-e0b1-4c25-9490-3a1eea8fa2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea61fec5-01dd-4eec-b8a4-6cb0382a84d6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13953d2a-5a70-4cbc-b6d8-5a0499a40681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed99d6d-e0a3-442e-babc-a87f665f7a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2797a0-17c0-4c2b-990c-51fe845b50b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f248dc5-e2eb-4bd7-9950-85f0e53c3cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ffa98-3e94-44aa-8b51-7bd61cfc4e8b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae91964b-9266-4a13-a0e6-11552e417864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54be7d51-a712-48a1-af6d-b65e0fb02a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445ec0c6-18b8-4432-9aaf-0bce9a8be97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5476e7fb-ff23-4c1b-936e-53e8b6bb9074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d37f94b-f564-42ae-afff-9a9febe397a7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb2e6e5-6e58-4840-acd4-ee88db6c685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a2007a-608e-4caa-bb37-c237a8d54dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4dd3c3-6b48-43a2-8ba2-e75813241552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2c042f-7e81-4553-b591-558982424d11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2b79173-4d0b-42a3-a103-299c7bf628a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "931956b8-fbd4-437e-9b07-64ca0f87616c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a33936-6415-47ee-8c39-d43790fe7e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf78335f-2110-464b-9ae4-6e76bee0dfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cade1577-548c-4166-a0d9-56847e45a444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60b380c5-f4b9-416c-afb4-0671d1a051a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21023b94-4512-427c-bba7-e001e8ad4af4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982bb6bd-eccf-4f66-ae38-bbbe4b02f53e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e2a77210-3465-4af8-80eb-7eb513cc4d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6c5100-3f3d-4f04-8b9a-96275675c241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d94d89e0-ae12-451d-b3ee-9a976b4030bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574c04fa-5754-4f8c-bf57-92c2c9ede6b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e72f5781-a30a-45f2-a49a-b0b42634bf1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf61117-b92d-4120-92bb-b68fffcbb475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59c88f94-6e52-4d57-abb0-4aa2fbe596dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caa037c4-28a7-40bf-9d95-d81caa13bda2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b35ca223-05e0-43ee-a6ea-36121d6c9806"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deb862bd-5a4f-42c3-844b-4de954cafe1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e0e2a66-6306-45d3-9104-de19bac77337"
            }
          }
        ]
      },
      {
        "id": "86ef8d09-9c5d-45ad-9f14-2a850ce58fd6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc4d9f90-87d1-4f13-9e09-c2300d42c6b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42f32bbf-8b49-4106-b560-988ee4236d28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0ebc4eeb-490a-43df-a694-26072d4c58f3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada1d0c1-5ef9-457b-b746-11bfa9bc6b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00f19e7-6fc7-41b7-9f0c-2c71e6a0daca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d4a38-0312-47b8-b99d-41a207b2c039",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b71dbfc-5f28-4015-8ad4-da3e1e619148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be81d9c-0a74-464a-ab25-1650f2264f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5903605c-f9fb-4a71-a8a4-7314127d2869",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae509c5-ecc4-42ca-a320-f10c41b664f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e616ee7b-decb-4a53-bfaa-961a386cf12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f90ea3-2bcd-4c25-aef8-5f05de80441f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2f992e-e4ec-41b1-a524-5c87c7791036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9225555-cc7a-4859-a9cc-ff16b3bb09d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80d128c-a6e0-4b0e-91a9-feedf53cb650",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeafa16-4826-4425-97d2-6766f38e8f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a824cb5-1210-4e71-8bd9-fd45da99ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9907d84f-67ea-4d97-9d06-3faba6427f16",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0769c50-fca4-4df3-9e67-39c0b47c9634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfaf27e-1c60-4a58-8356-e2850ca42c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a580c734-b02e-4102-b208-e09f3a224470",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07f8cf1-3f39-46e6-8adc-2d362a70c2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594d041e-b09f-4dae-92c9-2864928d2e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db1ce4e-97d8-488e-9d24-396b7cdfd7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6fa90f-12ec-454e-99eb-cf1547d9049c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b0109-1fdd-49ee-914d-6704fea8e928",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0a0547-40e0-470d-bc0b-131a5b32f409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48018f87-cf9a-4731-bb8c-30f434a01af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f84ec3f-5360-4d7b-bd72-e13df849fddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da718959-2f1c-43cd-8e63-ad2ac5ef8f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a4e7e2-7eca-4a92-99e7-6ea611adb4cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782098cf-48da-444c-a80c-f7e71d3551fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe178ba-dd94-4ec5-aef6-36f7fae95e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b633b9ac-afbc-424d-89a4-613e686221ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eba34c0-045c-440f-a60e-8cc6f930bba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dcdb9a-d1dc-4413-b76f-2e1d6d224221",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09f8bd6-3d87-4cc0-96ae-eb4dad4d3100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ea1758-9445-4471-a784-c2de10f3dd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aafb20-b8ec-4a10-ab78-0362f88639d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4e6a69-abe4-4368-a4b5-7db700156862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d5ff7-0316-4feb-92e1-95ae94e219f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c173c4be-526a-413e-ade7-3b4154018e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4caae2-5d07-4df5-b8c0-f03600351cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624037a5-7759-461b-8c06-3701f947fa9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818adc52-fb85-41f7-ac05-b8040530d999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafdcbf6-9484-47fe-a906-74de051f7f43",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab4351-3a9f-4dad-9ce2-f30062b7253c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ae7256-7f9a-4448-891a-930317f82844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a449de-106e-4c26-ac8a-35bc06a76db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ccd38f-a104-4691-b641-2d64dc89a701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55df8671-e2b1-431f-8bcc-59f9142c0a50",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba912d0-71c8-4202-9e4e-f89a3909edb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea051cf-7602-4165-a629-d3912d7873eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751a5ef9-213b-4762-95e0-121effadc63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e759a647-0607-41ee-8b61-5c7369f1edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a988ec-3c6a-4261-bf61-0539f27d6b4b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1303215b-d7fb-4d49-9421-275e6b6f91a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0910a3e8-989c-4efc-88dd-b089aa457302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bdb08c-761e-4b76-a254-ebd6128fa264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d67a327-0dc8-4d0c-954f-801df2b53e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652d3801-422d-484e-bb93-17bf6376700f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dbac29-27f0-4ae7-8319-3c3940b41a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148bdf1a-e0f3-40dc-95e0-17244c29e161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214b6165-53f9-4447-9f7c-8b5afacfdf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc8b7e5-57e0-49b2-84db-78de50eead78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facd4892-1824-4f2f-82b9-650b8a52270e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de90ff60-9b90-4105-8b86-52810aa06cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3eea90e-4547-4672-834d-3571267a7959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b61c02-ec36-4e40-b897-966b557597e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a3bba9-fb93-4875-b412-f39f5eadfbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb18b13-9129-49e5-be17-ecbbfe825013",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03af232e-8ef4-46e9-ba25-5aad7d14314b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3d1b81-45f5-4d49-95b2-72186bae053b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e071e0-47f3-4a27-a880-3fdacf84078b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631ea660-5fe7-43b4-8856-c6ce663c90a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7345092-7ee1-48a3-a32d-bb5758f422dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9059337-d9ae-4679-9afa-fa401f839e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72806fa-6bad-4924-ab47-a95c3c45d7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa6e1b6-11ec-49bc-bf7f-320b3cedeec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82890276-20ac-46a8-95f0-6c369bb47aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69694c1d-843f-4871-b145-5418b025b620",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6cd405-fba3-428b-b570-6bf04398c793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273756c1-4ad4-43a2-8182-b7337b4734f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aabed1-f463-42eb-b55e-7aeec321b6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1302d8c4-d470-4364-937a-55dc6323ae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c18e12f-fae7-47d3-8b09-65950d24bba8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8317d029-502b-4478-b49a-d9f585d8fcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74684608-47e8-4c3a-85dd-4ce054f95db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92a8e11-15c3-4c6a-a6ea-c065defe7cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb76f0e6-f5cc-453b-a86d-d48d07916a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea5c7a1-4e96-489f-92d3-3eae03d26b09",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e42e22-b44a-4b77-85b4-b636d27abab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb105a43-311d-4d93-a56a-bd2157dccc0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae9ff65-98a0-43fc-8816-a073ab7d24da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433d110f-c712-4bda-9b50-3710700461d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad85426-ef07-485a-9304-e37b4346968a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1106fe29-b312-4359-8ee9-f7630d90cd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4322cf-8942-4c42-a4de-4baaee82da25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff07ac-d9f5-47f0-9086-c04bf782ca61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e77b7f-0e47-405a-b204-7164a8055137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377967b6-32d4-4327-a463-50eeb5011c22",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ff2411-6e9f-4827-a49a-8afb6b1d544a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb4fd87-8e57-4f21-9ee1-db1f55dfced8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f654d5-c9bd-44ce-9f18-2939b9440f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0e5675-0ffb-42ce-9319-8f3cc1c99d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6412f88-97ec-4206-a8d3-7d704036b02d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258e4038-9314-41f8-b67c-12dde1e337ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a1636b-6084-436a-97c3-db7cdd917971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a08b26-1df3-40f0-bb88-435eb277a87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5954803-e6a1-41ee-9ed0-1c5f19d00fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa358711-3784-446f-aa01-31f9506a5d8b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8336d2-8f17-45c8-bb9f-bc66590a10e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ff914e-4611-4e64-a0b5-439e15d0ddff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83616f7-7f65-44f8-843d-77d616e22ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d80d116-5bb8-433c-a128-22fe80677cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5dd2dd-a0ac-4de0-9cad-e29e413d28e7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2604d4a1-3232-41b4-ad51-1547f989dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c58fd8a-da3e-4baf-8649-c3a6307bd1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7839e-18b6-4122-bee1-d6498bb8cf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b7942-9157-44b0-a664-b6c9723cf08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f732e0-cfbd-46bd-8f8b-148ce5446fdb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f745d-806e-44d9-99c3-c883ecdb70db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec6aee2-c240-48de-9a7a-303cf940d322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf609fc-fbc7-4e1a-bb46-f680d2f97c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b7d925-3810-402a-a4d9-7b61d47eb653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7235bb-e6b6-4d02-a8b7-bcf91259fb6c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f47a4f-a7b5-41ef-9faa-47483aae8f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54784f3a-ac83-4c5e-b955-3c0e3e6318e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a434f71-90fa-4c6e-b429-4e88bc38786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0042cc9d-ab23-4bb9-a72b-77f43eab2c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b29d786-e25b-4c54-b0a7-c7a80956f16e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12772f6e-d5c4-465a-9093-eb9f2303ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c8bb88-607e-47a9-a468-15fab8064ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5f914a-3f54-466a-a3e4-9ba122e95dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece11961-5073-42e7-a2ff-40fbb2087f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95083812-683f-4945-a5cf-6efefad5522c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c7e1b-ed0c-4ecb-84e8-06581ba44839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79845e7-b879-48e0-9df7-f42bb8093cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fdf61e-ab31-4a7a-9e69-873f2e7c28da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607285dc-df04-40b3-a9f2-04d3b5c5f859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161cd39-a3f2-4d63-a0af-dc2878677823",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec46cebb-4d66-4768-bc52-297df620f41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de24ec3f-6199-44c3-9a8e-ecc52e9bf1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae862d7-b316-43d7-829e-8732d887b034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82260f00-74b8-4b52-b987-876bbfce26d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3696d388-870a-41f1-97b6-47bdb2f0f74f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9218a-aa66-425a-89c1-20832dfc8937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7462171-55d8-4557-b6f3-88a46b9845be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf3b7a-6db3-485f-820f-1e977216dff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b626ae-fc2b-40c6-910b-c57c406c62b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2390f03f-bac9-4e0f-a230-95f6c15ca72b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1079d5-ab92-4d51-9b40-b04c03031697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2709a01-1d14-4fdf-aee9-66dbf9a2637f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d215a473-d9a1-42e9-9138-c65404c06a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb435e14-3839-49d0-9b2b-4820c668bc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9f3cfe-5625-480f-9ea0-9510861081f6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd73cef-dfc4-406b-9c97-b5a903e06514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1bec6a-b90a-4c62-8aa2-051582be8eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a843f8d0-e76a-4694-8aab-911cc56e37da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9382668-aef0-463f-a00b-c7fbacfd7fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e02a74c-118c-4af6-8e32-e999cedf8f85",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d57de3-d7ee-4c3f-9916-2d3273f9cad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39260338-38d9-43eb-80b6-fd5b3c388762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0ed5d-6b82-4ede-9e55-c8e143a571b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366dff78-6de3-46ac-98b9-a170ac8e76c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd5ad77-fc74-4801-8c4a-665e904b8376",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcc7858-9151-4b94-9d14-d03fbed1c2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d063411-f0f3-4ccc-9cc5-784872160264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af8361-c416-4e46-a5a5-16ae14b75961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bac832-1527-4903-8e5a-b3455ff7b70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8fed2b-49e6-4bec-b93d-5202b60c34a5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d996f117-4955-4a1a-be4f-2ce87cb220fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f919040f-0db8-4eac-9785-003dc8d057d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1ff516-0a41-4717-8630-849ca4cf9e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879b8023-a420-4c42-90b8-a1de0ac45369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a4ff99-bfa3-4da3-aaf9-765749241cab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da1c346-9a3c-4a56-9d4c-dc9f0360d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a3e2b5-2729-4411-bae7-b34407593c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02f539e-0709-4eae-94f2-567e70c4a946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6362f7d7-02c2-412d-97f1-cde22327fb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a260056-08a5-4422-af11-61843aa3068a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f07ca5f-85cd-48ca-83e7-308ba92906b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f6b66e-ca29-4095-ab35-c422da503fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1acf788-f3ed-456d-85c5-9cb7e984b551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40f08e-0b2a-4b53-b3b1-090783d58c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c86818-060e-477d-aa9a-ccd155f3314a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443f5985-ec02-420c-81da-41ff5bbcbaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0d0725-0d64-4921-bcde-9a3739478692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc460b25-a78d-4573-ba39-4ae37413f862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2bb0f1-71b8-42fa-85f1-e45d04111fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f824b8-aa8f-459f-907b-cc2535ac9a27",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893775c2-715d-4d78-85b5-7b658d55460c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171c2571-00ab-4656-af8d-d591c520a0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3b70ca-7c16-4e0f-a2f4-15d5b662419b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f68ca7-fedb-46b6-be25-baa86a2d5ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275c2619-5106-4072-867a-f93566646e99",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc5944-6aaa-4460-9a34-a9fc54f58743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005c2afb-5e25-4766-befb-b3f26c53f0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b16b4c-c06a-4753-b331-8504f4c93973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dec7846-cea2-4d96-a018-b80ca706f5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd4e19-335a-4201-8169-381316a3e825",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c9b33e-2503-4afd-be69-271463ef7647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f8ff33-bb45-4b8c-a53d-64893c6c45d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eae403-bc68-47ee-b6e8-f7546fa37680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0d29b1-593c-408f-872e-d1e155e7406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78c0cce-cd75-431f-879b-fe4c7f35f971",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc3b55-081c-48e6-9ec5-58866a8f3248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8b9acc-4f84-476d-83a9-765101fb26ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e0c49-3e7f-4001-8a03-30a899f4f0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3848d52-29da-4edb-b7e7-c14dd0d35fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d21b34-89d7-44d8-ad45-80a95612926d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23481427-e178-4858-a6dd-ea5fdc34d633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77599e9f-a645-4524-acb6-2a5ef158f611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585048fc-7193-4496-9907-8b62957f6c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d5c43f-5ff4-4a30-98c3-3289c4d7492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e099aad-d7b8-480f-b620-df3f2b0f8cae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8c6bb4-0fa1-4a5f-a01b-914673d3d084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6261360f-928b-40c3-bb1e-1675139bec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef60712-611b-460f-90ee-66642570afd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ee624a-6e03-47a7-8133-e35a83663b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d678e11-7c81-406e-81bc-6265cf4b73fe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6020ea2-38db-4e0d-82b8-c34d97171976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa17d8c-ee03-4dc9-b713-5b9d8e6cffbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fdda8f-fe6e-4844-af4b-bc0a563f77ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cee8cee-2fc0-4368-88e2-ec8572e209ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f9e3e0-a52f-4f0e-9f19-430308ad24e2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9e275-44c0-435b-9b5f-ced470dcbeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0551175e-9172-4411-91c3-be0fea555347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df5d2d4-152b-4730-9687-47847686e84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19f0df9-29ba-43cb-a2ec-43f48384b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5222a98-17a4-4882-89a7-a559507d4902",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5499ddcb-2ca0-4914-ba18-4f51d5d9373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c1b0d6-b6de-4389-aeca-4addf92438e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62e8876-901b-4157-8094-7256d259be7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e6b1e1-2392-4156-a113-808f49b6d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcd787f-53e6-4d86-b6ad-a9852f77efa6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2d083c-c731-456c-af21-0db1d49d7f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede37ab3-eb0a-4c20-9af7-cd516fa17b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4ac44e-6509-46c0-8a2a-6ba2215ab2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53249d2b-9c48-45d6-8c33-e2be35a7c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae603373-7eba-45e5-97b8-5fb897dff71a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8289cd60-19c1-4d4a-8a88-051df808e6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54be99ea-bb28-40e1-b607-15cd7500f60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1684f263-a371-4ecd-923b-57313df55be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43404b4f-95e6-4fc8-bb35-142ea8d3562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0997fb-7537-43e5-84e9-f869a06409a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e569bb-eb54-46b7-9b9d-259e4d04510e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd8a1c4-9b3a-46e7-9f0b-5172351bc6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ddacc5-1e5d-48d1-9729-afba5daf36d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a47dc55-fe3f-4c3f-b164-a351b4576c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81a61cf-ebab-49a7-925f-7699fc4a44d8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc04c946-02b3-4bdb-b475-e9f490fee8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2972b724-8083-4502-8ae8-6ee514eb97e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b32891f-a0bd-4c5f-9055-64d7f44d9272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4ef6af-4f2f-4bc2-9bc6-75a5e835602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd400393-e503-4f38-a9e8-d26873eb0d1e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b930610b-ece0-49b0-9a5b-751d2390bbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c925ca6f-8f46-4e9a-ad4c-11865e3ee379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1b068b-8259-4ae9-b5b5-4d02f0012ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8905852f-bd03-444a-ae48-24811c6059fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a474041-97b6-456c-beee-5677becaee7a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316f1961-bcda-4f0e-b758-16a4ec7ad3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf9f232-c079-401c-bb7c-81d707791e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53079f64-f3e8-4c79-bbce-4b9dc5aa8b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e755d6-6f06-49e6-a158-652f6c96f483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ae2bd4-c52c-4580-9436-31103b645534",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac22194-fa3d-4f91-9a68-33457c1a271f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aa9f13-68e9-4f99-bba7-3ac107224167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f916e6a0-319f-4780-8336-7e9d982da24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0fe52d-bdf3-44f4-b044-23f29b14c489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f5ebc6-dd13-4536-a0c2-3972d67e36e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2966b1-0b37-4ca5-9085-0266375fa4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2349582f-e14c-4a62-b275-a56d86b925bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa1f955-09ee-4ee8-8642-695806b0a9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a0755b-168d-463b-9f43-6e65ec1c8e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bea74f-7dda-466c-b2fa-0b569d55ed1c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa38809-1ead-4a8d-b8da-a8c67359f1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef72f06-9508-4969-b276-790ef8769afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad91cafd-7bbc-44ca-a10e-164492fe26b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf8b6c6-ecab-4ce5-8076-75dae2816004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ffc6a0-ee4f-4ffa-9fe6-ba408afc871d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a5b3ef-2dcd-43c7-8bb7-0d43b9d75b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e19c43-db33-4243-ba5a-bdaeb22a0893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ddafa1-4e5c-488f-8650-a5627cb6dcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023824a7-55c3-4975-be40-46ad8ae22800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcb7a2a-d9e5-49ce-87cc-bcadad4c044c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaa72b7-b6d9-4224-876e-6dbfc774d02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3c468b-fa04-475d-a01f-9964bc328799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6239e841-81a9-49c1-8374-7e60a7d56fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0241e9f-fb0f-4a8c-b776-cf4ab96d0ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be572e10-cc97-4a50-af38-bc0f3780a9cd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4837c5d7-59d4-4438-b0e7-a8da0881255a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959fa3f5-03e7-495a-852e-6d7dbae3830c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc2e697-5e8e-4eaa-aa71-d34aa935380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc88e36-10a5-4ade-890b-f19820f153d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa4434-a9f5-47b9-a14f-429e23d7887b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dab6d3-96a3-4e91-800f-660aec936a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d398cf7-fbe1-4f12-8176-8734c49088ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9837b6fd-fa20-4eb9-88b4-a7f769efb6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3fa536-7e4a-4432-a51d-a2cb368b0552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae194e57-b546-40b9-a69a-bf0f6efda7a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d526532d-2ebd-42d1-9f3d-7615af831044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af4d326-412d-4da2-b0f1-029a2ff3a9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6a5414-56e7-416d-a9b8-8ba5def839c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58c4e16-4be9-4874-9ab4-df96bc0632b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceff532f-b0b0-48c5-935f-727c816d0b0d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce463cd-0df5-4d17-9705-ec046ec0d436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d37c4f8-76ef-4cd1-877d-73a603169453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101d26c-2565-4960-ab77-dec5b82d2226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab37e19-07a4-4fab-aa59-9f03653fb03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3522d7-a1be-46fe-8e2a-a1ebd5cb37d9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc462f25-0024-437b-addf-178677bb624f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c279595-1130-4407-82ca-a35d6276ba17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd28ec-7f52-40c2-81b7-bd9611e3f7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f793da80-4bbe-4e13-a8ed-c72571b80d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0fb522-1161-464f-b4c0-105a1565c7a6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a8b744-7b67-49e0-b5a9-e2e5b7272081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d66e847-9ca2-4d86-8875-f0541d55b78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124265f2-41ca-49d0-9c58-c21a5d332a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d662c4de-62e8-4c1b-84a2-00ccfdcb39e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f272a-4fb3-4e2f-bd2b-a33fe62fbc22",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72643393-abb3-4588-b786-575efb0f7bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85fb6fb0-0c57-42a5-9450-43d3bfffb3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515b9f0-a7c0-4558-8d70-373da5d723a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351674c8-3471-49e9-85f4-1e4f46779ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00efe0f6-f065-4b57-9c89-3597989e86b6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3b6cda-dcf0-441f-bad4-cedd174c44f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab54a44d-5a59-481e-a039-39c55317caed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a32b5e-ad7e-4bf2-b804-89ae6108fe51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066172ba-acb2-46be-97f6-2b52785f5353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b617cea-24c5-4fa1-88bf-6d3d3bbc17c5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d135841-d4ff-4ae2-bc93-aa66bcefc2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4435f5d-e37f-4a1d-b561-737b056c8b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199e5ffa-8315-4dac-8db1-7031d7f1a151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb95bdc-0514-476e-bdbb-35280a6c5414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed69a5a8-742b-4e38-8fd9-36724f9bb4bf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3525129-c2df-4d59-bfea-a5375bea8510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49f9651-55cd-4815-8b43-37c25fee2ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ee7f20-c6ac-4756-811f-9bdf19148978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03e3e3b-2f76-4757-a32a-452db559e1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36441593-97cd-43e8-8edd-c17022b880c2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2788c994-674e-4e06-933d-6169c54b5fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f240c294-6264-4ec5-9937-bfbf5804733f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f517515b-20f3-48ea-b10f-f923165f245b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d306b43e-8958-47cf-bd39-e4d00ec7fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5657d623-b02c-4b44-834e-18f0fdc61daa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d42a56-3100-49d1-bf98-98b1f9133dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f36a94f-1e64-4137-b4ab-a1bf596e95a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c664b-e267-4a71-9c89-973c6400164a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74cf375-5f74-4755-b6a5-e69b6c29e808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bef6d2-53f6-4aef-a0ae-fdb26838d33c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1785a22b-4035-4047-8f54-f05ec3c87c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd306ece-6bd9-480f-93e5-dc332d2e99ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102a96a4-e55e-4f06-bda9-00d57fb8f86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909b21c6-58f3-4867-a1c3-f0cd8c37b520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9100889-02be-4eca-917f-9b95bf07749d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7a4110-a455-4dc8-8f94-8a97014e518d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4c7455-3f5b-4258-ba16-7f7c3b56b22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0566ecc2-41a8-4585-b74c-745ddce69176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b65eaf-18da-40c2-9ffc-bacce90bbd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ba1457-e5de-4dd6-a25b-33fea7d7f67b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7935b5cf-af34-4908-9de0-da2cf7459837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092c843c-dcd5-4354-97e8-94616dfe2e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208e79b4-b0b0-423e-9278-c094ebb50e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f873c657-48c1-4179-92ee-2e5416db2297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e663244-64e5-4978-b394-0ecea87183eb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a6115b-1a90-4fcf-93c3-847a1a0d4aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11f24d8-7668-4b9a-8c4d-c5a529f2f127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9675eb98-cea5-4cf0-aa36-9289980f4f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d83d0f-c375-4066-b927-00aeb49473fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f340668-bb20-40fc-97fa-40721dbd1196",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3a4836-1b7a-4a68-8683-3de27f245b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd06fa4b-b8c2-4992-8cd7-001febce5dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ee4900-f9b7-4ebb-9a9c-15c150d6b10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46038734-b36b-4d82-ac9d-76c593af7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8d72ab-02f1-4b9e-8c2b-7ab229ea49e4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c9a8dc-ef72-4591-bce4-11dcf5ffac37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f0b720-49e6-4e2a-9323-958466b91f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcedacd0-a144-4b4f-b8f7-9d2e32da9247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf528d8-891c-4083-9b30-d5ccf006a2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9d3698-b53d-464b-84f4-e9d064a53f14",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30febb4a-bcb0-4712-b7f5-ba91d6f4f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020770d0-f8eb-4444-a4ba-2c73d1f6ab3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb86b45-df23-4414-8b74-db29830aebf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7465098-323a-45aa-bff4-1e3bb006e458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93da5215-12c3-427f-9c79-4a3ae07c7f56",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ee9483-3b44-47dc-ae18-a760cce09bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33a418b-ce64-4d33-91d6-221b5190c04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea4ee4b-3ac5-414a-86e9-7baa5a3017bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749ba1c6-7fa2-40d0-8b8c-f68c0a56614c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f04d23-4fe2-47a0-bda0-760d13447076",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458c24d3-530a-4e9d-9fc8-82a238951c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14adbd9c-916b-4986-8873-eca7d7360859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc2a63b-68a6-42e6-adcc-0dc1ba51f594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce47c53-10a6-4c5d-8eda-9df9d5df82d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d8d618-ec05-4ba9-88d5-72e65eeeaddc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c26ee59-c169-42cf-a250-6019c5db48e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ceb2e55-2e59-4e89-a397-ae6434f6c368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8dd5c3-e21c-42ad-b567-c22791c4cd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52b353f-5c80-4c3b-9c1b-9c010b25209d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe599881-0e25-40d8-ba76-d674da3057f3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69609ac4-11b8-4de4-ad48-9ba9f55310dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ae5d98-ab6e-494d-9d4a-775179fdad98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccab49e1-b8a4-44c8-bf7b-7366516e4cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e570e763-6c2a-4027-88b0-02f8012748f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70602f47-7e1d-4053-ab46-bc011f267066",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d687210-64b1-416a-a43e-273442692b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70398f3b-19dc-418e-84a5-52151cca6ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb65e07-dcc2-49cd-9270-57d472a41e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2457e0-db86-4534-b635-05757e16614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a5ca8a-ee74-4205-a50e-5f567424bbf6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bf0cab-bc6d-4652-a6b9-f5cefaec745f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9d1920-30b7-45a2-834c-7ac72fcd38f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccafbdd-382a-4644-a981-36a7ab6cf8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7c5752-6d1e-4e08-b364-0d3e5191b53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b568fa-32e3-4522-bff1-fb29c1abb93a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de537485-add2-45a1-ac85-5dc5b92bf011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229a66d1-19c0-4dfe-b215-82613bc35309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408d87e9-5ab1-4313-a020-26c09bfa915f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd706ff-0a8d-4102-8688-e077bdba4325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1098eb2f-e44a-4fd8-a2a4-9791b4736593",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd82a38-46f8-47d5-8e77-d0636e18d45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eca3f70-e2b5-468c-b18b-52cdde95885b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0815a48-d346-4305-8592-70ff3db955b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0be1d3-5491-485f-a0a6-69049e1ce6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c949b03-4a14-4d2a-9a78-30f68b841190",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed8a3eb-8018-4870-9d88-0f5e2c2b539e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d830c2e-6111-4fba-8280-70e504e3cd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a916c37-7ed4-4cb2-90db-87ea75c94b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeafd0c7-820f-4294-9a56-3a88fbadd380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f0b16-e236-479e-8dc4-faa63f833b15",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ed06ed-fffd-4e0d-b4fd-08ecc12ab422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e252394-d4de-457d-ba22-905b35e84618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d579dd-b7a9-44fd-89ce-ccd03f9829c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6871f4-6a07-41c5-97af-83c41c60d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcad929-f8d7-4f90-9ef8-294f2d5c52bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca1920b-3fcc-479b-90c2-4252a8edb733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d56669-cc76-4d6a-8c74-b27cde47258c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e54abc0-ccc5-423e-aaed-cea2dd0ecd55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c9cef3-ea6d-474d-a1d4-4d860fb3f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a2db1-5aee-4b7d-a07e-1e298af1c8fd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09507178-2037-4be7-8c26-91883f6eb3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c8f9bdc-dc91-4ccf-b471-6661c8ca44d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff566e31-8367-4728-9e09-df00fca288d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e286b5-bb46-41c4-b36b-fa67944ca38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e08f06-a4c1-494c-9c84-0e7a1b406c4f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e78fdd-33be-4523-ad5a-ddbd74bbd994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3754efb8-16a0-42f5-9bb1-427b75f7399f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e272a-b633-4cb1-b8b9-1bb6074d6884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5e5f0-f7b5-47d3-823b-0bad039f13bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bd3374-b181-41d7-b286-6138abc11b9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8524ecf-a100-4ad0-9e43-e984fb9541cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe01fe0-d28b-458b-babe-8ca74883749d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88404c8a-5c96-47c3-8757-bd9867cc12f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3513f88-296c-44b4-b2b0-a1207841eb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21b993b-bdb9-452b-8545-e705a85339bc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01239bd4-183c-4be2-b98d-cd290a642af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be88c2f4-bfaa-4b52-a3a7-b1ccf569023a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575cfb0d-4839-4143-b16b-4427c6aa6a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805ee222-0c19-4d01-8ed0-95988176a643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbae69ea-3c05-44bd-8372-e4d8546e1050",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1d6343-74b0-414e-9e7d-596e6532dd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593229e7-f3d0-48f3-9745-a72de07c86f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021cc6af-d93d-420c-9f5c-42768a76d93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5845d56-49c8-4709-a1df-88d91c983d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6165df-4317-4f2f-9650-b1cf2e85f043",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1420225c-08b9-4215-a843-626b86ae94d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950b66ca-6240-4138-b49c-6a2df74fb942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8b2f52-abb4-421d-98ff-1897adf04ed7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a17f391-8c17-4658-8c2e-c3874245f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22dfa40-98d8-4625-a176-249c66aa16f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95685cf-87ba-4fd0-bf2e-af868bd25be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b692ea4a-7d31-4d75-8f3d-38d87f63ee13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce1e18d-faa4-46ea-b9c4-753fcbe26177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5072c5-848f-4981-984a-388253c9c162"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c899896-c4ed-411d-bac8-53d9d7ec1514",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26c22a69-87c1-481a-af29-fe98cc5277ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d881a53-819b-413a-89f6-b36fb1e124db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c61092a2-4493-4d61-9476-688e39735c42"
                    }
                  }
                ]
              },
              {
                "id": "d48b19fe-0f71-43ed-9bd2-7dda2a40aa2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48f00b19-5338-4619-b0ce-11418f3d5f4e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a542940f-1b3c-4199-a650-802dc874f30f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "900e3856-0a71-4dd4-bd94-20480185934e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b35497-be50-40a3-920d-4d113a3823a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c80945f-6aa5-4cca-9436-f059216be791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c2ce99-c0e0-48df-9707-39a7087fd66d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4fac3e-3cf9-4cc6-994f-77751a4ff2dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59ba9ee0-09d0-4ab0-b7a9-192157017be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e141cba5-37a4-40cb-bfc0-36f100831f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "958de278-0506-48c1-96f4-54ceb4fa7326"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "164b8003-8040-4212-bf6b-0bb1f26a2927",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b141c30e-3f6e-4dd5-b5a2-d2243a5c021e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1651a16f-8a03-4383-81c6-5b55bb4e5e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658fd2dc-8150-4c7c-a4ad-1d9fbe74bc6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "149979aa-aa8f-4fb2-96d1-77d2cb535ee6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f4d3ad7-977a-4d3b-b096-5f0ab284719f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aad12047-8b2c-4517-981c-3d7fed1cf42e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4aba289a-3c32-4139-b2f8-9a70468c957c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de28c2d4-c909-4f0e-9e4d-3313f544746d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f13c2877-6bab-4aa3-84ca-5389fb791469"
                    }
                  }
                ]
              },
              {
                "id": "d3d32cfb-ee6e-4d1b-973f-0fafd7cb5916",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6870d3a-0cd5-4dcf-93be-065d4ed92b09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2e4c3fb-777c-4c84-8203-4f448053ae72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2fc9b1-a907-4946-a85c-e3ae85ed996e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f66c5e2e-364a-4a2e-8716-5774e3aeb881"
                    }
                  }
                ]
              },
              {
                "id": "1bc9efe0-dfb0-4e4c-a1b7-7128e52330dd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e36b66f1-f55e-4ee9-8507-ea7d4dde97c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "322bc874-1dd6-4765-b8ff-1758a990a83e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d6bd0b5-1d2b-45ef-86b0-14160703e8e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0667a729-c9de-4491-b18e-cba6618f2d67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4de5dec-c60a-4afa-89e4-69faacb5367a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "269f5488-8c85-4f50-bca1-310666cf7ab0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e0a5c87-584b-4956-b1b6-0673f08981f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d71b3040-fab4-45b3-84c1-0b6cedaacb08"
            }
          }
        ]
      },
      {
        "id": "33b28a63-9e82-4e2a-83ae-dfd0b25ade54",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e068a9cb-2dc7-4ca4-a8ad-bb4bedb36e57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c6dc2b0-4318-4ea0-bd4a-d9e6c6f01121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e7eeb-2dfc-4d69-88de-24589d3434e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "baa76336-b743-4594-8d6e-7d3dc2697c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f06f03-216f-43cc-86ab-864a6fa4b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5da8cf19-9b51-463d-bd7f-37bafe21aa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d755442-c372-465d-b6f4-81d12826dfd5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b53e7d7-3a1d-4ad2-9ae3-af49da81cde0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0582dff5-b149-4b12-ba73-57011031ca87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb17d2e-7f38-4739-bab5-29260405c22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a11337d-0d12-428c-860d-a2301252eae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae38f07f-80e5-4d05-a0c6-f2c7883ef03a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48b0a3e4-763f-423e-a213-61e290b4dd82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6247d26-efb2-4e0d-9cad-96b4cfbad4b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4255a9fe-b33b-48dd-9dba-025bd74d2835"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fa108f5-461d-4252-b444-0a7c536e178b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70ae0bf9-5980-46e6-977c-5b333f7c12c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cbd0448-d5c2-4dc5-aab5-cf72625559ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2098e5db-db88-4c4d-806b-ccfad06110e4"
            }
          }
        ]
      },
      {
        "id": "101ee2ff-2665-44c1-a4ed-3e468d7542c1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ca293a96-14ae-495b-88f4-f143841ba88c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "316f34d7-ff72-459d-bcb6-3279630a277b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "052001f3-7b61-4c55-80ee-c5df900a63d8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1903286-0223-4a61-a617-c3d6a34c4353",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b3663686-114e-48dc-83db-b4c2ff653772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa348af-ac07-4eea-a2a2-a083eb6c011c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45fc39ae-3c6a-412a-bac3-7d3ccc184747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91df5b4-176d-41c8-bf2a-c1c7275a7bba",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b0d1f8-87c0-499b-b7ff-b35076d199ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "65b19166-5664-403b-b9f0-04cfa0822458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ac456d-9724-4af4-bfad-8550667955f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4abd60a0-8f92-4a3e-81a2-7d571ccaa869"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bb0d745-40ac-43b1-98e7-94a43d7181e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6efe04db-328e-4c95-9dfe-2088402941df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe29160d-1a35-4ebb-aae2-32be3c031fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b1f3c29-5068-410d-9fdd-413d5116053d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0feacb77-f351-48c1-ae0b-a81eac460d63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4e0a6cf3-27c4-4410-9813-bc11d15dbddc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e996fe29-348b-4d8f-a6c1-ae8ba67bcc20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdf03df7-8fa4-4a99-9f85-ffc115ef835d"
            }
          }
        ]
      },
      {
        "id": "7c05916f-0afc-4652-9ec5-58aa18ae6e36",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d28f3172-91e3-4bff-836b-bc26b7a1a570",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4aeb077e-4303-4cab-9444-7cf95ece86d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d3ea26b-534e-4735-9141-139f07a88f6b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2edb2e8-37cf-4aac-97c9-4635c7cbe466",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d641af90-f451-4d21-ab99-13e4b9db1a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2b649e-23f8-4498-8b07-3d8fb7aef717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a64d24d3-6587-4f15-8d17-d02f0d14bec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65716c01-2f51-4107-b577-bf7ec8728a36",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b81c08-c5d6-4ca1-9e7c-c9e0646d9db7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccb516af-9589-4167-a824-cdc6bf056502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56d4e0b-1c66-4a13-aadf-93306654ce0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dc98019-5ce8-4ea4-ac31-eb98a21aa802"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30837bdf-15ef-4c92-baa8-6b1de77f0a6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bbf228b-6593-443e-b354-23ba820a12c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e43f6d8-fef8-4075-9300-801ec35cb4bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cee5cb5c-c438-4011-afaf-fccaeaba228b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f21bd7a-7c18-4b79-a236-41e1a473944d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cb76305c-2cc5-4125-8759-2bcb5fc26330"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bdb6090-bf08-4736-a1d0-da062926d9a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d32ce884-9603-466e-9424-a8e5a2a82b53"
            }
          }
        ]
      },
      {
        "id": "9d8a57f2-b413-482f-9d3f-0c6a7c7ad305",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "843e3e64-5584-45fa-9d05-a896d05df5cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e17de72-d203-4bf2-86e2-107b4ecc9d41",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "84d61ba4-bc9b-4347-8a7f-2dc3d2a455a1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ded0267-a311-4873-9935-b200de7f4bdd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efaeb973-6d38-4980-877c-137ce41d6117",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 527.2538461538459,
      "responseMin": 6,
      "responseMax": 4196,
      "responseSd": 432.4407885041952,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668386593003,
      "completed": 1668386741564
    },
    "executions": [
      {
        "id": "4017f9a4-4281-4a73-beb3-fb264af3dbef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e9fb4126-bbc3-47ec-bb01-adfcf021c592",
          "httpRequestId": "3ea14d74-1014-4f4f-b9ac-19933bc06a1e"
        },
        "item": {
          "id": "4017f9a4-4281-4a73-beb3-fb264af3dbef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8e4f6306-4bed-447e-b61c-c96ccbed5d20",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "551d8065-4e4d-4f93-a37d-5789cf5717ac",
        "cursor": {
          "ref": "57e82d80-014b-4150-8676-15b16f36de13",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "972f5b34-1995-4f42-8346-78aac51c7c18"
        },
        "item": {
          "id": "551d8065-4e4d-4f93-a37d-5789cf5717ac",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e096cbd3-73df-490b-9fd0-f620113cb831",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b9011df1-d2f9-4ac4-acdc-81760516f461",
        "cursor": {
          "ref": "6aaa562a-d2af-46e5-be6d-7723fc0090e3",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4567a202-8429-4b0f-aa3f-fc26c8dbf31a"
        },
        "item": {
          "id": "b9011df1-d2f9-4ac4-acdc-81760516f461",
          "name": "did_json"
        },
        "response": {
          "id": "3f43c8dd-c62c-4daa-89c6-cec4f9f5d6c8",
          "status": "OK",
          "code": 200,
          "responseTime": 749,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4ea71-d751-4794-b737-5210eefcfab5",
        "cursor": {
          "ref": "9bac6b19-310e-49df-b2ce-6c951cf3ae25",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "015b5468-9851-480a-9c0b-0901eff1a2e6"
        },
        "item": {
          "id": "a1b4ea71-d751-4794-b737-5210eefcfab5",
          "name": "did:invalid"
        },
        "response": {
          "id": "c89c5ff2-d075-4f2d-8344-ce84302a98e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4ea71-d751-4794-b737-5210eefcfab5",
        "cursor": {
          "ref": "9bac6b19-310e-49df-b2ce-6c951cf3ae25",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "015b5468-9851-480a-9c0b-0901eff1a2e6"
        },
        "item": {
          "id": "a1b4ea71-d751-4794-b737-5210eefcfab5",
          "name": "did:invalid"
        },
        "response": {
          "id": "c89c5ff2-d075-4f2d-8344-ce84302a98e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1847d935-d02e-492b-94e2-63276668b556",
        "cursor": {
          "ref": "ac17fc68-c1af-41de-bb10-76599d9a7acb",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7cb7fa13-faa5-4b38-80a7-cb26d0ace10c"
        },
        "item": {
          "id": "1847d935-d02e-492b-94e2-63276668b556",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cde623bf-fdf1-4d4b-8d30-ad6a51abfd56",
          "status": "Not Found",
          "code": 404,
          "responseTime": 564,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da2a724-e1bd-46cc-a67a-2f39f0b00910",
        "cursor": {
          "ref": "557b43a7-e029-40d7-bda7-cbfc14bd6842",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "652d116a-348e-4077-8d23-9a233a4a0486"
        },
        "item": {
          "id": "5da2a724-e1bd-46cc-a67a-2f39f0b00910",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1c6d657d-2e9d-4ff7-a6bb-67dcb6fbbdb1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 985,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5267e1-467c-43b6-b7d5-f5c807942efc",
        "cursor": {
          "ref": "f330a36f-d31f-49e6-9de9-27efdb1e5898",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b9cd2a52-2775-46d9-aa03-6c54a8534ef8"
        },
        "item": {
          "id": "0a5267e1-467c-43b6-b7d5-f5c807942efc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a908a123-042c-44b9-9cd7-9e5abefe0c28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae9971-c930-450b-9d36-e5ef645c39db",
        "cursor": {
          "ref": "4b38b2f8-e93d-4e4a-8cc7-3a5e254fc743",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a968dd4f-60eb-4f8f-b23d-6fd58a0f1eda"
        },
        "item": {
          "id": "47ae9971-c930-450b-9d36-e5ef645c39db",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "eb449307-84de-4419-8741-05b7a9648dea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 485,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae9971-c930-450b-9d36-e5ef645c39db",
        "cursor": {
          "ref": "4b38b2f8-e93d-4e4a-8cc7-3a5e254fc743",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a968dd4f-60eb-4f8f-b23d-6fd58a0f1eda"
        },
        "item": {
          "id": "47ae9971-c930-450b-9d36-e5ef645c39db",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "eb449307-84de-4419-8741-05b7a9648dea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 485,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42095579-1479-4622-aa99-3e515eec1ba1",
        "cursor": {
          "ref": "18404bfa-fe75-495d-8a88-129701ca882b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b6bb0d3b-f5c3-40b6-9c90-6912f782051b"
        },
        "item": {
          "id": "42095579-1479-4622-aa99-3e515eec1ba1",
          "name": "identifiers"
        },
        "response": {
          "id": "0f7433ec-26b4-4b41-90a0-0c9100b6e7de",
          "status": "OK",
          "code": 200,
          "responseTime": 795,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5f6a7-d6bb-453c-ab0c-ce7995c175cd",
        "cursor": {
          "ref": "f7136443-f7a8-4872-b3e8-4ce94d26fc98",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26c101ed-b798-4919-b2b8-a9e957c7e4cc"
        },
        "item": {
          "id": "c0c5f6a7-d6bb-453c-ab0c-ce7995c175cd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "00e825cc-1ce4-43b4-b25b-b482e0e0c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5f6a7-d6bb-453c-ab0c-ce7995c175cd",
        "cursor": {
          "ref": "f7136443-f7a8-4872-b3e8-4ce94d26fc98",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26c101ed-b798-4919-b2b8-a9e957c7e4cc"
        },
        "item": {
          "id": "c0c5f6a7-d6bb-453c-ab0c-ce7995c175cd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "00e825cc-1ce4-43b4-b25b-b482e0e0c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eb420d-7a11-4a8b-a48f-a5a3e38a6689",
        "cursor": {
          "ref": "9e391890-ea4d-4abb-b6d5-f8dac543ac20",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9a5e639-0bad-46f4-8b1b-4b77ca8e99b3"
        },
        "item": {
          "id": "c7eb420d-7a11-4a8b-a48f-a5a3e38a6689",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb6e014c-77f7-46a9-a86e-ce1b708aa83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a70423-8d75-425c-b6b2-48c2751e8221",
        "cursor": {
          "ref": "5d7c7eb7-db53-4ff6-a872-9e440468e565",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "20337e79-95cc-470a-806f-de1553253826"
        },
        "item": {
          "id": "b3a70423-8d75-425c-b6b2-48c2751e8221",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3fb15d92-52e1-4209-9c5a-4f61e1260ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f178df-d2e6-47de-a87a-b41b16992599",
        "cursor": {
          "ref": "d72da0e6-3b97-453e-b8cf-442fc4553b0e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c7cc4b54-f49a-4118-a911-c024686bdef7"
        },
        "item": {
          "id": "90f178df-d2e6-47de-a87a-b41b16992599",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "392090f3-3003-4e61-a05d-06fd62fba3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345c4b6-2bd7-4404-b7a7-508d721f7611",
        "cursor": {
          "ref": "b684a3a6-706e-426c-8638-ad2f175ebc0c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0bff9415-142b-4055-a1cf-d37c2669cf82"
        },
        "item": {
          "id": "a345c4b6-2bd7-4404-b7a7-508d721f7611",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4cce5670-3f9c-481b-aa06-ffad0d6b1953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a9aeed-5404-448f-893d-32de936ac440",
        "cursor": {
          "ref": "9b883d4c-acf3-4d7c-b4da-2dae580aaedc",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "24ecf537-d914-460c-bdc9-a68ab0af530b"
        },
        "item": {
          "id": "45a9aeed-5404-448f-893d-32de936ac440",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ca82147e-f13c-4c55-a1fc-0c82ed331b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223ebe2a-4537-4f23-83e9-0dab62925dba",
        "cursor": {
          "ref": "902c787c-b487-4e80-aaa9-2cbae881371f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "92f86080-a119-4c7d-a1a1-8c4be6f7554b"
        },
        "item": {
          "id": "223ebe2a-4537-4f23-83e9-0dab62925dba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "acd7bc4d-2c4d-496d-acab-80bb1bd17ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17707a64-0149-477c-b9fb-572c98e415f8",
        "cursor": {
          "ref": "e953cf27-d3d6-49fa-95af-09d61919e052",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2122063d-d56c-40c5-801b-c60f5c319d9e"
        },
        "item": {
          "id": "17707a64-0149-477c-b9fb-572c98e415f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6ee11443-9854-4354-8ec9-cd6d430f0052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1147,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5118d-a093-43f4-a4ac-724fc048bd5a",
        "cursor": {
          "ref": "582b9dec-b03b-4fa5-97df-2d130c386dca",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "25bd8fd9-1028-466e-9a76-c093c19ca607"
        },
        "item": {
          "id": "bca5118d-a093-43f4-a4ac-724fc048bd5a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fb85af32-f771-4997-8b05-2065b79ccc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd8ec5-74f2-4c08-a6a1-0c002b8fd449",
        "cursor": {
          "ref": "f6b02959-3cda-44c7-863e-d66f791fbf11",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bf7239d7-e023-420d-acf8-b08eae209be8"
        },
        "item": {
          "id": "5ecd8ec5-74f2-4c08-a6a1-0c002b8fd449",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2b393890-96ab-46b9-9b3b-2ac907f6193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4580a-6980-44bb-b8bc-507aebd78638",
        "cursor": {
          "ref": "c4b62680-f4a2-4e07-a317-ca816c20ee7a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "881c954f-20c8-4913-adc3-587159b924f6"
        },
        "item": {
          "id": "f1d4580a-6980-44bb-b8bc-507aebd78638",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed668e79-f21f-4eed-8358-239910f6bdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9770bc-6f53-4948-8307-bc41396d5277",
        "cursor": {
          "ref": "b3aae1e2-85f5-47f4-bad6-e2111d36f456",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f3b09687-9167-4e4b-9786-41792b3e5a6c"
        },
        "item": {
          "id": "2f9770bc-6f53-4948-8307-bc41396d5277",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9b68d22-2be8-4dae-97fe-b93dcaee52ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37407798-cbe7-4219-82de-2bebdeda15d0",
        "cursor": {
          "ref": "4b56c219-7f1c-4f12-8f16-d8df7b9775b6",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1fbbbbd-aed5-41be-becf-0e8990291bfd"
        },
        "item": {
          "id": "37407798-cbe7-4219-82de-2bebdeda15d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12132288-95e8-4749-820f-a87430572bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd65d2-07da-4666-aa23-f3432e443145",
        "cursor": {
          "ref": "519961cb-7043-479f-965e-addb833567a0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7a1e41ec-fbdc-49f3-948b-0beeb41fd48f"
        },
        "item": {
          "id": "75fd65d2-07da-4666-aa23-f3432e443145",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d9361732-f3b7-4128-be11-e36c5606fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ff6f11-4078-47a5-aa35-43853e76fab2",
        "cursor": {
          "ref": "838158d9-18d1-44a5-bab3-e7c46988b33f",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba523877-d6df-4017-ba07-66e27458ab69"
        },
        "item": {
          "id": "77ff6f11-4078-47a5-aa35-43853e76fab2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ba8583ab-d7be-4d2e-9c6e-4ac50d7d3aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4a5d5a-1a22-427c-a8ae-614b9fa21722",
        "cursor": {
          "ref": "a41b03d3-25ba-4719-8c84-2a114d999091",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "923f9b59-651b-462a-a564-ed982615d58f"
        },
        "item": {
          "id": "0d4a5d5a-1a22-427c-a8ae-614b9fa21722",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "283cc58b-191d-4a9e-9cda-bcc5a0e2ab13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a760b90-f3e7-479c-89c1-5f0e4f163855",
        "cursor": {
          "ref": "02e7bec8-862e-40b2-9f61-cb493d37264c",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9340a67d-35b4-41af-9a38-67ee2c5784a5"
        },
        "item": {
          "id": "0a760b90-f3e7-479c-89c1-5f0e4f163855",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f755f144-cff5-4de7-b224-e58dfab887a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea6f52a-2456-4f3f-b650-973b3523eccf",
        "cursor": {
          "ref": "90b1534a-5f08-4dcc-a2cc-c7177f64f5f3",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2a7720e4-32ea-49bf-a813-bc656c280199"
        },
        "item": {
          "id": "2ea6f52a-2456-4f3f-b650-973b3523eccf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bd2fbbed-4661-4356-b9da-e358316c5544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d073e70e-7567-4ef2-8395-f8429cc33b56",
        "cursor": {
          "ref": "ee47e79a-62ba-43d4-b17d-f748fa87f4f2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9fc18827-1df0-4168-827b-85389e133838"
        },
        "item": {
          "id": "d073e70e-7567-4ef2-8395-f8429cc33b56",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e88859c9-4f25-4078-9d0a-a5256d0c8551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac16b55-a085-4f2d-8674-88505ede30d6",
        "cursor": {
          "ref": "ac538152-3e9f-47d5-9d38-2fe811487111",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9b2c83d3-95ef-4444-8a14-1b55a2f56053"
        },
        "item": {
          "id": "8ac16b55-a085-4f2d-8674-88505ede30d6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6e641d89-238c-4358-b6a1-1931445f3bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4beeccf-73d8-4577-a237-ada44d40904d",
        "cursor": {
          "ref": "71e39a57-86e4-48c9-a777-c920afea9a9d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "687e753d-c8da-4d90-a2bc-a9c9a9728a8b"
        },
        "item": {
          "id": "a4beeccf-73d8-4577-a237-ada44d40904d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2a3c192f-92ef-4b81-ac90-0d476ec4b893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeaa173-a88c-4150-9e02-e5dd5d9c51bd",
        "cursor": {
          "ref": "d9bc5891-b7e8-4ed5-9ed0-4bd55f618833",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4d951698-e2a9-466c-bd21-c9a150ec1129"
        },
        "item": {
          "id": "7eeaa173-a88c-4150-9e02-e5dd5d9c51bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "606c0418-7acb-416e-b092-c5f6dfd9a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137384bc-d3e2-44d5-98fc-42d99e10b4d3",
        "cursor": {
          "ref": "022cbc09-67b0-4137-80d3-6036b88d4c4d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "602c815f-459e-40b9-a8c6-991e2457e4a4"
        },
        "item": {
          "id": "137384bc-d3e2-44d5-98fc-42d99e10b4d3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a5a479f0-4f3b-4fa0-90ff-ea5da3667241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b494a5-5552-4849-92f8-81dadfc6b3c1",
        "cursor": {
          "ref": "b440cd95-e1ec-4646-8d38-57ad39ce47d4",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7f97a56c-3ac2-4612-bbb5-9a580cab877a"
        },
        "item": {
          "id": "34b494a5-5552-4849-92f8-81dadfc6b3c1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5fb428a9-07ef-4fd7-b8a0-24c86d785c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9095d2ec-599b-4c98-b735-273f4eb9226e",
        "cursor": {
          "ref": "d748fc74-7cc3-4cfc-9616-273a7865dde8",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f19ba2c-0395-4805-a423-50e0954be77f"
        },
        "item": {
          "id": "9095d2ec-599b-4c98-b735-273f4eb9226e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "525540be-b2bf-4b41-aef5-17223f1af1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e47c012-ab8c-43be-b125-f7af8b2cdd35",
        "cursor": {
          "ref": "69d115a2-fa5e-462e-a995-9ba3ca54c98d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a4bf2912-e8cc-4e4b-98e4-6614d024600a"
        },
        "item": {
          "id": "8e47c012-ab8c-43be-b125-f7af8b2cdd35",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f03fd791-6b96-434b-8be2-e32528b2a0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58cd931-652a-45fd-8fd6-9c5f6bb18d4a",
        "cursor": {
          "ref": "4367ce43-4217-440a-b0c2-d3b31fe5bf96",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d0848cb5-8c11-48c5-b872-48cc087b04fd"
        },
        "item": {
          "id": "d58cd931-652a-45fd-8fd6-9c5f6bb18d4a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d6caf52b-1868-4ca1-a91d-d447ca21a98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2488de9-e2f1-447e-8048-f58e167f9792",
        "cursor": {
          "ref": "870b44dc-feb3-415d-864a-ee65ca65ac25",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d379c1e7-a868-44a4-80ce-e66a6b711a7e"
        },
        "item": {
          "id": "e2488de9-e2f1-447e-8048-f58e167f9792",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "10c5c74d-354e-49be-bcc2-74765b714dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2840a73a-d6b2-4dc0-ae93-54c8947605fc",
        "cursor": {
          "ref": "97ed1063-7568-46f9-93cf-3d06bc439bff",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9a068de0-72de-47a7-9b8c-b512f771731b"
        },
        "item": {
          "id": "2840a73a-d6b2-4dc0-ae93-54c8947605fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6992b44-60f2-49e8-b825-89062b2ef9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db88e6-858d-4b4b-92f2-9a1e76686295",
        "cursor": {
          "ref": "1511bb43-6bd6-458d-825b-d9f86af2936b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ddfdd528-6159-46ba-a5c9-4d2e789eb65a"
        },
        "item": {
          "id": "d0db88e6-858d-4b4b-92f2-9a1e76686295",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d912504a-bebe-4dfc-b154-f391c5480250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068afaa4-79fd-4f1f-b99e-9404ecf98ac1",
        "cursor": {
          "ref": "8f2ea5bf-7679-4508-a6ae-8107c17f3fad",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d258da7-e98b-4885-ae70-2bb598b7ec62"
        },
        "item": {
          "id": "068afaa4-79fd-4f1f-b99e-9404ecf98ac1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3578245c-e28d-45e0-bb3b-ac8de5466cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9112fca-3758-4a18-a2d5-220816d527b5",
        "cursor": {
          "ref": "d7936ee8-324f-4cc3-9727-771b96b6efe3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "abb4e6d1-4457-444b-81c7-f22fcbd36f6c"
        },
        "item": {
          "id": "a9112fca-3758-4a18-a2d5-220816d527b5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cc724c5b-2939-4ffe-8299-bff1a370ce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ce5a2-5bfc-45e8-b2e3-4d4d3566cbff",
        "cursor": {
          "ref": "a018b61f-44c2-476f-8897-57bfd3f87f49",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f4eb3605-aebf-488a-b115-ba3ef6a985f7"
        },
        "item": {
          "id": "083ce5a2-5bfc-45e8-b2e3-4d4d3566cbff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30570a1b-7119-490a-91b8-551add7daba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f04891c-8d56-4cb4-a96c-9d9d4c139963",
        "cursor": {
          "ref": "f4a02b0a-6167-487a-bbce-0fa60cc2995f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb0b5e9b-0657-4b89-bbe2-40caa97fee78"
        },
        "item": {
          "id": "3f04891c-8d56-4cb4-a96c-9d9d4c139963",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "51fa063e-d592-4926-bd62-64eacf48fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df390ea-ea09-4d56-bacd-44cb3822d4e8",
        "cursor": {
          "ref": "18d92431-d0f7-48d5-b604-1423045f5eb7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cef1d9a4-9247-4427-bb7e-27f896ecd020"
        },
        "item": {
          "id": "8df390ea-ea09-4d56-bacd-44cb3822d4e8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "53f8ebe3-ea39-4711-9910-9e3c4821c189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a3783a-af14-45a4-8017-9227e6b9c63e",
        "cursor": {
          "ref": "babb83f8-6eec-4575-9b78-1dc00882f33d",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8e5eae51-49a7-45f3-9d01-15a458182b71"
        },
        "item": {
          "id": "a6a3783a-af14-45a4-8017-9227e6b9c63e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ae8ff9d8-7039-4c07-83c5-3799eeef19e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1102,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3a692-66d5-4077-abfe-cea3b6eff2bb",
        "cursor": {
          "ref": "188507f1-b7b4-491c-b565-c80bd475fddc",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0314f17f-8393-4960-a7bb-9839b2130358"
        },
        "item": {
          "id": "7cd3a692-66d5-4077-abfe-cea3b6eff2bb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a49e4147-35ad-4637-8a56-f9c61556f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff5670d-9b34-413e-8d6f-f0ae4a7c937a",
        "cursor": {
          "ref": "f44253cc-6d59-4e28-9a81-b52059c6bfd9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5dbbc9e0-da99-46ae-89d5-d00358fd1d35"
        },
        "item": {
          "id": "dff5670d-9b34-413e-8d6f-f0ae4a7c937a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "32d8bb3f-4113-4cda-898e-d8e5741a017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2955942-9d18-4cd0-bea7-dc458772ed6d",
        "cursor": {
          "ref": "ea8985dc-bcd6-40a5-b71d-f4cf72732dcd",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b80bde79-2a97-41e3-bcfe-00bf7303e2b8"
        },
        "item": {
          "id": "e2955942-9d18-4cd0-bea7-dc458772ed6d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b6c334ea-36d7-46c9-af1d-be673086c405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2776f1d5-76c6-4870-bad5-768fa0c6a8f8",
        "cursor": {
          "ref": "9d2bfab8-5b34-4b2d-b3c4-7e27a6b646b1",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c6c19e14-d9fe-4e1d-992d-8624ff9c7173"
        },
        "item": {
          "id": "2776f1d5-76c6-4870-bad5-768fa0c6a8f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e373702-00bf-4ce6-ab96-b6d3ef596b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356614a8-1e53-40fa-996c-2601e54dc173",
        "cursor": {
          "ref": "78977733-fbee-446a-a5c6-a7b31ae83f51",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "efa8cbf2-7b2a-4cce-a6d2-d4111f04f867"
        },
        "item": {
          "id": "356614a8-1e53-40fa-996c-2601e54dc173",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "68fced7f-0c21-4e09-8d3c-283680940028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ac68f-7738-4a7f-9059-e32d3af9a3c8",
        "cursor": {
          "ref": "191a17bf-38da-4fdf-9066-a7e752ba4f6c",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "04c8a76c-6bdb-44c0-a5b5-033f128a6886"
        },
        "item": {
          "id": "e18ac68f-7738-4a7f-9059-e32d3af9a3c8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8694056e-4bf1-4674-bce7-93b48039936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2279eb-1d9b-4ad1-917f-8e28da7cbcfa",
        "cursor": {
          "ref": "4de2666b-382a-4611-89e9-c262d7b8c63f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa369a19-dc11-43e6-9619-8dcb96f91b52"
        },
        "item": {
          "id": "ab2279eb-1d9b-4ad1-917f-8e28da7cbcfa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a107cf7c-1a20-495d-9e5e-49e061a92dfe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 544,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2d3de4-17d6-4ed0-88fe-67f193b924b4",
        "cursor": {
          "ref": "4e084df8-8a73-4677-9b4a-8355f6df2e32",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ff30a89d-19df-4d2b-aeab-53259516a5b7"
        },
        "item": {
          "id": "ab2d3de4-17d6-4ed0-88fe-67f193b924b4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "115ea2b5-f92f-4b94-9105-3409efe2b456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547e173e-6582-49a3-9d19-47e357861242",
        "cursor": {
          "ref": "63d9881d-bf18-4c57-8503-8f92d8c41d0c",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2112bef9-3691-4807-a66f-49b983cd1062"
        },
        "item": {
          "id": "547e173e-6582-49a3-9d19-47e357861242",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0d11e810-2296-4bc9-ba31-d138d8036bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dfd3fb-3656-41ca-8bd9-d4218a126c33",
        "cursor": {
          "ref": "9dcbbe6e-704f-41c2-a287-c7c19bf637bf",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07651bb2-8715-4aa7-b96c-b0b86922ce7e"
        },
        "item": {
          "id": "92dfd3fb-3656-41ca-8bd9-d4218a126c33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e1e812e-39d7-43cf-8544-bb309c612316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d239ce-d96e-4041-beeb-f97d10dcb2a1",
        "cursor": {
          "ref": "020780d4-e368-42ea-bca1-3408c5a2a217",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a9cdce9d-84ed-4867-bfac-4affd3556831"
        },
        "item": {
          "id": "b0d239ce-d96e-4041-beeb-f97d10dcb2a1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9015a501-6285-41f3-bc6b-980938d3a36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf33cb3-7a61-4ece-af1a-d592130b997a",
        "cursor": {
          "ref": "49dfdeac-5673-4793-ad47-eb70d97cc931",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "13157b7c-0478-4ac0-afbb-0dd58867c26c"
        },
        "item": {
          "id": "6bf33cb3-7a61-4ece-af1a-d592130b997a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1398dc05-4dce-40c4-9df4-c9c4e04d6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011485e0-5b22-47d5-9407-2346a07921da",
        "cursor": {
          "ref": "f4a62bcf-84f9-4c36-86e8-87215e194dc4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a5b9b4c-8199-4290-81d6-c05dffe0aa57"
        },
        "item": {
          "id": "011485e0-5b22-47d5-9407-2346a07921da",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "61fc2bfc-d193-41be-b492-5c25dd9c2d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13734f7e-27c8-48f8-9ddb-2b5508b8fe9c",
        "cursor": {
          "ref": "c8b208e0-2494-4e05-9dea-703faa0bb019",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f8e7ccf1-d4a8-494a-8853-66b1c403792b"
        },
        "item": {
          "id": "13734f7e-27c8-48f8-9ddb-2b5508b8fe9c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3cbae033-3d0b-46ed-8031-7ee77060cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e9f96-aa30-4aee-ad30-0d67e48d0719",
        "cursor": {
          "ref": "28cda8c8-185b-4ff4-abb4-2b659f277a56",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bff5c45f-f137-43b7-9c65-bdd2581f8a04"
        },
        "item": {
          "id": "8b9e9f96-aa30-4aee-ad30-0d67e48d0719",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7722234c-42e4-41f5-90b7-c03842c9a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a60609-4961-42cf-b5fd-238a860bfbb0",
        "cursor": {
          "ref": "2b963be4-5938-4b1c-a6b2-5a0d0e441980",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "47f3930b-f5e9-4f85-961b-914250563370"
        },
        "item": {
          "id": "e8a60609-4961-42cf-b5fd-238a860bfbb0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "655c9a76-6d40-4bab-af50-6637d757f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc40a81-19de-4165-b087-e2963d9d8884",
        "cursor": {
          "ref": "1c563b18-0f29-4a34-a7cb-ff494b4fb46f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f050f476-bde5-41c2-bb07-3f5d2590a6d7"
        },
        "item": {
          "id": "7dc40a81-19de-4165-b087-e2963d9d8884",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d4cc92c2-1f04-4b75-abeb-618cc2321154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455a58f5-bdd5-43c7-821f-c8e6e0b3e34c",
        "cursor": {
          "ref": "b5b679a2-def2-4007-a1f2-6013cd7eacf5",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f80979f8-1566-4c6d-8e80-d90d064b5cb6"
        },
        "item": {
          "id": "455a58f5-bdd5-43c7-821f-c8e6e0b3e34c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d0cfb31f-4a89-47b3-8ba8-985a0b815109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecc4828-db1f-4794-be9e-d95095c3b93b",
        "cursor": {
          "ref": "016c5e41-67e8-4b5c-8c55-14505fd088dd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a2aeb14-91c7-427a-a7e7-f03dd897b03e"
        },
        "item": {
          "id": "2ecc4828-db1f-4794-be9e-d95095c3b93b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "812b5309-e81d-4e9f-8ebd-30e1187e4703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4211cd3-4168-4f33-b433-f744912b69f4",
        "cursor": {
          "ref": "ff916f62-2f68-481b-aaed-3992e1a1b1e8",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87c9dac7-b1bd-475c-8dd7-1879bf80268e"
        },
        "item": {
          "id": "d4211cd3-4168-4f33-b433-f744912b69f4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "25c3f454-e99f-4743-9316-34e3fc4f49f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30796edb-1d46-46c9-9fd4-f38e3f2e57f1",
        "cursor": {
          "ref": "728c6cd1-194e-487a-9863-6d16d0ddb364",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fae31556-6a69-4a13-ac42-0ed8c8dfebfa"
        },
        "item": {
          "id": "30796edb-1d46-46c9-9fd4-f38e3f2e57f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d611d934-1443-42a3-b319-7200000d545e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123faa99-8f30-4b0b-bd2d-8ce249446689",
        "cursor": {
          "ref": "3470faf0-7c10-4e68-ada2-457b0d60e0a7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "806ba414-0667-462d-aa0d-291e1a8a5ad5"
        },
        "item": {
          "id": "123faa99-8f30-4b0b-bd2d-8ce249446689",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e4b94b73-ad90-4230-8bbb-813e99546cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ef8557-4592-4322-be94-8b4753af5c20",
        "cursor": {
          "ref": "c39de0ae-6d9d-4135-9ec5-b913cbae9a8d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8f8efc4-d5b2-401a-a1df-767a80808e55"
        },
        "item": {
          "id": "f7ef8557-4592-4322-be94-8b4753af5c20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e35d71cb-0567-47cd-aafd-0043ae1ac277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a864566d-dc90-4693-a0ea-2550ea44779f",
        "cursor": {
          "ref": "f8251bee-f574-440c-b08b-7a221fbf1c27",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "62b840ba-a5e7-4f15-8dc9-c1aacee91cbf"
        },
        "item": {
          "id": "a864566d-dc90-4693-a0ea-2550ea44779f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "99b08a41-6211-4260-9782-1e257c98cd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5a32bf-e3c6-4597-b688-a9578015bea6",
        "cursor": {
          "ref": "f05131f9-644a-4ae8-81c5-6533b8e70968",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f5df5b5-0372-46cb-a058-031f55b58ae3"
        },
        "item": {
          "id": "df5a32bf-e3c6-4597-b688-a9578015bea6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "06660fbf-8b13-4ff8-9e95-ddebde991f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99da036f-7232-4425-8e6f-c93ac6139e62",
        "cursor": {
          "ref": "87217b90-9dd7-43c8-8af2-591483993cdd",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7e3f86c3-319a-44b5-9196-ccaa0457a6d4"
        },
        "item": {
          "id": "99da036f-7232-4425-8e6f-c93ac6139e62",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e8d416ab-7c9d-4741-b1ac-e867d3f1f2dd",
          "status": "Created",
          "code": 201,
          "responseTime": 2002,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "ecf0861a-2a6b-45c8-9f5b-d1324de7314b",
        "cursor": {
          "ref": "bc27816f-666b-47f4-a663-9b1b1e3c7c50",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1a53ba7e-edd0-4955-9493-29c873e65627"
        },
        "item": {
          "id": "ecf0861a-2a6b-45c8-9f5b-d1324de7314b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6645516e-19dc-4484-90ef-ddfd851afa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473594d9-78b8-4faf-b6c1-65aaf8693e11",
        "cursor": {
          "ref": "75e603e3-76bd-4043-9f34-b8a0966045d0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cb189df7-f10f-4a94-89ae-53d3d97ade57"
        },
        "item": {
          "id": "473594d9-78b8-4faf-b6c1-65aaf8693e11",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3e9c7207-28a5-4df8-86fd-d2ff8bef7aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4d05b1-a430-4b8a-83d4-f2830da0d7a7",
        "cursor": {
          "ref": "8c83e190-348d-49f0-8669-364dc0f41a5c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "751c395f-7a2b-4890-95d1-a6e474a5cda6"
        },
        "item": {
          "id": "fb4d05b1-a430-4b8a-83d4-f2830da0d7a7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a5515856-a403-47cc-9695-9b25b44896a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f277a381-82f0-4d0e-8263-260cc6e89a9c",
        "cursor": {
          "ref": "20148236-0153-4610-83a0-754b13588afb",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "348d69cb-5f8c-48d8-a491-eb9ac7af9c8b"
        },
        "item": {
          "id": "f277a381-82f0-4d0e-8263-260cc6e89a9c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "54a61d5c-aac6-4f5c-a78d-8662ab446b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf063a9-040d-4aa6-8b24-68392b047ddc",
        "cursor": {
          "ref": "cdb9b68b-e99e-4f1c-bedf-3d30d6771aab",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d1979305-21f6-46fe-8bf4-a70a954c21d0"
        },
        "item": {
          "id": "caf063a9-040d-4aa6-8b24-68392b047ddc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e0fdb294-0139-4724-9aa9-46ff5c2ff16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b03268-4742-469f-908f-f3b8e317eedc",
        "cursor": {
          "ref": "76025532-900b-4743-8bd4-f05606a0cd60",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93e058e6-2979-4523-a06e-c40df8a9ec39"
        },
        "item": {
          "id": "70b03268-4742-469f-908f-f3b8e317eedc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4cd61c0a-5d3d-4ab2-af81-709e9c2f5b8f",
          "status": "Created",
          "code": 201,
          "responseTime": 1918,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "387bf235-e79d-49ca-b8e2-5c0e6b1c01af",
        "cursor": {
          "ref": "03d1a2b8-42f6-4f9b-b1a9-90a6808d00c3",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "23e0edd9-f2ea-47c7-a57d-eaa548726474"
        },
        "item": {
          "id": "387bf235-e79d-49ca-b8e2-5c0e6b1c01af",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04ce73c2-c6a4-4afc-af58-85959c9a4600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d43b797-7400-4695-bfe6-d6542d177652",
        "cursor": {
          "ref": "9b99e48d-aa6f-4184-9d77-9db6745a73fe",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "902d0c49-9d73-4959-a2e3-25873ef8b3b8"
        },
        "item": {
          "id": "8d43b797-7400-4695-bfe6-d6542d177652",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bf36037e-8757-433f-95ef-595f7b24a29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e9371-e748-480b-901b-a5e87e92a754",
        "cursor": {
          "ref": "a7e933ab-8e8a-4027-96cc-64d2e3b8ac0f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56e6b43b-c803-4706-addb-5cd543624ffb"
        },
        "item": {
          "id": "919e9371-e748-480b-901b-a5e87e92a754",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "81346020-ab98-4d69-be2c-c76eb6ca0f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1361829-c4c8-4d6c-97e4-6a7a25a32306",
        "cursor": {
          "ref": "3d9712fc-edab-4245-9341-c298f07bb9b2",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c5b3874-185d-430b-a6e8-cfa662e392fb"
        },
        "item": {
          "id": "b1361829-c4c8-4d6c-97e4-6a7a25a32306",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5361454b-231f-402d-a206-c8a8f2c74997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45ed844-e536-4988-8a06-268b31fc638e",
        "cursor": {
          "ref": "604a7f81-fe6e-4142-b4c1-cb8f5652f998",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68d10791-9025-47d6-9b2a-5a37f3f22377"
        },
        "item": {
          "id": "b45ed844-e536-4988-8a06-268b31fc638e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2b9da44b-48e8-4c4d-8c04-6bcb00d6c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eba3b8-d4a9-40a1-b7e8-a60012a8e8f5",
        "cursor": {
          "ref": "87af4b54-5b4d-4a91-b1ca-27b44c125faf",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2c4fd9c8-cd6e-4674-b5b3-89b6501c712a"
        },
        "item": {
          "id": "a3eba3b8-d4a9-40a1-b7e8-a60012a8e8f5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bff81332-1b20-419c-ad1c-0383ddec2b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76228658-66c5-4a3c-9bba-131a8af1bd0b",
        "cursor": {
          "ref": "64892a7f-97dc-4119-a11e-9eb988603c7d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95060225-ad3a-4081-934f-53fcc1af55bb"
        },
        "item": {
          "id": "76228658-66c5-4a3c-9bba-131a8af1bd0b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8e28a3e0-09e9-464b-b91b-65c419cc2673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b17b85-1645-4a1a-948a-3eed5a4bc2de",
        "cursor": {
          "ref": "ef05f4f9-28b5-4915-a353-7239eb198b2e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "73d19cf3-2f9d-47f3-8b11-94f6504dfcc3"
        },
        "item": {
          "id": "e5b17b85-1645-4a1a-948a-3eed5a4bc2de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d6f7eb29-4412-42d3-b1e6-fd71a0eab857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc9775-0b88-46e3-b9b3-d1acd15577f9",
        "cursor": {
          "ref": "ee26cf2e-dfa4-497d-a4b6-450fc97168b9",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "99d83e42-cf96-4f6e-a83b-c654c214292e"
        },
        "item": {
          "id": "10cc9775-0b88-46e3-b9b3-d1acd15577f9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2f0dea3f-2be7-474d-8f97-b0d14c89179c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d0c79-f951-4e19-9703-2a15d55c6992",
        "cursor": {
          "ref": "c7256285-4c58-4631-8c24-8fe3b0cb1d5f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b3ca39ba-5080-4e9d-848b-670e48e969f3"
        },
        "item": {
          "id": "c63d0c79-f951-4e19-9703-2a15d55c6992",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8072af27-7ab9-4015-a783-5ae259ad7f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8349a2ec-c00a-4aec-af3c-fd579050adab",
        "cursor": {
          "ref": "a1a324c5-a426-4e1e-b4ba-8eb8b6166da8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c4c3d7d5-ad7a-4c05-a8b0-8907718e58f3"
        },
        "item": {
          "id": "8349a2ec-c00a-4aec-af3c-fd579050adab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e987d965-efc5-444a-89d9-b56ef07e998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e24ea7-9a99-41b4-ba9b-1e8678aa9d2b",
        "cursor": {
          "ref": "ff3435b1-06c2-414a-8d6b-919732ba1b12",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ed255fa5-a19f-4e5a-a6d3-e2611015e053"
        },
        "item": {
          "id": "a8e24ea7-9a99-41b4-ba9b-1e8678aa9d2b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "61abe05b-dd4a-4576-8505-6b61300f6513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f528f129-2505-4dd1-bf45-9bf99c254fc9",
        "cursor": {
          "ref": "a90bd71c-2b87-4209-9b3a-32ed7584e3e7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "031e1bda-0212-4a5d-aed3-84312d0408e2"
        },
        "item": {
          "id": "f528f129-2505-4dd1-bf45-9bf99c254fc9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bde81952-a49b-4dda-9c5a-3110414fbd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12632f1-8a39-44da-b1f9-e4480c3edfb6",
        "cursor": {
          "ref": "8fc51c0e-64d6-4406-8551-4d6e2e3b3712",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21af22a6-c2f2-428d-860d-5c0fff94c4a5"
        },
        "item": {
          "id": "e12632f1-8a39-44da-b1f9-e4480c3edfb6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "72405bae-0829-4afb-bb53-280c12de6839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f1bf3d-0a4a-4c03-91b8-e19f462264d4",
        "cursor": {
          "ref": "25f500c6-5212-41ed-bf18-03e9f2c6b3eb",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "328d03cf-9d86-455e-bce8-f9c09e93bddc"
        },
        "item": {
          "id": "03f1bf3d-0a4a-4c03-91b8-e19f462264d4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05a61b5a-afda-4892-9f1f-23da509fca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f582a4-5aea-4900-8690-1b2e0ab283d7",
        "cursor": {
          "ref": "c7deb911-e259-4010-8d6d-6c4f5e88e0da",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "709bfc8e-523a-4859-bee6-2f4abf30e52f"
        },
        "item": {
          "id": "a9f582a4-5aea-4900-8690-1b2e0ab283d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "995e1519-4fdf-4681-825a-77b24b717377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477366aa-d90c-422c-baa5-a60640f75479",
        "cursor": {
          "ref": "4206b63b-3dad-4478-9cc1-e8711de1b036",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5f40793e-de57-4210-9624-c2ddf868b1ef"
        },
        "item": {
          "id": "477366aa-d90c-422c-baa5-a60640f75479",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a3438ab-e9c7-405b-a8ce-02981c6373e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5337d7bc-e2d9-4a94-9bf2-831892cd8012",
        "cursor": {
          "ref": "2b9a11fb-831d-46a6-a58b-7227141f4128",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "46df03c3-d9a4-4709-bf1d-db1a7354e57f"
        },
        "item": {
          "id": "5337d7bc-e2d9-4a94-9bf2-831892cd8012",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3efc24b-913c-4783-9892-a2bf4b708cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d93e1-6cc5-4fb2-9b59-d61bfad73e22",
        "cursor": {
          "ref": "b8395d2b-ce6d-4802-a7ac-e1b78670e4d5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eba08866-5d93-468b-bbb3-cd3622702528"
        },
        "item": {
          "id": "443d93e1-6cc5-4fb2-9b59-d61bfad73e22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e3b74834-7985-4fe4-bece-f628fa8101ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26672b15-7e9d-4578-9921-6949c0155cb4",
        "cursor": {
          "ref": "ad11f3c5-0205-4122-9cd9-322c6c1d9245",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "08ba5021-bc51-4ebb-8c1b-66461743b489"
        },
        "item": {
          "id": "26672b15-7e9d-4578-9921-6949c0155cb4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bef12d4a-c3d2-4074-8bd2-b4b1d72a95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b57e526-c698-4365-b65b-d073f22998c7",
        "cursor": {
          "ref": "1b276dc9-6dac-42d5-b99a-5ac886146516",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "13365790-df28-497c-b2dc-c6f511c0025b"
        },
        "item": {
          "id": "6b57e526-c698-4365-b65b-d073f22998c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d6868e5f-e349-4606-86ac-b5bce6d828dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c564e9-efcd-4818-8d17-a3b5c859741e",
        "cursor": {
          "ref": "4221085f-f990-43c9-90f1-667eacc6119c",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "22ba4e20-3072-4519-a69f-7510dd788e6d"
        },
        "item": {
          "id": "44c564e9-efcd-4818-8d17-a3b5c859741e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "160918bf-8cfa-4a4c-ac40-b46d7e71a56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12baebea-0024-4d96-8e7a-2bab945228aa",
        "cursor": {
          "ref": "11ec34ef-d1ad-41f3-bfe9-de812a8d3a11",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e7f1bb20-12b7-42e9-8796-848d8f0fbcfd"
        },
        "item": {
          "id": "12baebea-0024-4d96-8e7a-2bab945228aa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "60562b26-a41c-47cb-8421-354b4590680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9415b2e3-62ae-48cc-a80e-f76530182873",
        "cursor": {
          "ref": "69304974-d1e4-4a21-82dd-ff55b33189e3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "69a86fbc-3e78-4923-a84d-fd45d415ccef"
        },
        "item": {
          "id": "9415b2e3-62ae-48cc-a80e-f76530182873",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "21befa04-22b6-44ba-9864-1a9a53055053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f0845c-8a4e-49a2-8875-60f4df478381",
        "cursor": {
          "ref": "32dcd8fa-e7bd-4507-aed3-515aafa3d4fe",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "134751e1-56dd-46cc-91b7-f8650f637295"
        },
        "item": {
          "id": "43f0845c-8a4e-49a2-8875-60f4df478381",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b10534aa-c129-4e64-b450-b07ea509f855",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7958e773-0342-45e4-8f85-76b4aafd0417",
        "cursor": {
          "ref": "b99fec6c-855c-4429-ad99-bf6b15aa44db",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "88141aa7-d648-445e-b2b0-297005922b95"
        },
        "item": {
          "id": "7958e773-0342-45e4-8f85-76b4aafd0417",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5c96bd9d-45d1-4296-af4a-fed4d08b633d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 478,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74128b4-3c93-447f-858b-36f799726397",
        "cursor": {
          "ref": "bd0eab27-7fd7-41e8-bba9-a41d7c50a85c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "34145a9c-e215-4341-883f-1ae3d80d7be0"
        },
        "item": {
          "id": "a74128b4-3c93-447f-858b-36f799726397",
          "name": "credentials_issue"
        },
        "response": {
          "id": "85213193-ef4f-4d97-85ee-5ffffa28ddd6",
          "status": "Created",
          "code": 201,
          "responseTime": 2022,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec5b2d-a808-4b7a-af0d-5c19f05ad9a7",
        "cursor": {
          "ref": "9c2b468e-c493-49ca-87b1-170667e9db23",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2356861c-8e43-4d9b-aa15-5bf066f0f62b"
        },
        "item": {
          "id": "eaec5b2d-a808-4b7a-af0d-5c19f05ad9a7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "419c8720-9e81-4935-9da3-0c8fe8875190",
          "status": "Created",
          "code": 201,
          "responseTime": 2741,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144f4eaf-ad2f-47eb-aeba-d98c522be59a",
        "cursor": {
          "ref": "87804b4d-1bb1-428b-9806-9f180f9f8b71",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "80ff6561-5ae0-4e1d-8f05-36d20d2c12d4"
        },
        "item": {
          "id": "144f4eaf-ad2f-47eb-aeba-d98c522be59a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dc75d66f-485f-41da-9479-4895870b845d",
          "status": "Created",
          "code": 201,
          "responseTime": 3208,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145f962-31ce-45ce-bd44-f543d0218a6a",
        "cursor": {
          "ref": "e0f13f80-965a-45a6-8618-159f1346b511",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "47a51245-6ec2-4020-8daa-400c546e1bce"
        },
        "item": {
          "id": "3145f962-31ce-45ce-bd44-f543d0218a6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c518333c-c377-4051-8fe0-20e7e58678e1",
          "status": "Created",
          "code": 201,
          "responseTime": 1931,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69922a95-8ac2-45e5-8da6-106bc080aaea",
        "cursor": {
          "ref": "3112da7c-dea6-4657-96a2-f02e521dc477",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2fb2f0d9-75ac-4d8e-9956-e43e687694b5"
        },
        "item": {
          "id": "69922a95-8ac2-45e5-8da6-106bc080aaea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "357f2614-0a28-4df9-b02f-1783ce0d5a4d",
          "status": "Created",
          "code": 201,
          "responseTime": 1964,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ac0cd-9710-4562-8c7b-9532ba90481e",
        "cursor": {
          "ref": "5475f033-0fd5-4bea-8b4a-6073a168d69d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e625a7a2-ec93-44f4-a8fd-318c5859b56a"
        },
        "item": {
          "id": "8e8ac0cd-9710-4562-8c7b-9532ba90481e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9164dcea-1cb5-43f8-8c07-983b7873f7e4",
          "status": "Created",
          "code": 201,
          "responseTime": 4196,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd274e9-272a-4545-9637-6b0e975aa1ff",
        "cursor": {
          "ref": "145a2034-b9a8-4dc2-976c-22337493dd2a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8906c713-c840-45cb-a0e2-81b783a74f81"
        },
        "item": {
          "id": "7bd274e9-272a-4545-9637-6b0e975aa1ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc19a6f2-2046-449f-bae7-d091fdcd366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd274e9-272a-4545-9637-6b0e975aa1ff",
        "cursor": {
          "ref": "145a2034-b9a8-4dc2-976c-22337493dd2a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8906c713-c840-45cb-a0e2-81b783a74f81"
        },
        "item": {
          "id": "7bd274e9-272a-4545-9637-6b0e975aa1ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc19a6f2-2046-449f-bae7-d091fdcd366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c366ef7-85e0-4ac4-9ba7-11599f554cc7",
        "cursor": {
          "ref": "b547664f-9b42-4ea3-a756-c73684c36f11",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e6345133-8007-4f26-805a-f05a3f6991ee"
        },
        "item": {
          "id": "3c366ef7-85e0-4ac4-9ba7-11599f554cc7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ea6e6c04-8628-4600-9d9c-76b779b53489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c4f8a1-4b17-4ac2-b00c-8512d746852c",
        "cursor": {
          "ref": "70904aa6-27ad-487a-8d73-7890e81a8e81",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "45daabf4-d36d-4415-956f-36cc1d3a2c96"
        },
        "item": {
          "id": "61c4f8a1-4b17-4ac2-b00c-8512d746852c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a474ef2a-e759-4eb4-ba18-40262dcd1174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c097ae-a32e-4ed9-a42b-0260ba94cbea",
        "cursor": {
          "ref": "51104115-92a2-4b97-9bc7-c6b13faf86db",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cd4c59de-91d9-409e-b699-e2b90cadeb67"
        },
        "item": {
          "id": "a9c097ae-a32e-4ed9-a42b-0260ba94cbea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "96bd4206-7f75-443e-a1d6-63e87bfad896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386aca8d-5d15-40f2-9855-2d45d70dda29",
        "cursor": {
          "ref": "5b8ab86a-0175-4c0f-bcc2-d43eaf589545",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c2bbe7b-0604-41a1-8223-fdcafbfd8818"
        },
        "item": {
          "id": "386aca8d-5d15-40f2-9855-2d45d70dda29",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6589fd28-ccc1-44bb-8ffb-bf48735e6f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f204df-0356-45df-b88d-8a426c24da79",
        "cursor": {
          "ref": "11407c1c-7cd0-4303-be0e-c4478ced7b3e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3610c25e-a488-4fad-b38e-61d88c8c847c"
        },
        "item": {
          "id": "e1f204df-0356-45df-b88d-8a426c24da79",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae7b5ac1-276d-4b2b-9a04-a63978eddfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d62db2-f9a3-4451-9aa3-89693ed46aeb",
        "cursor": {
          "ref": "24eaf0e4-b924-45dc-b2a3-044becfbebd7",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b38bf109-f383-4e41-911c-dcce3e1cd548"
        },
        "item": {
          "id": "c8d62db2-f9a3-4451-9aa3-89693ed46aeb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc06a9ce-185c-4e75-a268-c117e4eb73f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b2c3f-102c-4647-968b-b20db5361033",
        "cursor": {
          "ref": "4bea3aca-ad4b-47a9-bc9f-efd7be4c5cdf",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f6d36172-1796-402c-bca1-6963bdb7956a"
        },
        "item": {
          "id": "1b7b2c3f-102c-4647-968b-b20db5361033",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "23e90775-2c64-4f73-945d-da2789670364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e19e7f1-957d-4b5d-85ee-28a886437648",
        "cursor": {
          "ref": "f69bc3c4-5e53-460b-961e-f27557c3887e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "08bbca40-f3cc-4a1a-a126-ab37abc3567b"
        },
        "item": {
          "id": "6e19e7f1-957d-4b5d-85ee-28a886437648",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8ae54347-fce6-4ae7-8e42-9917b6037b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687cac45-c072-4f7a-abbe-f1a140249c62",
        "cursor": {
          "ref": "200500a9-94ae-46e2-9d38-473c53c875cf",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "76935ec1-47a2-41fb-80d4-e227a1307d6f"
        },
        "item": {
          "id": "687cac45-c072-4f7a-abbe-f1a140249c62",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6ba7ae93-2032-4401-91e1-485a283ce279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a11a68e-1377-43e3-af60-d0bf0efcd2cc",
        "cursor": {
          "ref": "b3ef63ea-5fdf-4d8f-b5e5-85dd486a8792",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "90e918a5-600f-4705-b624-af907930c613"
        },
        "item": {
          "id": "1a11a68e-1377-43e3-af60-d0bf0efcd2cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "665c086c-d73c-4c12-aa87-00f6c47b3d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71d7912-af77-4125-a84e-168d5c8aaadc",
        "cursor": {
          "ref": "d0a98ab0-ba9d-4c19-a6b2-014ef07cd35b",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb91f32a-da9b-4fee-9620-2c72ac6beba7"
        },
        "item": {
          "id": "a71d7912-af77-4125-a84e-168d5c8aaadc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b66c4f20-4ae0-4053-bac0-f38fadc689d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67659344-89a6-4b9f-ad45-617d9b31ac28",
        "cursor": {
          "ref": "ff2305dd-d209-4964-a351-de69a103fe15",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aebfbf13-6f2e-40f8-871a-572db383a0fd"
        },
        "item": {
          "id": "67659344-89a6-4b9f-ad45-617d9b31ac28",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4e2249fb-0511-48e9-ab00-9cf0b6a3cf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131d638-fe70-4819-a62e-cfde8266c3b4",
        "cursor": {
          "ref": "1b4fd101-70dc-4299-a260-8dbfd25452c6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f4d99f2f-2579-4759-a6cf-6252ad82288c"
        },
        "item": {
          "id": "c131d638-fe70-4819-a62e-cfde8266c3b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaba035d-48ea-4ca0-8b3c-8e6f108b87e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97d25e7-d7c3-4302-abf2-67991c716f23",
        "cursor": {
          "ref": "3fc61703-12e5-4470-bc8e-0e02f494cb12",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a20ebf7e-39f3-4e6a-be5e-272c95f6bad1"
        },
        "item": {
          "id": "d97d25e7-d7c3-4302-abf2-67991c716f23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9326617c-882d-4c03-97d1-419fc8df92d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3057647-3714-4952-ad38-a2e031115257",
        "cursor": {
          "ref": "9a4f6552-0bc1-4204-af20-58270cdb22ed",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d138e470-b331-45d5-8352-887cfb20ac62"
        },
        "item": {
          "id": "c3057647-3714-4952-ad38-a2e031115257",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad03d8a4-48e8-4049-a14b-aab2aebeb39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3814cc-cd89-4b97-bd74-23da447f5388",
        "cursor": {
          "ref": "7706c1d4-91a6-44dd-b0f4-0802866da51a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18589784-f701-4137-b546-ddaecaef38f6"
        },
        "item": {
          "id": "1c3814cc-cd89-4b97-bd74-23da447f5388",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ea52da1-7e76-4ba5-98b4-a314fd0cc8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae816ac-fa09-4024-97e9-1db7e0ebb4f4",
        "cursor": {
          "ref": "10c9d9e4-c2c1-4f79-9ca6-9b59d93b6b22",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a169ea0c-e080-42f7-ae0a-3a5c78ffc9c9"
        },
        "item": {
          "id": "9ae816ac-fa09-4024-97e9-1db7e0ebb4f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c0373986-afab-4d2a-af9a-9412cecbc2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe4601e-0261-4e6f-842f-78f133bf7a5f",
        "cursor": {
          "ref": "b144ca6b-43e0-4d39-b785-1d5ea340d6b5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dc370ee9-dbb8-4ab8-a3e7-9d6b59ee5a81"
        },
        "item": {
          "id": "afe4601e-0261-4e6f-842f-78f133bf7a5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61491ef1-ef89-48fa-b76d-6adee2f20a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1c058-9a2e-4d38-9c36-15405154e4ac",
        "cursor": {
          "ref": "edf2f80e-670d-468d-a452-d54d683bb0be",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "edce50f2-6e43-46bc-ab93-69843ccaed9e"
        },
        "item": {
          "id": "37e1c058-9a2e-4d38-9c36-15405154e4ac",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb300706-94d2-41c2-b644-e5e34157b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb35eb5-8ac0-451f-b0e9-aaf422b2e5b8",
        "cursor": {
          "ref": "25d2e0bf-3807-4f59-86e6-1dd5665eaab3",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eee073e5-f015-4281-bc63-31d7fcd42317"
        },
        "item": {
          "id": "4fb35eb5-8ac0-451f-b0e9-aaf422b2e5b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "acdb087f-4439-454a-8d61-94dd3b1edc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d1e461-5dca-47f3-9e20-418f4a7cf02d",
        "cursor": {
          "ref": "cc94a673-4431-4053-a3ec-724659fa3f2b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1633bdca-dcd3-456c-83e5-0f267f80db0c"
        },
        "item": {
          "id": "14d1e461-5dca-47f3-9e20-418f4a7cf02d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7f83cde3-84b6-4be6-a599-a3a8c7def050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17f28d-3860-42f1-8641-4784f46cbb41",
        "cursor": {
          "ref": "e28d789d-8bd6-44ff-887e-c9f4eb45e30d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8568fc1-64f7-4233-bd32-a875c3bef741"
        },
        "item": {
          "id": "fa17f28d-3860-42f1-8641-4784f46cbb41",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "092bd27a-6fcf-4611-8abb-eced42f088ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9527ac84-274b-42d7-bede-a200de775e4a",
        "cursor": {
          "ref": "765137dd-98bd-4312-819a-4ec961a087e4",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fbabf807-0a6b-40a5-92e9-6e7a389e1f31"
        },
        "item": {
          "id": "9527ac84-274b-42d7-bede-a200de775e4a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "056c65a4-ba3c-4965-ae32-5aa5792278b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1291,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487ebf6f-75d5-4d0e-8b6d-ead09568ca7e",
        "cursor": {
          "ref": "6c1fa8ff-c655-4561-9d14-ac218eccc563",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "670bab7c-e74e-4833-82bb-65e2ac8bd80b"
        },
        "item": {
          "id": "487ebf6f-75d5-4d0e-8b6d-ead09568ca7e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "665671b5-5c7d-4ac3-88db-3a186d2bb438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16b1ecf-ab6b-4fe0-9890-8d3f1a775de8",
        "cursor": {
          "ref": "f03d925d-591b-49ec-82d9-b9c971adf559",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "12bf65bd-d435-435e-8782-6571fbf90d21"
        },
        "item": {
          "id": "d16b1ecf-ab6b-4fe0-9890-8d3f1a775de8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cc914926-005d-428f-b127-4381d8200798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cfcd0b-9368-48e8-bb29-1cd42dd7e46a",
        "cursor": {
          "ref": "5f1ca75b-d475-42a6-8244-9dc122bc34ca",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "69a0d985-ca10-4e12-b0a6-74a67dd55263"
        },
        "item": {
          "id": "74cfcd0b-9368-48e8-bb29-1cd42dd7e46a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "810d0d89-52bc-4752-9f65-e2bb8a92fde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e0e4b0-33e9-4d20-aaa1-85ba8ad98cf5",
        "cursor": {
          "ref": "c026b79d-1ba2-45b8-a496-5e3ba2939ed0",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "40a0f4eb-ab6b-446a-aa78-f64eab174a2f"
        },
        "item": {
          "id": "e0e0e4b0-33e9-4d20-aaa1-85ba8ad98cf5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d201b649-d13b-47bc-9727-bec7c2dea17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ff935b-c242-4530-b878-ac49fb4dfafd",
        "cursor": {
          "ref": "b2ff34e8-042f-48f3-a6f2-83e3d603dc2a",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "791a78e7-ce0c-427c-9d78-f23b08f34d55"
        },
        "item": {
          "id": "91ff935b-c242-4530-b878-ac49fb4dfafd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77d89407-5f40-4ac7-b4a4-ebb61c17cedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea61fec5-01dd-4eec-b8a4-6cb0382a84d6",
        "cursor": {
          "ref": "9c812ffd-faa6-4800-aa7b-deb8553501f5",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "353ba715-77b6-4203-b117-2a4cee754205"
        },
        "item": {
          "id": "ea61fec5-01dd-4eec-b8a4-6cb0382a84d6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e0cafab8-de51-4538-8d27-b4d55803513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ffa98-3e94-44aa-8b51-7bd61cfc4e8b",
        "cursor": {
          "ref": "747219df-0226-432d-bfb5-61262064ac37",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "728607ac-7ea6-404d-8c0f-8004a0c2551f"
        },
        "item": {
          "id": "121ffa98-3e94-44aa-8b51-7bd61cfc4e8b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cecbea30-719d-4dca-a1a3-401384056c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d37f94b-f564-42ae-afff-9a9febe397a7",
        "cursor": {
          "ref": "5e1e6650-2fb8-487f-8be4-8b4589213a19",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3b0c9b7d-7a98-4f12-9473-d1319180abcd"
        },
        "item": {
          "id": "8d37f94b-f564-42ae-afff-9a9febe397a7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e56dd66b-dc5e-4f96-96f1-10d910b8655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931956b8-fbd4-437e-9b07-64ca0f87616c",
        "cursor": {
          "ref": "b2846b8b-7340-4185-b721-25328607eeaa",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "33e57a10-f0b2-40df-b04b-93123a4dd604"
        },
        "item": {
          "id": "931956b8-fbd4-437e-9b07-64ca0f87616c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8bc5d0ec-1dfc-4a10-adfa-53fa178c9bb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21023b94-4512-427c-bba7-e001e8ad4af4",
        "cursor": {
          "ref": "1edbbfb6-099d-4ff4-9643-fc6b38921d76",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5f960e4a-3e19-465e-9c7f-626eabec9a58"
        },
        "item": {
          "id": "21023b94-4512-427c-bba7-e001e8ad4af4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "20a07dcb-f603-45c9-9b76-db95f6062c35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc4eeb-490a-43df-a694-26072d4c58f3",
        "cursor": {
          "ref": "e4227bcc-7829-443c-a9d5-3055189df65d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e9b7fb9-37dd-4ed5-a7cd-d5cbb3bcdb45"
        },
        "item": {
          "id": "0ebc4eeb-490a-43df-a694-26072d4c58f3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d7f89c5c-f042-4788-ad92-362981e21c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc4eeb-490a-43df-a694-26072d4c58f3",
        "cursor": {
          "ref": "e4227bcc-7829-443c-a9d5-3055189df65d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e9b7fb9-37dd-4ed5-a7cd-d5cbb3bcdb45"
        },
        "item": {
          "id": "0ebc4eeb-490a-43df-a694-26072d4c58f3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d7f89c5c-f042-4788-ad92-362981e21c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d4a38-0312-47b8-b99d-41a207b2c039",
        "cursor": {
          "ref": "1d93f29f-76ab-47a2-b958-e400daf97d4d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "036c0b96-77c1-43d5-8981-5c0e8c8c7d8b"
        },
        "item": {
          "id": "504d4a38-0312-47b8-b99d-41a207b2c039",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39584f66-7c06-4a96-aa71-5c308c656717",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 274,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5903605c-f9fb-4a71-a8a4-7314127d2869",
        "cursor": {
          "ref": "f1cfd960-c91b-4c66-90c8-dd354dfdf0eb",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e758db2a-68bf-422f-b0ef-f45cc436cd14"
        },
        "item": {
          "id": "5903605c-f9fb-4a71-a8a4-7314127d2869",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4dfbecc9-7952-44cd-88df-00c8ddf7d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f90ea3-2bcd-4c25-aef8-5f05de80441f",
        "cursor": {
          "ref": "e8c62c8f-28c2-43b7-8621-1a5a47a0902e",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3fd151d4-71f6-4042-822e-4140df70f42c"
        },
        "item": {
          "id": "17f90ea3-2bcd-4c25-aef8-5f05de80441f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b23e9a1-bc0a-42e8-a766-12969ef67b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80d128c-a6e0-4b0e-91a9-feedf53cb650",
        "cursor": {
          "ref": "1ef7043e-69b2-4465-be0f-6d90124313b5",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f12d7232-a790-42e3-a6ce-c4148687916d"
        },
        "item": {
          "id": "d80d128c-a6e0-4b0e-91a9-feedf53cb650",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b1d02ca2-f5cb-4ed1-8139-e142fd1b2451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9907d84f-67ea-4d97-9d06-3faba6427f16",
        "cursor": {
          "ref": "972f7d68-fa6b-457a-8785-287667b6125c",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d4f00958-b524-47ba-8405-f810e7d1e88b"
        },
        "item": {
          "id": "9907d84f-67ea-4d97-9d06-3faba6427f16",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ae43adb3-cb87-4624-8980-2c4a367833f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a580c734-b02e-4102-b208-e09f3a224470",
        "cursor": {
          "ref": "ea3878d8-80c6-4bc7-a416-9199a3026026",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9dae7284-7424-4856-be6e-5d1b74b1b3ba"
        },
        "item": {
          "id": "a580c734-b02e-4102-b208-e09f3a224470",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cbf03bf4-725a-4642-be52-fcef39ba781a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b0109-1fdd-49ee-914d-6704fea8e928",
        "cursor": {
          "ref": "eb874d00-45db-4608-b786-1484112babe7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bbcb3b6b-5f99-46cb-8e4a-f515f4529739"
        },
        "item": {
          "id": "ac4b0109-1fdd-49ee-914d-6704fea8e928",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ac3c64b0-b871-49f4-a20a-0b38b4f57fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a4e7e2-7eca-4a92-99e7-6ea611adb4cd",
        "cursor": {
          "ref": "1093e5d6-7c67-4fed-8ec7-96f7ca6d3b88",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "92377663-fbc4-4125-842c-ae8a0fa637ec"
        },
        "item": {
          "id": "84a4e7e2-7eca-4a92-99e7-6ea611adb4cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "df44deaa-946d-438f-8a8f-4f4f0bb68468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dcdb9a-d1dc-4413-b76f-2e1d6d224221",
        "cursor": {
          "ref": "ceea661d-cb5e-4913-9634-10844db7c647",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "45bf8f32-65cb-4c88-a898-24ee1ad54fbd"
        },
        "item": {
          "id": "39dcdb9a-d1dc-4413-b76f-2e1d6d224221",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9052c1a4-7345-4fa4-ae8f-ec9c56cf68ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d5ff7-0316-4feb-92e1-95ae94e219f7",
        "cursor": {
          "ref": "56c4afe6-7beb-4eff-adc3-7a95e94e6382",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c27623fa-d3dc-43b3-9eb5-e981f1cc7fff"
        },
        "item": {
          "id": "9e2d5ff7-0316-4feb-92e1-95ae94e219f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7faec33a-92f6-40cd-a579-1f2ef2e6c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafdcbf6-9484-47fe-a906-74de051f7f43",
        "cursor": {
          "ref": "8c8ab60b-2764-44c6-8074-d3902e829c35",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5bd20a64-1b22-4e88-b7f3-d0a54127c9d2"
        },
        "item": {
          "id": "eafdcbf6-9484-47fe-a906-74de051f7f43",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bead718a-01fc-43bd-b61b-da36946e806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55df8671-e2b1-431f-8bcc-59f9142c0a50",
        "cursor": {
          "ref": "4e91fccc-2645-4d19-ac24-a069ee29ba37",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bd50f691-8973-40cd-9ba8-c9d6fdd83ef2"
        },
        "item": {
          "id": "55df8671-e2b1-431f-8bcc-59f9142c0a50",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "671b648f-fdca-4ee4-894f-d6ef6d97576f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a988ec-3c6a-4261-bf61-0539f27d6b4b",
        "cursor": {
          "ref": "a2b51de4-21a3-48e4-9362-2ec991981de1",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d9e46009-3d66-4385-ad70-52e9cfd44985"
        },
        "item": {
          "id": "65a988ec-3c6a-4261-bf61-0539f27d6b4b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9f56c5cc-8a54-4496-914c-a2d67ed98b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652d3801-422d-484e-bb93-17bf6376700f",
        "cursor": {
          "ref": "bef2d199-d753-4e90-ae8a-1b4dba2bc2fc",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "91c9e421-291c-4bd2-bd54-6b01e4ac1659"
        },
        "item": {
          "id": "652d3801-422d-484e-bb93-17bf6376700f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "05dddbf0-473d-4037-a6b6-df3840e310de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facd4892-1824-4f2f-82b9-650b8a52270e",
        "cursor": {
          "ref": "e1385bb5-40ea-48d6-b930-3c73215ebddd",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b6ebf62d-8df1-494e-9d5e-3c0fcda98c22"
        },
        "item": {
          "id": "facd4892-1824-4f2f-82b9-650b8a52270e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f5049cfa-39ad-4601-ab53-cacf03a065f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb18b13-9129-49e5-be17-ecbbfe825013",
        "cursor": {
          "ref": "7faaa59c-f42c-4cd9-a0b3-d9bcbc0aed2d",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "83076e32-a074-4a96-a191-1135eece42bf"
        },
        "item": {
          "id": "afb18b13-9129-49e5-be17-ecbbfe825013",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "226be81f-1028-44ec-be4b-6053d5bd0d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7345092-7ee1-48a3-a32d-bb5758f422dc",
        "cursor": {
          "ref": "631408c2-5c82-497d-b5f4-bd94f6b8d664",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0ef9fe90-2169-4e1c-a21a-5c587bc31632"
        },
        "item": {
          "id": "b7345092-7ee1-48a3-a32d-bb5758f422dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ad864c4-00c8-4830-808a-b53da609e236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69694c1d-843f-4871-b145-5418b025b620",
        "cursor": {
          "ref": "46c02338-84dd-4514-b187-4540246ba74a",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cab4200b-55d5-42f9-9c6a-ba4787512d00"
        },
        "item": {
          "id": "69694c1d-843f-4871-b145-5418b025b620",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39146c39-a04c-4e95-9f40-373be46c7f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c18e12f-fae7-47d3-8b09-65950d24bba8",
        "cursor": {
          "ref": "66292eb6-1320-4130-8659-758d4aece3d7",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "785115bf-6496-48cd-a8b1-7612427952b7"
        },
        "item": {
          "id": "0c18e12f-fae7-47d3-8b09-65950d24bba8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "79b8acd2-5fb5-4bc3-9952-c123b2454238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea5c7a1-4e96-489f-92d3-3eae03d26b09",
        "cursor": {
          "ref": "0098e586-5e5f-4e35-be29-5acf042e36e7",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f3b98ac7-5618-4280-9d87-3ad8d51b89b3"
        },
        "item": {
          "id": "4ea5c7a1-4e96-489f-92d3-3eae03d26b09",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c72d0a37-790f-4747-bdfd-d593aa25e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad85426-ef07-485a-9304-e37b4346968a",
        "cursor": {
          "ref": "a54ed587-bb28-4b6e-8bb3-3862d4ec10b4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c49ad8d6-52a6-4bff-ab0c-caf826a673cf"
        },
        "item": {
          "id": "0ad85426-ef07-485a-9304-e37b4346968a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e2a27c5-1ac0-4c37-b39d-5bd4d86232af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377967b6-32d4-4327-a463-50eeb5011c22",
        "cursor": {
          "ref": "203ef11f-72ab-4011-a772-bc7f19281401",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da6d276f-bc05-4951-a94a-8cf5a17fae43"
        },
        "item": {
          "id": "377967b6-32d4-4327-a463-50eeb5011c22",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "597d9ce1-c8d8-4423-a08e-b8f7e014ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6412f88-97ec-4206-a8d3-7d704036b02d",
        "cursor": {
          "ref": "1ceedbe0-c2bb-47a6-b823-67c91d3e38e3",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eff8a963-705b-47c4-b59c-44f6b3e2caf7"
        },
        "item": {
          "id": "c6412f88-97ec-4206-a8d3-7d704036b02d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dbe1a674-bc20-4976-a4f5-8abda9af5dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa358711-3784-446f-aa01-31f9506a5d8b",
        "cursor": {
          "ref": "5c3e7b82-02af-4f71-a4fc-737100c487eb",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63e5a13e-f51a-478e-a129-c467a227a1cd"
        },
        "item": {
          "id": "fa358711-3784-446f-aa01-31f9506a5d8b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9c64df33-7586-4538-bedc-c3fe02b1ad8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5dd2dd-a0ac-4de0-9cad-e29e413d28e7",
        "cursor": {
          "ref": "53179407-3c1f-4d03-87c0-991ba7f5b06b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8a1d6e71-c8e1-4c02-b08b-41dd6c2dda11"
        },
        "item": {
          "id": "1f5dd2dd-a0ac-4de0-9cad-e29e413d28e7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "43044d6d-36c6-43df-b7c1-abae42cebf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f732e0-cfbd-46bd-8f8b-148ce5446fdb",
        "cursor": {
          "ref": "9e96c3ea-abe7-4aa9-a544-ab47f85920a6",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c9123d04-df6e-49fc-87a5-175107bdb651"
        },
        "item": {
          "id": "61f732e0-cfbd-46bd-8f8b-148ce5446fdb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5836e8ed-763c-44ce-8881-0fd06705116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7235bb-e6b6-4d02-a8b7-bcf91259fb6c",
        "cursor": {
          "ref": "2a836934-74ad-4ef7-993e-5d7a9be66ea6",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6c4227b4-e983-4441-80e7-bd4c79914348"
        },
        "item": {
          "id": "4f7235bb-e6b6-4d02-a8b7-bcf91259fb6c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3148cb50-5fe8-4307-962b-d1c51faf522c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b29d786-e25b-4c54-b0a7-c7a80956f16e",
        "cursor": {
          "ref": "4bb1e7b8-357a-4eed-b228-555396a3f377",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "da83d2e2-f640-4896-8823-5128f6752171"
        },
        "item": {
          "id": "9b29d786-e25b-4c54-b0a7-c7a80956f16e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0fa5866-2183-4ca7-8e80-6b932476f4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95083812-683f-4945-a5cf-6efefad5522c",
        "cursor": {
          "ref": "b154c7c1-108a-493b-bb4a-e9407f99943a",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f03d0269-ec1c-46ee-98cc-03a0e05c790e"
        },
        "item": {
          "id": "95083812-683f-4945-a5cf-6efefad5522c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c941b4dd-b703-447c-ae5f-d415de2d7e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161cd39-a3f2-4d63-a0af-dc2878677823",
        "cursor": {
          "ref": "cf7ec4b6-9760-458b-98b8-2211a7f1edc3",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "01233024-747a-4930-9f5a-35e8b2ae01ed"
        },
        "item": {
          "id": "2161cd39-a3f2-4d63-a0af-dc2878677823",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "08aee1d7-8397-454b-903f-7158f47c16af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3696d388-870a-41f1-97b6-47bdb2f0f74f",
        "cursor": {
          "ref": "0e76bb8d-ceea-4069-8348-e2d92ad157fa",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "27a06865-a42d-4c76-801a-0f5b0e22ee98"
        },
        "item": {
          "id": "3696d388-870a-41f1-97b6-47bdb2f0f74f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2d1a077-ec61-4df8-8930-f5267444dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2390f03f-bac9-4e0f-a230-95f6c15ca72b",
        "cursor": {
          "ref": "78616c82-88b3-4f04-9b3f-340def0a8d49",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37157ddd-8da0-40be-87f7-b7fba91749f7"
        },
        "item": {
          "id": "2390f03f-bac9-4e0f-a230-95f6c15ca72b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "96065ba2-d44f-493a-b14b-2a0ffd66fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9f3cfe-5625-480f-9ea0-9510861081f6",
        "cursor": {
          "ref": "be7b6d25-9fdf-4c99-831b-4ddce3b2df6a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e0ecc69e-7255-4831-b6f3-7f6f2f2fbf40"
        },
        "item": {
          "id": "8d9f3cfe-5625-480f-9ea0-9510861081f6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "48a527b5-6bfe-4fd7-8092-05d5bcd1aea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e02a74c-118c-4af6-8e32-e999cedf8f85",
        "cursor": {
          "ref": "4b915094-fbda-4e9d-9aef-6ccc6446585d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca9b3e59-2b97-49f1-b5bc-36822bc2b228"
        },
        "item": {
          "id": "5e02a74c-118c-4af6-8e32-e999cedf8f85",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d7e2462b-de7f-4c96-a7c2-ac98e5f6629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd5ad77-fc74-4801-8c4a-665e904b8376",
        "cursor": {
          "ref": "db463fe7-a0d0-4f97-a851-8ee4c7bc5a6f",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "73db9177-9792-43da-a240-27ac54100ad1"
        },
        "item": {
          "id": "bcd5ad77-fc74-4801-8c4a-665e904b8376",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e73c1466-709b-454c-8e56-38fdbd4ce232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8fed2b-49e6-4bec-b93d-5202b60c34a5",
        "cursor": {
          "ref": "8c981b59-fafa-42b8-84e3-e1ab4f17e186",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ef6bb93-4e46-4842-adf0-827db2288cf2"
        },
        "item": {
          "id": "0a8fed2b-49e6-4bec-b93d-5202b60c34a5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d6150e2f-c667-4431-a913-48fc8a3152ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a4ff99-bfa3-4da3-aaf9-765749241cab",
        "cursor": {
          "ref": "fcb35e12-33c8-42f9-8468-319a8d1db8c8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e9f118c6-122d-4abe-8d13-faed452465e4"
        },
        "item": {
          "id": "b7a4ff99-bfa3-4da3-aaf9-765749241cab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "515e79c5-a178-4be9-8de5-d8d23bac1249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a260056-08a5-4422-af11-61843aa3068a",
        "cursor": {
          "ref": "9fb4944e-db4d-4f34-8a06-caf60fa7b487",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "657ddc66-58b5-4b88-a001-79bbdd901d36"
        },
        "item": {
          "id": "1a260056-08a5-4422-af11-61843aa3068a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "836282f4-ea1b-466f-87e4-cfe0c7f32b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c86818-060e-477d-aa9a-ccd155f3314a",
        "cursor": {
          "ref": "9542b56d-e715-4a55-ac56-037637ab0c26",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20150bac-a32b-4604-bb27-0be5c3fa3e14"
        },
        "item": {
          "id": "a4c86818-060e-477d-aa9a-ccd155f3314a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "38bd5eda-1913-4ef4-b773-e180237eed93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f824b8-aa8f-459f-907b-cc2535ac9a27",
        "cursor": {
          "ref": "6a276090-f597-495c-b73c-763ff307f998",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bd34e349-438c-4cfd-96a1-8e6a5bc48e29"
        },
        "item": {
          "id": "a1f824b8-aa8f-459f-907b-cc2535ac9a27",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2506d166-b748-4023-b864-6ab846e56d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275c2619-5106-4072-867a-f93566646e99",
        "cursor": {
          "ref": "1059e131-04ad-408d-9206-35f6cd1c9bf5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dbc38b61-475c-44a6-ad81-167c93c32039"
        },
        "item": {
          "id": "275c2619-5106-4072-867a-f93566646e99",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5f6bb6bc-0aeb-4d5e-b0e4-58a136d28224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd4e19-335a-4201-8169-381316a3e825",
        "cursor": {
          "ref": "048e9d9d-73b5-40b5-89bb-71c389b56fba",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b5d8acfa-33ea-4aca-98ea-c7b9b7bca44e"
        },
        "item": {
          "id": "eacd4e19-335a-4201-8169-381316a3e825",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b723206e-ff74-497b-b384-3c0fc9b0a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78c0cce-cd75-431f-879b-fe4c7f35f971",
        "cursor": {
          "ref": "f1b1a75a-9b1c-4116-87bd-90a982385d96",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef510583-33fd-4b2e-bc4e-dece0757f8af"
        },
        "item": {
          "id": "f78c0cce-cd75-431f-879b-fe4c7f35f971",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e86a6d05-4667-48a2-8ca8-c3a0aa911697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d21b34-89d7-44d8-ad45-80a95612926d",
        "cursor": {
          "ref": "28938b34-4ae4-4e45-a482-d6a2bac6a6c2",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5560de4d-f38f-434d-b08d-44864ec36f7b"
        },
        "item": {
          "id": "d9d21b34-89d7-44d8-ad45-80a95612926d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9a3ef603-8a98-427d-b665-35202370f4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e099aad-d7b8-480f-b620-df3f2b0f8cae",
        "cursor": {
          "ref": "95a66b3d-eec5-406a-b7d4-0e1ec850fa84",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1a12f9ae-1255-4e33-b9fd-dc59f18ab4b0"
        },
        "item": {
          "id": "8e099aad-d7b8-480f-b620-df3f2b0f8cae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "456ab4cd-c106-43ae-b186-a143ce3bcda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d678e11-7c81-406e-81bc-6265cf4b73fe",
        "cursor": {
          "ref": "fee91d88-892c-4194-869b-fa69118d3781",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0f9c7eb8-6665-44ef-8c96-7019a88a4b3b"
        },
        "item": {
          "id": "1d678e11-7c81-406e-81bc-6265cf4b73fe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c6c933f-18af-4554-890c-5f0c2dea89ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f9e3e0-a52f-4f0e-9f19-430308ad24e2",
        "cursor": {
          "ref": "628c419e-b389-405b-9fde-f8eaf2c74ae5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a826d9c8-4ae7-4c14-aea5-1af3c7f3b715"
        },
        "item": {
          "id": "49f9e3e0-a52f-4f0e-9f19-430308ad24e2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fc1ee7b9-8382-4dc7-b37e-f43722cb49de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5222a98-17a4-4882-89a7-a559507d4902",
        "cursor": {
          "ref": "e0519491-2811-4369-858c-8173e309ac2f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9997efa9-bbfd-4f4f-acfd-1104a43b773e"
        },
        "item": {
          "id": "e5222a98-17a4-4882-89a7-a559507d4902",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d4e8ae38-c894-4429-8f4f-8235361146d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcd787f-53e6-4d86-b6ad-a9852f77efa6",
        "cursor": {
          "ref": "e8a2e74a-b292-4775-910a-30f224c3b777",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "072598cb-9a8b-4a04-8ce4-e69e2d059dd7"
        },
        "item": {
          "id": "cfcd787f-53e6-4d86-b6ad-a9852f77efa6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a68673a2-febd-433c-ac1b-d8322a88f917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae603373-7eba-45e5-97b8-5fb897dff71a",
        "cursor": {
          "ref": "8c2469e9-bce0-4dd4-aae3-d582dd08a55b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "209c2d30-cbd8-4855-8656-aa529298ddd5"
        },
        "item": {
          "id": "ae603373-7eba-45e5-97b8-5fb897dff71a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7e2d2c97-c116-45fb-aca9-1388d90eee51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0997fb-7537-43e5-84e9-f869a06409a9",
        "cursor": {
          "ref": "ab3c82cd-b2da-4110-9973-3fd1540bf802",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "93f1c4f3-2c1e-4d08-9e88-3c08b5fe1e66"
        },
        "item": {
          "id": "9d0997fb-7537-43e5-84e9-f869a06409a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1ee703f-ed3c-43c7-8ccf-cad11c85e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81a61cf-ebab-49a7-925f-7699fc4a44d8",
        "cursor": {
          "ref": "1fa9daba-0653-4bda-8a1a-142d509e7e9c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "196408b1-c4c4-4eb9-bad3-35c3250db2cc"
        },
        "item": {
          "id": "d81a61cf-ebab-49a7-925f-7699fc4a44d8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d2838715-335f-48bc-b5f6-79f77a305328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd400393-e503-4f38-a9e8-d26873eb0d1e",
        "cursor": {
          "ref": "4b8293d5-8ff9-46bb-9c5a-d31dfad559ce",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3abac88c-969b-4a61-8805-d0c1bbf9b8fb"
        },
        "item": {
          "id": "fd400393-e503-4f38-a9e8-d26873eb0d1e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "14429d9b-9db7-4e66-94ed-aa645381acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a474041-97b6-456c-beee-5677becaee7a",
        "cursor": {
          "ref": "f8a4f6fd-02b0-4743-92b3-e93d987903f7",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1c93543e-23a5-4f8d-a5e4-aadf0d1b58a9"
        },
        "item": {
          "id": "4a474041-97b6-456c-beee-5677becaee7a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5964e190-ae0b-4637-b1c8-3d2d54cff07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ae2bd4-c52c-4580-9436-31103b645534",
        "cursor": {
          "ref": "8c58b38d-bedd-4348-962d-940d18951d0a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cfbc99f2-497e-4e06-b9d0-57ced3cb9f66"
        },
        "item": {
          "id": "a5ae2bd4-c52c-4580-9436-31103b645534",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "19ef5f6e-6887-40dc-8ff9-7ca750ec81aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f5ebc6-dd13-4536-a0c2-3972d67e36e0",
        "cursor": {
          "ref": "241bb7c5-1d64-4b04-99d2-9768ac046645",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d90c68e1-a276-49f8-9bc4-168f7dcee081"
        },
        "item": {
          "id": "45f5ebc6-dd13-4536-a0c2-3972d67e36e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cfac5847-3a10-45b5-9c55-e1c5bc2b3c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bea74f-7dda-466c-b2fa-0b569d55ed1c",
        "cursor": {
          "ref": "dda2da1c-617a-428e-b7bb-1913a30dd966",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eaa50e7a-51da-48b5-b326-8bde8b746071"
        },
        "item": {
          "id": "e8bea74f-7dda-466c-b2fa-0b569d55ed1c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60492847-8b04-42d6-86fa-c725c13ae482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ffc6a0-ee4f-4ffa-9fe6-ba408afc871d",
        "cursor": {
          "ref": "f68901d7-10b5-4d6b-a7cd-1bd2280a6616",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b41658e-b1b8-43d5-a7ed-94f1721fe50f"
        },
        "item": {
          "id": "f7ffc6a0-ee4f-4ffa-9fe6-ba408afc871d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5f859b9b-c5c7-4424-bbe4-19fe14d894d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcb7a2a-d9e5-49ce-87cc-bcadad4c044c",
        "cursor": {
          "ref": "b994a0e0-7787-438c-b8a0-858ff6bf12ce",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6b280a1b-b946-4bf9-902c-a43ff5553262"
        },
        "item": {
          "id": "0fcb7a2a-d9e5-49ce-87cc-bcadad4c044c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e8c77be5-d551-4471-ac3c-3115f9af4672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be572e10-cc97-4a50-af38-bc0f3780a9cd",
        "cursor": {
          "ref": "8b54b1a8-578f-4617-a437-7883575ad5bc",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "018daa45-af08-4279-8fe8-17e9448f5512"
        },
        "item": {
          "id": "be572e10-cc97-4a50-af38-bc0f3780a9cd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d92f8976-3259-433c-b052-dacdd02ac74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa4434-a9f5-47b9-a14f-429e23d7887b",
        "cursor": {
          "ref": "45227855-0df0-479a-a14a-bc3bf32c1bc0",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c632ea22-6c09-4d7a-910d-0c1d4a5afebe"
        },
        "item": {
          "id": "46fa4434-a9f5-47b9-a14f-429e23d7887b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee5c430e-9ce6-4518-926b-744ab63573a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae194e57-b546-40b9-a69a-bf0f6efda7a6",
        "cursor": {
          "ref": "d21cd86c-3d17-4a84-b814-309b723f37ac",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e41df1f2-c1be-47c0-b451-2952c3056ced"
        },
        "item": {
          "id": "ae194e57-b546-40b9-a69a-bf0f6efda7a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c2cd46bb-c000-4977-8c68-c63aa29ad20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff532f-b0b0-48c5-935f-727c816d0b0d",
        "cursor": {
          "ref": "61a98f8b-a13f-4ee0-b6b9-cad65fb4fd03",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f0f5ded2-970f-4388-ab7e-0b35db065e11"
        },
        "item": {
          "id": "ceff532f-b0b0-48c5-935f-727c816d0b0d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ec76de8c-d11b-4096-a8a7-68820c3469bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3522d7-a1be-46fe-8e2a-a1ebd5cb37d9",
        "cursor": {
          "ref": "e550fbfa-3f06-48ad-9b43-09b163dbb9d0",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6ef887cc-f9cc-4cf1-a9df-0db717ef98f6"
        },
        "item": {
          "id": "eb3522d7-a1be-46fe-8e2a-a1ebd5cb37d9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "94ea0c01-6007-4ea0-869a-0cc899c611dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0fb522-1161-464f-b4c0-105a1565c7a6",
        "cursor": {
          "ref": "787b3569-286d-43b7-963c-6aa5ac25319e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9dc01155-e459-469f-a3e0-86eb8d53cbb5"
        },
        "item": {
          "id": "cd0fb522-1161-464f-b4c0-105a1565c7a6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79d049b7-9e63-4b15-b483-842812005b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f272a-4fb3-4e2f-bd2b-a33fe62fbc22",
        "cursor": {
          "ref": "8ac25bd9-43b9-4a14-94cd-db54d527cd0c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d8e7bc6c-a6b1-4bad-af45-dbfd2ec8a01b"
        },
        "item": {
          "id": "3b8f272a-4fb3-4e2f-bd2b-a33fe62fbc22",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "68e5beca-9f67-4e24-ac88-709b3ff326c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00efe0f6-f065-4b57-9c89-3597989e86b6",
        "cursor": {
          "ref": "c1cd904d-e40c-4306-94c5-341a1470c099",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1e3afe68-860b-4118-86d4-ba2e7b34cf69"
        },
        "item": {
          "id": "00efe0f6-f065-4b57-9c89-3597989e86b6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fa0ffcaf-1890-480c-a9ce-34faa1feccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b617cea-24c5-4fa1-88bf-6d3d3bbc17c5",
        "cursor": {
          "ref": "d0565cfd-5d31-498c-9d0e-71e166bbf7c1",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "661cd3da-a645-44e6-a59a-dba37ed7c952"
        },
        "item": {
          "id": "9b617cea-24c5-4fa1-88bf-6d3d3bbc17c5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0915caa6-312d-47b5-9a2a-e3e2f4d205b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed69a5a8-742b-4e38-8fd9-36724f9bb4bf",
        "cursor": {
          "ref": "fc5eb96c-7f97-4a77-9de1-bb077fa1612d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f90c7495-aae0-41c1-8937-577e5060cf78"
        },
        "item": {
          "id": "ed69a5a8-742b-4e38-8fd9-36724f9bb4bf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "017d573e-b3f7-4016-87ca-722f61f1c5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36441593-97cd-43e8-8edd-c17022b880c2",
        "cursor": {
          "ref": "33c851fc-a5c1-4491-8e6d-f79c10fae167",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "701bb4ef-83a4-4ab4-ab45-77b0250afdb8"
        },
        "item": {
          "id": "36441593-97cd-43e8-8edd-c17022b880c2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1261cd1c-ff4e-4a07-a609-19668474ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5657d623-b02c-4b44-834e-18f0fdc61daa",
        "cursor": {
          "ref": "35e25954-6987-4f50-a69c-7438190e62e2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "697d1113-bd47-469e-84e8-af23270500ac"
        },
        "item": {
          "id": "5657d623-b02c-4b44-834e-18f0fdc61daa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "591e4f69-7a89-4ba5-a72f-7d19e1edc518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bef6d2-53f6-4aef-a0ae-fdb26838d33c",
        "cursor": {
          "ref": "dd8955bd-bf47-465e-8780-13299d69d58f",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb053fd5-64de-441a-89d8-55016ab83059"
        },
        "item": {
          "id": "c5bef6d2-53f6-4aef-a0ae-fdb26838d33c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1a33826b-7203-4dae-85af-177ff466eac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9100889-02be-4eca-917f-9b95bf07749d",
        "cursor": {
          "ref": "ad731f8b-e5e7-498b-a2ed-b10a50e5421c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9cf3342e-8d28-424e-adcc-7c559b557383"
        },
        "item": {
          "id": "d9100889-02be-4eca-917f-9b95bf07749d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8ff94e7f-6ca8-4439-8121-c86fd6b31c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ba1457-e5de-4dd6-a25b-33fea7d7f67b",
        "cursor": {
          "ref": "55361dad-1d1a-4603-b02b-de3fe1993857",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "29346c7b-8c76-4d80-9277-ec83ac0b6090"
        },
        "item": {
          "id": "f6ba1457-e5de-4dd6-a25b-33fea7d7f67b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47f67996-427a-49a5-8fee-87d86787198b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e663244-64e5-4978-b394-0ecea87183eb",
        "cursor": {
          "ref": "0dffa371-46bc-439b-ba8f-d95d735ab03a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1173caff-5298-4384-aa32-f60149572179"
        },
        "item": {
          "id": "5e663244-64e5-4978-b394-0ecea87183eb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b2b3309-08e1-4308-b240-063359dec836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f340668-bb20-40fc-97fa-40721dbd1196",
        "cursor": {
          "ref": "d1dc33e3-a28e-4ea1-96a2-a1b3e0e88d7e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ecc9cd83-d3e2-4c6a-ac75-1c29ec262387"
        },
        "item": {
          "id": "9f340668-bb20-40fc-97fa-40721dbd1196",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f1410d6a-3626-418f-a3e2-34bf9cd9877d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d72ab-02f1-4b9e-8c2b-7ab229ea49e4",
        "cursor": {
          "ref": "3c85ea42-eadc-412c-94e5-c77819b889d0",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7f0820a8-2c12-49d6-a6c3-e1a93c623b06"
        },
        "item": {
          "id": "5a8d72ab-02f1-4b9e-8c2b-7ab229ea49e4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "95f6b9f7-7cf3-4e61-814d-31807137ea8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9d3698-b53d-464b-84f4-e9d064a53f14",
        "cursor": {
          "ref": "2f2ded6b-9add-4211-9a37-f85f1747a688",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "06a9b280-ed48-44a3-99f6-df600fbb9dd8"
        },
        "item": {
          "id": "4e9d3698-b53d-464b-84f4-e9d064a53f14",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b404865e-19aa-442f-89d0-496a6d0c58a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93da5215-12c3-427f-9c79-4a3ae07c7f56",
        "cursor": {
          "ref": "36edf51d-ddf1-432e-ba40-0228279c2440",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c66fbf61-925c-4af8-9446-64f3e14d5b76"
        },
        "item": {
          "id": "93da5215-12c3-427f-9c79-4a3ae07c7f56",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "be592013-8769-456d-97a6-12080d4150bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f04d23-4fe2-47a0-bda0-760d13447076",
        "cursor": {
          "ref": "d6e94d1f-35cf-47c4-b911-740680ba5809",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0c188bc4-7401-43d5-a9f9-90b7f1344cf2"
        },
        "item": {
          "id": "95f04d23-4fe2-47a0-bda0-760d13447076",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "db7ac1f1-a759-4b47-a90f-e81b8e2e091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d8d618-ec05-4ba9-88d5-72e65eeeaddc",
        "cursor": {
          "ref": "42d0c7f7-318a-49a7-ba09-9eaaf18c31b2",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9a7ce355-07a9-4f51-8ccb-b14ba4acfe52"
        },
        "item": {
          "id": "b7d8d618-ec05-4ba9-88d5-72e65eeeaddc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82ec9488-865d-4daa-aebd-83c5b879fe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe599881-0e25-40d8-ba76-d674da3057f3",
        "cursor": {
          "ref": "600d82a9-bccd-4869-9495-53ed6f0bfaec",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7864b21c-fd15-45ee-87a8-4b1791b9daf5"
        },
        "item": {
          "id": "fe599881-0e25-40d8-ba76-d674da3057f3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2c5adafb-81b0-4c0f-ad03-b8749bba338d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70602f47-7e1d-4053-ab46-bc011f267066",
        "cursor": {
          "ref": "ce64edd2-49fc-41a2-b138-a3102276b556",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eaa97388-25d7-4c00-a71b-bd5d23d64801"
        },
        "item": {
          "id": "70602f47-7e1d-4053-ab46-bc011f267066",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bb4b18b8-8597-49d3-aed9-b40172f0116b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a5ca8a-ee74-4205-a50e-5f567424bbf6",
        "cursor": {
          "ref": "284048f2-9df8-4191-9e8e-77366ac22db4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8d7ec082-d122-4aff-91a2-a852380b99f3"
        },
        "item": {
          "id": "30a5ca8a-ee74-4205-a50e-5f567424bbf6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7514cee5-fff3-45fc-adc4-35c826d1e706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b568fa-32e3-4522-bff1-fb29c1abb93a",
        "cursor": {
          "ref": "2c5e9df9-c9a5-49dc-83d5-7fc447a2b9ea",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a139c2be-c17b-460c-962f-5b9e51d5c691"
        },
        "item": {
          "id": "d2b568fa-32e3-4522-bff1-fb29c1abb93a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "da76eb9c-04bd-4502-85c9-5da23adf633c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1098eb2f-e44a-4fd8-a2a4-9791b4736593",
        "cursor": {
          "ref": "bfd6edd7-2ef9-4264-9299-439970a4910f",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8a69c2e5-4469-4edd-ab26-5c23bfe9853a"
        },
        "item": {
          "id": "1098eb2f-e44a-4fd8-a2a4-9791b4736593",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "caeb5829-9c45-40b2-a369-ed61055d71da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c949b03-4a14-4d2a-9a78-30f68b841190",
        "cursor": {
          "ref": "78561173-4987-4117-a2b2-766425bb42e9",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "197f0d86-950b-4cc9-9e28-ba37fb5a2b86"
        },
        "item": {
          "id": "6c949b03-4a14-4d2a-9a78-30f68b841190",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cf3bfca1-9438-4b4f-98f1-517d60d9b84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f0b16-e236-479e-8dc4-faa63f833b15",
        "cursor": {
          "ref": "0e13ae5d-cc44-4d35-86eb-b284b6fe01ca",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0046b412-7a58-4ff1-961a-41187958544d"
        },
        "item": {
          "id": "334f0b16-e236-479e-8dc4-faa63f833b15",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "18270a31-cfcf-4a47-a7b8-b4041c302844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcad929-f8d7-4f90-9ef8-294f2d5c52bb",
        "cursor": {
          "ref": "3c31de0d-26e4-4591-83c6-03f8a966157d",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6b2a8755-2674-4847-ae29-bedadaf28369"
        },
        "item": {
          "id": "dfcad929-f8d7-4f90-9ef8-294f2d5c52bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ce279440-510a-4109-b23d-74cc5f7bb255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a2db1-5aee-4b7d-a07e-1e298af1c8fd",
        "cursor": {
          "ref": "e1aeac8f-4e48-4472-8057-e01bc7da4247",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "249914ff-c9ec-4b13-a347-f8eed3dbbf5a"
        },
        "item": {
          "id": "cc6a2db1-5aee-4b7d-a07e-1e298af1c8fd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fc0a5ef6-3dd8-44d1-a2a6-fd68ee8a7734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e08f06-a4c1-494c-9c84-0e7a1b406c4f",
        "cursor": {
          "ref": "1617d7c6-8978-420b-8f98-3e2675c115cf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "346dd959-35d9-4511-8005-33e75d952323"
        },
        "item": {
          "id": "97e08f06-a4c1-494c-9c84-0e7a1b406c4f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8acb1d59-6914-4a2c-bcc1-e55727b08239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bd3374-b181-41d7-b286-6138abc11b9b",
        "cursor": {
          "ref": "cd974bcd-9eeb-4bbb-9c21-b6bf37fde3a4",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4c1c95c0-a72f-40bb-9ce0-a298520a11dd"
        },
        "item": {
          "id": "e4bd3374-b181-41d7-b286-6138abc11b9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "902fa27a-9334-4960-b796-bff5fb6206af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21b993b-bdb9-452b-8545-e705a85339bc",
        "cursor": {
          "ref": "e2aa7536-4608-458c-a9ee-4bfc8427c612",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d605ea1-b7cf-492a-b2cb-8fd75e1912ad"
        },
        "item": {
          "id": "c21b993b-bdb9-452b-8545-e705a85339bc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf4e618d-0fa4-4479-ba07-e689babc01dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbae69ea-3c05-44bd-8372-e4d8546e1050",
        "cursor": {
          "ref": "1ab5b314-5996-4da1-b61b-bd3ae5da0ca9",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "93f46712-254e-4ff5-a3af-77264d9a0eb7"
        },
        "item": {
          "id": "cbae69ea-3c05-44bd-8372-e4d8546e1050",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f992eb2-3b97-4620-acd7-be708e733656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6165df-4317-4f2f-9650-b1cf2e85f043",
        "cursor": {
          "ref": "f7d4eb8d-18e8-4e3c-827d-eee7593a9193",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b436abd2-44f3-4aa5-9368-5ebdc21294e8"
        },
        "item": {
          "id": "bd6165df-4317-4f2f-9650-b1cf2e85f043",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e382f15d-f4ac-484f-a7f1-4c2a62728517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22dfa40-98d8-4625-a176-249c66aa16f7",
        "cursor": {
          "ref": "ae327504-8d6b-4621-a173-a60bf2735116",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "53f87ab4-3816-4d27-b135-3ed5835ff709"
        },
        "item": {
          "id": "e22dfa40-98d8-4625-a176-249c66aa16f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "756135c4-6f67-457c-9f31-0bad957ef700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f00b19-5338-4619-b0ce-11418f3d5f4e",
        "cursor": {
          "ref": "545569ff-c80b-4331-9d83-e0dfb97ba57c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "54390651-0c0a-417a-a86e-114dcf99e5ca"
        },
        "item": {
          "id": "48f00b19-5338-4619-b0ce-11418f3d5f4e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c13cdda-7cef-433d-bebb-2996c781411b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c2ce99-c0e0-48df-9707-39a7087fd66d",
        "cursor": {
          "ref": "e94a22b8-9a29-4846-b6d6-e201b4fa8188",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ddba842a-dc98-4c98-92ea-d799540dcd1a"
        },
        "item": {
          "id": "12c2ce99-c0e0-48df-9707-39a7087fd66d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e965afe2-32af-4672-a424-801173b61e39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 280,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d3ad7-977a-4d3b-b096-5f0ab284719f",
        "cursor": {
          "ref": "ddfd305b-55d9-420c-9d54-854551cf9adb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3ad918a0-7843-41dd-a4f1-607b05f0d3fb"
        },
        "item": {
          "id": "4f4d3ad7-977a-4d3b-b096-5f0ab284719f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e2ab26a9-3fdf-4507-8868-c75ecfbb9d47",
          "status": "OK",
          "code": 200,
          "responseTime": 379,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d32cfb-ee6e-4d1b-973f-0fafd7cb5916",
        "cursor": {
          "ref": "e2aba924-40bd-428d-91ec-99b7a08d3af8",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f0870a5d-7065-443c-a98c-00bde69d8d72"
        },
        "item": {
          "id": "d3d32cfb-ee6e-4d1b-973f-0fafd7cb5916",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "2b181387-e973-4a3e-96c7-6094ef3f72ab",
          "status": "OK",
          "code": 200,
          "responseTime": 366,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc9efe0-dfb0-4e4c-a1b7-7128e52330dd",
        "cursor": {
          "ref": "efb0de8a-c641-4ec9-a432-d831283584a9",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7fa34821-8d4d-4793-8ab8-522bb4bdc595"
        },
        "item": {
          "id": "1bc9efe0-dfb0-4e4c-a1b7-7128e52330dd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4c8a660b-08eb-4033-8b54-c309535f6ada",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
        "cursor": {
          "ref": "e78333a8-e2d2-4171-98e2-cfb2a95905ed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d6b398a1-d018-49e4-9df9-e0a7a3d9f830"
        },
        "item": {
          "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0de6b4ac-e509-4dde-852b-c16ef24c731c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
        "cursor": {
          "ref": "e78333a8-e2d2-4171-98e2-cfb2a95905ed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d6b398a1-d018-49e4-9df9-e0a7a3d9f830"
        },
        "item": {
          "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0de6b4ac-e509-4dde-852b-c16ef24c731c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
        "cursor": {
          "ref": "e78333a8-e2d2-4171-98e2-cfb2a95905ed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d6b398a1-d018-49e4-9df9-e0a7a3d9f830"
        },
        "item": {
          "id": "93697ff6-54a3-4b53-8f95-f03777c3e046",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0de6b4ac-e509-4dde-852b-c16ef24c731c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d755442-c372-465d-b6f4-81d12826dfd5",
        "cursor": {
          "ref": "4219bc9b-d958-4cd5-9814-1c6839487c95",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5fd2ea78-4307-4fa3-bae3-ee2fac0afded"
        },
        "item": {
          "id": "5d755442-c372-465d-b6f4-81d12826dfd5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b4593e23-513f-44b5-b79d-bdc474201dc2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 269,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052001f3-7b61-4c55-80ee-c5df900a63d8",
        "cursor": {
          "ref": "aa53afd6-b78a-48fd-88db-ce3f2c90d5b5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d24c81f1-f252-4988-a288-ab8a4483a394"
        },
        "item": {
          "id": "052001f3-7b61-4c55-80ee-c5df900a63d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87df6c0f-3cca-49eb-b609-55be3be68c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052001f3-7b61-4c55-80ee-c5df900a63d8",
        "cursor": {
          "ref": "aa53afd6-b78a-48fd-88db-ce3f2c90d5b5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d24c81f1-f252-4988-a288-ab8a4483a394"
        },
        "item": {
          "id": "052001f3-7b61-4c55-80ee-c5df900a63d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87df6c0f-3cca-49eb-b609-55be3be68c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91df5b4-176d-41c8-bf2a-c1c7275a7bba",
        "cursor": {
          "ref": "6a5e9f61-b7d5-4072-be1e-976268979046",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ed8339ab-4011-4a7d-97f8-a9d4a9edb336"
        },
        "item": {
          "id": "a91df5b4-176d-41c8-bf2a-c1c7275a7bba",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9822d6b9-22dc-40bf-9b47-d07c86e8b16b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 511,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ea26b-534e-4735-9141-139f07a88f6b",
        "cursor": {
          "ref": "cf23d5df-ba12-4d49-a315-bc6eefa764c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6176380c-c652-4cfd-ae4c-2d3baefbd81f"
        },
        "item": {
          "id": "0d3ea26b-534e-4735-9141-139f07a88f6b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "adf5caf2-98ba-43f5-8a99-1f906bfefdc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ea26b-534e-4735-9141-139f07a88f6b",
        "cursor": {
          "ref": "cf23d5df-ba12-4d49-a315-bc6eefa764c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6176380c-c652-4cfd-ae4c-2d3baefbd81f"
        },
        "item": {
          "id": "0d3ea26b-534e-4735-9141-139f07a88f6b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "adf5caf2-98ba-43f5-8a99-1f906bfefdc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65716c01-2f51-4107-b577-bf7ec8728a36",
        "cursor": {
          "ref": "2403ba26-7379-4182-ae8a-28b5f6b5767b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9dbc0ffe-b976-4743-b490-4bbcbe83f605"
        },
        "item": {
          "id": "65716c01-2f51-4107-b577-bf7ec8728a36",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9299ce98-2b53-487d-8613-4d009071e88c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 534,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}