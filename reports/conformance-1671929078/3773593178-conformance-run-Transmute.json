{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "23c2d7eb-f513-4b25-9811-aa6e567f2855",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d88ffd2-d0fd-47c6-a254-c2e34ac405f6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b15e7f3f-ced7-47b1-ae1b-141853c1dcb8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0346b743-1de4-46de-8fb1-6de0cf4005d6"
                }
              }
            ]
          },
          {
            "id": "a39a05b6-7a01-4df7-a22b-1e8b461a7671",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2c7fb97-9aec-499b-9ecd-e38d9bd6d911",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "704352a4-b93b-4c03-afc1-2456586cdfea"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f9d8b9db-3330-4e88-ad42-8e9eefb13b81",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "827a6a46-7944-4533-a6b7-ee79c073e1ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96af0c08-1feb-4d40-a10a-82ef2d373b4f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58385807-88d4-4d69-8633-83d6e6000cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c3c335c-2869-4394-a872-fce9c52c1e93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "505d7171-f44c-4d0a-82bd-3ea757b1d60e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33aa29ba-b501-4a98-9d53-b1991e33a4b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13ed2b63-1115-4216-93e8-505bd6a48516",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50fee134-ba32-433e-b816-ddd24e9ac41b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77f0e71d-db4c-4bc9-b1c3-95e6ace3157c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "69c7e404-8cca-47ed-9116-b1705d75189a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22018a3e-d620-4752-bede-3d5658d0c86d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afb23125-193c-4bb5-87f8-a93bc558c9b6"
            }
          }
        ]
      },
      {
        "id": "ceea76c0-a8c6-404d-a602-09661d2a375e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bebb59e6-e565-4b24-9d2f-13217da9ea2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35f8e32c-a203-4f27-82c7-583d8b799222",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "349d141c-6449-40d1-88e6-c658742a7bad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d17596a-7049-49e1-842d-7480971f7f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a7dfd65-1988-4403-8cae-f7ca84c44e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ddabeb-fcb3-401f-9ead-c190afd41928",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ff3ab-fb0d-47ac-a8da-0a6853dfb165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "850e08ef-1838-41ff-af78-c0bead5818d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1081326-7409-48f9-b628-92fed01f5cea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664cd626-d56a-441e-9043-347be282ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0364498-82f0-48f3-a3f4-6ac72771c867"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bdd992cc-0906-4a6e-a6c5-0887c49dd835",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "170bb34f-e07c-4411-a6cb-0f83854af051",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16756aa5-2ecf-4c08-9f8c-b11766685f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "541a02f4-da79-41d2-ba1d-712bb3d666e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db39349a-fd74-4427-8727-87dd89de611c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f88c01-bf85-43f9-9743-7da1edb03e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b038b7-c375-4efa-8c00-37b983d92609",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb464b5-1337-47c7-b6b7-1e195fb823d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76a92b30-701f-4088-8012-157f4da07937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c010d01-1186-4ab4-890c-e75e4248d570",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "cc22230a-b2ef-4b88-93bd-061e9ccdd61e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5dca3e3e-6ee0-4750-9cea-3f8845763030",
            "name": "Positive Testing",
            "item": [
              {
                "id": "389cf6bc-00b3-40b3-97cf-f8ed71e4c46a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5398e745-2168-4b19-9514-db002aa22772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "261ad125-3ee1-4a50-bd35-d1a4f9c07308"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be54cd01-40c9-4810-ba7a-059dec67bd89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9afa47af-e37e-4b00-8235-476b297497eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "446c55fc-d27c-4f80-8a56-de32355fa965",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fe2d6c4-eb7a-4005-a1c9-bf5283888d90"
            }
          }
        ]
      },
      {
        "id": "8ec4ab28-67d2-4f03-873a-4f95a3c5c2ed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ea361b3d-bbd3-478e-9ead-f9a912571e00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ba346ba-bbcb-484d-91a9-25c4e20b126f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "633db199-e2b2-49bc-8cbe-ff6c6ca0e328",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cee8909-30c9-4317-ae43-87704776e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84725582-7b93-4568-8aa1-edb27bfe2635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05ee25e-9484-4fa9-9a1a-d82478aa3538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d10dc44-243d-4a89-b356-70fa934a5e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be8e156-8d75-4acf-8535-aa0b12d3484c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5319903f-faa4-4327-a441-4d7b11644f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717b3832-5b90-4252-9dd3-64d66c474649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb8065f-b3a8-4032-a710-ab008fbf19d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3431fe98-716c-4902-9721-e29cc055a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf2e183-7825-4d23-8555-d32d745517f6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f4d725-34d1-432d-9f8d-a7ba71b6baeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86847a32-75c1-460a-bc0a-e22cf629bb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67bef8b-d385-45ca-bc86-3fd148ac3300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3517213-09a5-4693-abe6-a353dfdab2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4954a2e7-2520-4791-8dd5-7e869108e291",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bbcee5-f168-40bb-b00a-bb522a7b6dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b8439e-09ee-4b88-9a76-90b174f667bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc4dca2-4e80-46bb-962f-3a28fcdad5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2db6c5-ea75-4b02-8a32-ae02220b88af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb28888f-6b5d-49c1-9934-6057e214fbf4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5909eb7e-d549-4bec-ab0c-7782799e1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445bf090-5edc-4b8d-973a-90e89bfd2bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c720be7-d685-4fce-a322-ec1b7661737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae1f66c4-9aa3-4c7d-ad10-8c8758ecf9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506e615d-7c87-4e65-93cc-d720a3c3c94d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b839782-22d8-4f35-8952-614640983aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3477c3-5433-4fdc-98c5-382f92c1239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec46f066-26f8-4756-ad3b-8bb6fdd256c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d448188e-c73d-486a-a7a5-f5b2e1febf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1c79b5-e371-4dbb-8b0f-53554cea1530",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ecbf0-c6a1-4086-8bd3-3d5990494999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ff797b-b8f5-4059-b014-36b89aa3ec6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c60e5e6-5e3d-481d-810e-0f5f888e422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9daac4aa-e6bf-4739-865e-78cb23283aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd029bda-71f2-496a-87c3-5bbce54e02ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850825cc-ece4-4e53-b663-3783ad8855c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb4cde6-7350-475e-aef6-80d84c35c1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95fb5dd-3c37-4d7f-8af2-cf6778be9b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cd170af-e895-4716-8b1e-f2ecec53d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d415de8-ccf5-4a20-8be0-da541bf0e56d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f1335-fd03-4f2f-84d7-07f5f1be59e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ace94ae-20cc-48eb-ad01-f71a641d2545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe499587-f446-467b-88c8-92cd106788ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7299240-52de-4ce6-9958-520f76155ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68a9532-825d-49c1-a8e2-6e386338f257",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa4c557-a39a-4981-868b-f2ffe3af0885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4704fd1d-f734-461a-9ae6-b8d504e54ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b422ad3-9bcb-42ae-acb9-3faeaebc8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b2e9d07-27ad-4d08-9d49-ba8b950fe0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59384374-8db9-4d5e-bd05-c42ea58d638c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7056fd-b939-4e10-90cc-d48c32a685d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5768cdfc-b57e-4690-baf7-a4be59f01fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd5a855-bf2a-47ce-9096-58a4de41cb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b1caf0-5f18-49f4-9d66-c838ef6e0b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d144200b-6955-46a3-9b92-0abda32988cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9521b66-3622-4510-a761-57649b3ee119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ff67ee-f7dc-485b-b37e-b8459aca504e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34bb297-4d3d-456f-bd31-447e7e0d1a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a38114fa-1fc1-451b-b2a5-ec3de1eae175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6725008e-d251-4dec-a824-5b2f8c2830f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9628ee49-dbb8-4395-a8be-345fe303c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885d7216-7a03-4ae4-a175-5af969186ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e0d592-f0c5-4a46-b73f-35bdf46ebd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d19f4e-e23d-4496-973a-6ff4d1879760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f624cdd-85e2-4621-96ef-0135d2745e41",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d36c63-7eb3-487a-9f06-5cb0a95c59a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040e75dc-5b8c-4550-8561-fab94fe879a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bde195-dc5e-4ea7-b1b4-aa8aebecff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4265009-4aef-4854-a260-4906d32e6382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fc6503-285a-4cc3-9412-33c6a0f29e1b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b498165a-4c60-4a6a-8f47-ff4ee099e3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9babc194-c1c1-42a6-aa0c-610e049050e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910504da-97dd-4b17-8de3-e6872973aca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d68c80c-c0c5-497d-b646-fdd7ca318a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e04bb47-aab5-4f5a-affd-28048a22db5f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cfdf38-95eb-4804-a382-6f2cba793c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285e2226-207d-4f79-b7e9-e98920de9e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c6690-5f80-44d7-b88f-6acc645cea91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1663c26a-07b9-4888-a191-ae31088f7827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e05537a-e7d2-4ba0-9ee2-c3bc5b1872a4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422a38b5-4783-40ea-9212-932e9f91df71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cdbd4c-6766-47ff-8b83-b3748c3ef3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c1e360-cd36-483e-8097-fb41ec11e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56605359-6a3f-47fb-9eae-06136e81c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc23147-eaed-4240-9181-a8024dbc2ed8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1d12ce-ec64-4857-a714-bbae076555b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55de2a9c-84da-483c-99ec-794c39bdfd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d154483-fd01-4de5-864b-b17674ec2f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26d9cfc9-8929-4aaf-a97a-e0b04107eb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dbe580-5d5b-4b8a-b0a3-b63ec54f62d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9363618b-1a50-4021-9994-90f47d1dea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f3bc82-6e19-44ce-b3f6-1d5dae7fec89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80246a9d-8a32-4649-bb32-7554c184d128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2421c59-4fd1-492e-9597-854babe9f7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780e2542-6fd9-44c9-9e40-22456f74f4e4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d62598a-56f6-4bd6-8aaf-e6dab8140264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918a0458-6466-4dad-af5d-5efe15df2d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2af607-f578-41ef-a753-9219be2de624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3530b108-4dbd-46c8-936b-de624f6dd236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56c4e53-c6dd-4c32-8073-f3229256c3fe",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78320ea1-a812-479f-9b95-89b997db40ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d8da5e-fac6-4e0a-a9fe-5227f657e784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1db56e-5506-472d-99f7-7643338a8f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1f1b59-9f4d-46eb-b64b-632f5b8015f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6339aaa8-1ea4-4187-a90a-3eb957864e38",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e53d73d-6b62-40e4-825c-fc20e3d964c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063ec8a4-1e5d-45ee-97b6-3552a84b2938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8eb479-2a47-4703-b2b1-2b096b3bebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "461d1ad6-51dc-40f1-a5eb-570b6c46a8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77da23ea-f02a-4d31-998d-be493bbcd31f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f02e775-fdcd-4fb3-ae82-32d0a7b2d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9f2e45-a180-43a8-b562-fc479a2eeb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65432c29-0090-4683-95bd-6712aa796fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd91307e-10d0-4a25-b347-9c3fa8611dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0753ed21-2da3-403f-a50a-a937c0eac49c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae66fd-8bc6-448a-a7ce-18ceb5222666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dc6012-97ca-45d0-8e4f-cb9a7142f9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df211dc9-2052-4e5b-810e-42b8faff643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3c8f17-f8a5-4f69-aa44-53606040a682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2f9fb6-2e0e-4235-9804-9081ebb73e20",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76388d7e-113f-480f-bde9-740f0cab38d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd76b8b5-4a26-45c0-bc3f-754ec1a48d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211e81e0-c620-4bed-9aea-a26ebbfdb780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e85c9c7-dd7a-4de4-ab02-e74f47709182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed0ee44-4db4-4df7-817d-aad900e4e110",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cd9995-3be0-45a4-b330-e4568efbbeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539a16e2-5e1d-43f1-91c1-f3add5f3e6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fd7784-2620-4687-9116-29b549e3119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "589b0c94-1bd6-45d3-8c9a-1716c5761dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b10b4-9879-448d-a424-1dd02c1d274e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d3fc01-fcf0-4d6f-8001-325b1ce30d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55511154-4a4a-44b5-9b7c-cd21124a3241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924103db-e882-46d3-be17-edf05f08315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce36909-a757-4502-b354-8c369b517339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63bd9b2-f62f-4ba9-9cf7-aa7ac10e6d09",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58863b6e-14d2-44f6-8aed-8c5a5a4ca483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e913d1c-e7ec-4734-9af6-2beb415a6e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58255a8b-afde-4664-a7a9-ec9b03d477af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4351007-6d19-4fcf-aa2d-f6ccad9fabbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833a1c39-43c4-444a-bdf5-d87e4eadf935",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c040b8f-925e-4940-81ba-310236be00da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d753fb-f712-4b64-bd8b-ec92170555eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01db7e7-f43a-4902-81b2-9df91cc0ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14efb91-7973-48ec-980c-1f2342d7d026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e8a4a-0d2f-4278-bfd5-7bebc26e6b44",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888993f3-8b70-428e-9c64-065ec1a0ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b66603-15dd-4378-ba87-8e5ea0d50954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbd71a-5900-4dd5-98bd-5ca57ac9df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3230d1e9-bd1e-4b3c-9ce6-3568ab9b1a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06793ee6-cb6a-42bd-830c-d84c93bec7c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f7a6d-f3c9-403d-bc93-f70bb3d21b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7908af-6d13-4582-9147-cc1560c48f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c03356f-61df-4ffa-9aeb-47d9cb993bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb21181-8f07-4f99-903b-3736bbae3495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07037504-4be6-46bc-8d19-79f9caff9969",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c755af4-1430-4b18-a8b7-d73f6c071b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39b73f7-041a-4c1a-baef-ef816389574c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e90b677-f910-48d2-83d1-57fb8359a1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d000ce8-ec85-4855-a136-aeb2062f88f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc942871-a010-4224-9c53-b7d3e528cb6a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dfc646-913a-4052-a67c-44ee32d877b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b928e0fe-2906-4b47-8534-c99b91deb007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bf173b-5dbd-44a1-a662-3ff4a978e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "683ebc24-b8c6-4782-b507-fb142cc8a9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ff6a8-d01e-4ae2-a583-9e8544b878c3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c90e82-824e-4300-88d0-04f9a29aaf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a51a24-40e7-4027-b5c7-3a31b8c566dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411298df-c250-4c6b-aece-56a4429ee98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0105eee-160e-46c8-8462-cb4bce4f15ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4499b7a-fa54-4039-8849-f7e32c6bc3a0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0f0591-a9c4-49aa-9218-823ed7f5be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0253d5-89ff-4ca0-8de7-c840ea435d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d793ee8-c3b7-4358-84f4-ac2df1cb8008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4738b50f-a2ce-4065-bd28-2063f3435fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6ec3e1-4481-49cd-91c2-fd7bc5749c19",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee38abb-92da-42f6-b6e8-9512412af7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced5f5cb-bb4d-425e-80f7-98356b96f33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d63bb69-f5d3-4fcd-9530-a1453b12f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd8f584-5cb3-40d8-a7f5-a7be5382c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c7390-aadd-41b4-8f15-3441b8ea9a3f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08373cdb-4939-40eb-a817-ef22ba8b16c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a143b1c-6d41-4310-9182-6d87705fba5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963bfe56-2a93-4c4a-830c-9ec292ffe015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "42b74bfc-9765-4572-9d7f-8193f8fac47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f1044d-d826-427e-8736-eeaeabaaff2e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b688118-d02e-4434-8249-8b5a37c4c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e548c04a-ac28-45ca-ae3b-1a26c7760e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b73e80-bc9d-44c0-99c5-69624575491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91759929-521d-4a5a-ba9c-8cc0d7784669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44e794d-f5ee-437d-9148-9bdd92e51758",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b6f287-5ae1-4520-8c35-8a8b77bdbce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1133cdb8-f73c-4942-9e32-b17cba2e9017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0634fe-2ef6-413c-a69e-d449cf0d1072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b1b8fd-097d-4bd9-a061-3a61aa24c503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a93d52-d240-4942-9426-3616919ca089",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5e847-2da9-455b-aa71-0972904f9885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407b9694-165c-42ca-822c-759db2cc1de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c6cb0-98ca-4f6c-b5ea-b2506520a8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "068b3fe8-f550-4f52-a7fc-de460b103b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab3ef7-bbf4-40a6-a7ac-a4d97a5fc9f9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8829b41c-1d94-41a6-bcc2-b64a8abfdd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5515049c-f671-4d2b-8dbd-2aaa60a619d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85507011-52f2-48b8-ad9b-fdd5cc4bb861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e30b1b8d-8430-4ebf-a694-2c2a92b2f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a23d4d-bde1-4421-ac47-1f0108a2fe77",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a22f85-dfe0-45e8-80e0-dbaacadf474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e2e2f3-5540-4670-afc1-42f0f578fc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecf9406-3873-428d-a1c8-48e19bffbcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5635f983-b30d-495b-962d-63aabb3bfc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de51ec9-5d34-4127-aa86-aad9aee34e86",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5d576d-2fdb-4f84-8505-1136e5ccafdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4f704e-652e-404f-9acc-fc0cdc1d9669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db80ba4-0833-4b4e-bb1a-3fefe9724891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43abf773-4191-4b25-8684-49cebbb122e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8cf696-77a6-4c3a-9b3f-be8b4160c16d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd7f38f-c79b-4de1-b31a-13da3efcd3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77e5d6a-af78-49e9-b5f5-9cd6cccd2390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae52086-d634-4606-a970-7d5f19666edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "72e60288-f065-48b4-85d7-ac2399aa4373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8212edfc-41a8-45ce-a854-2cd4ac30c244",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9a974-8b0d-4b89-809c-d1b57fc905a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f69d7a-fb2b-447d-b261-cd8ec7a24933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eca6e9e-4da1-46be-9e46-2cf2846541e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2a5f43-7994-4fec-b2dc-978058f24ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7333ccec-6dec-44bd-a9c7-9f5448ffd48c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa80fff-58a5-4bfa-a478-b6e695be69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2863b3-3797-43de-a4e1-4127ebda1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863faf0e-9e3e-441d-9247-afb50c53ab41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad63546c-9d23-45a0-a5fd-33f178a3ba82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586e7429-83a2-4a0f-ba0e-e156ad81efc8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2069b8-8b9f-4370-8eae-42492f541122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f8277f-9f9c-425e-a8f8-1058410d1c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52636e43-9e0f-4372-b1d3-e8f0109dcdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5faa4a0-7c46-48d3-80de-6c65e211f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee9cb02-574a-4ad2-8317-9f8bf0204f91",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7c0c9c-484f-4ef1-abf5-7ca98b18b2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c8a764-2dee-4a40-8578-d463fb7fb728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec5841e-adbd-4a4f-a769-95e0f217e4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6123c5be-017b-425f-bcbc-ee852a7a9e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2c31e-6394-4b6a-be2f-800ebe966f7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53badd6b-bcb8-410c-8171-1acbce516f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8463e106-5ffc-4fcf-a5af-5ae673608450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718b5b14-d40c-4760-821f-2289ec282ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "269a26e7-9418-4a06-957c-ef8a774e4ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d556c6d-6331-4879-8e23-4aa543877eab",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d43aca3-1764-402e-a84b-fd39556534e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5bf78b-0bc7-4d6d-8c89-48716d3e29cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9307bcc5-ac6d-47f5-9977-de77fa21d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1a37b7-1fdb-4e50-961f-4d852bcc751b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fc5277-699c-4904-85c4-c961666d76c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a73759a-35c2-4b30-996e-65db16cf6028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f649f32-7c48-4118-8246-832e94b7e6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77696cdd-eb57-490a-9f7c-8148c60d65b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e188723-c1de-4c47-9673-ae430631dc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02a9e8a-5a3e-4224-9f98-dd56cda78585",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f3d10-e7f4-4bfd-8428-337975e682ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827dc88b-028b-4181-8796-d4687cb76942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26251df1-940c-4490-9845-587b098af38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d40109e-4b7f-4589-ae7c-9f04fcb92b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a759a9c3-007f-460c-9eed-2cc8a2709607",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd796c8-6329-45b9-9451-71a7bb9e1fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566af9a9-6945-406e-8941-f86428eda7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c78ad5e-c7d8-4eb3-b84d-0dd1205bb9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcf26ec-593e-48fc-8b2c-9fb2378da1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e6174-aed8-4439-9396-fed434b14eb1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c94eee-68bf-4cf7-a857-7fb88ffcf602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58893223-f459-4850-8083-1311f25c99eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75fe286-e1e7-475a-95c3-04b296ba8c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4d9c53-48bc-495a-b635-d6ea85d2c248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad8027f-f8f8-4751-b704-30d9c2bb57c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb030dd-58be-46f7-9759-7367eb7795ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a4995d-c0ab-44f0-a7db-58555858ff0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c661ed-8b0a-40b1-93a4-91c125d9ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9bd100-e8a5-43eb-a706-4c295431f4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ffbbe-39a0-4c39-9b12-dc8251f229d4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e143d3bc-0bd3-4fed-b4cd-93b7e36416a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc372c56-edfe-40a2-9c99-75ea1a169748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b047eced-b590-431a-ac4b-c74a3b227266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f58861c-92d9-4fd4-ac07-9c39f165dcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7297603-5b5a-42df-907c-6632301708d5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca728e4-4259-48db-9290-e1c7df9ab368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7812ae15-36f5-494c-b239-ef8c158c7364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d55a20e-c407-4e97-8d84-aee245dc75ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f2e23c-5fde-42e4-9180-73f560ba6847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac66a4d-f497-47c3-acf6-a782700bd3db",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876a1ca7-4ac4-40c4-8813-ba3496a60767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535c884f-9600-44e3-96e6-06c29d7629f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e1ec0a-756c-4f64-b48c-67cc128dd120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d69cbbb0-c7cc-43f5-85e7-7d0018aa4a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d11aa15-c384-428f-97ca-f3400e113f38",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fa0e1-bb90-47d0-bc61-543f17a49075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c10a63-25d1-40a3-aa15-dd9e4024e4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352dbe71-e16a-46ea-b82a-2b4098242038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ad74b2-05cd-4f4f-968c-4fcaec18fb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f62143-94e8-4f65-8e65-1a389534709d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73698814-39b8-4f32-99d3-3cfaf110ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266d3c6d-cffa-4514-8a59-c44517eae22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272eb0c6-bef3-4728-999d-cf9d3b8c22a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37de815d-81ed-48ed-9fa0-b1669ea1ec95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c00d4a-c3a0-4b20-8aef-41f57d152ef5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b6267a-bd82-442c-82f9-d061d8287d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa5479f-8795-4fe1-8470-7bf3e1c0b3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2052836-4af8-495e-bc7f-c152dd988c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6979c7-b403-41c0-96e4-afec51fe7dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375eac6-f6bf-49d1-b572-9f56df712d5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f340e967-54fd-4b40-90a2-f114c5974c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bec793f-61bb-4ec9-beec-b9773fb38757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914cd7a7-6113-46a3-a925-b94468c6e76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85dea93d-00f1-4e38-bcb4-3f92b948c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9f5824-9d06-4131-bb49-f4d794badaa1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e86f1-7705-4474-bfa2-478a0bdb451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa502761-eab4-469b-8a88-66145bbe7b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ee1c4e-9ebf-489b-a855-0069f5a84100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cc5ecd-ec26-4da1-91c2-6c85b76842a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124f723c-fb8a-44cd-8fbc-a1c0aa5cf7ab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6e8e7c-e063-420f-9ad4-faac81b5a16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ca52a-7459-4a84-a06a-4d2742498702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3afef5-31c2-48de-ad57-2543bd25c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee69a6f3-bf30-4222-92ec-08fda86cea9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a078fc38-601f-4a7b-800d-7505bc3d83ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508c2c69-de93-4c3d-a683-d94106f09901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62569f66-0694-4ef0-a874-f605d46601b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96caf2-5612-4b7b-890c-df3d9d00313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5920d0b-7a19-4e21-8e20-866274e3d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd245078-8b5a-43ce-8d47-53c48a08c5c5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a00cde5-4dbf-4ed8-84df-652c2c341869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bba917f-5a40-4176-98eb-353f801a2588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e963ab-f5c2-4da8-ad15-2a1be9d74428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9ac427-0068-4b88-90fa-f1877a97465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca125d6-58d7-4993-ac3f-7f4a2723e517",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b530a-e775-4d36-8bb9-83a36cd5f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74403594-42fc-40a4-8e71-8a54c90fb8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082e7c7-675f-44dc-abbd-de7407dd425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd132138-bdcd-48a2-9b8a-1657f7cf559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c21e8c-0f3b-442c-869a-f0d082431dc5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a430d008-7e71-4d6c-92f0-daa7979f4a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5c2915-375e-460f-ab6c-c79436fb140d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f136fb5f-c65c-4d5f-a894-3c71758d8c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8ea3ef-ebe8-4c6d-9ca0-97eb50ebe720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d20a8-95d0-4f9d-a814-1a8c8930f75c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2284ff1-63da-42ba-b228-29df3d9452e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81430b1d-77ac-4b8b-8929-dc81b3c06514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b9c3dd-e0ee-4164-ab8a-034298f24114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45681dff-f83a-4d0c-93b4-96adc883627d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c182345-c9af-4468-8001-6a9cd446af74",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0196a9-ce52-4878-9747-81f07599ea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42661de-4ad8-4e03-a92a-ba891214c19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d94882a-193d-48b2-b191-87f33853b50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3309a68-4661-4334-94b2-c6ad724baa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deede17f-a2f9-428b-9942-89edea022186",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3eaf4e-7a4c-46a8-b365-08fcfa4673d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ead7d6d-ffb2-40d3-b61d-cd8764516c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f338370-aa35-4f74-bce9-7698cd95f659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da8519d-50bd-4061-ac1b-edae63590f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac197eb-5e2e-42ac-a10e-11c1327bae55",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaacb48-6b87-42cd-878e-4cc8ef694c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3218adf-3944-4468-9aa5-5743a4526335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a9b51f-76b2-417c-81c5-eb556d1c04ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5f8620-4149-4061-9f82-8ec22c16e62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b17602-623c-4e7c-bdcb-ad3331d0e549",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8569234b-90b6-45f1-a42f-df5c8d4d4644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eb5d82-a81f-450e-8a48-133fe9e045dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d22fb4-e751-4eb1-bd11-6b86b02449f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3adafaa-8ad2-492d-be13-654c035a8ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312821cb-f1d9-4e43-a28d-e5bf7574c1cb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4237500-2565-4198-85f3-05642557b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dad5e3-88e8-440e-bd27-b3b2b8623e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bb5122-b01c-424c-9694-c4d107cf50f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4b8068-7668-4107-9ac0-363d7d02b849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcbe8b7-a5d2-4032-bdc0-5427b5724c95",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0f6add-255f-4f45-bc45-f3d4811f5cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bba37f-19c3-423b-a51c-09b264e6d768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf87653-bd7c-4a4a-a28d-fbe7a9eb7345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d31fee-e41d-44d2-b51c-70009bc07967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b545a2-a660-459d-bda2-61a83c1385c2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1c70e4-4f1e-465e-8681-ae5a4c5992de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94c578c-bd01-4cd9-ac5b-998c46c69beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a61a3-46c1-483c-82a1-386e93befab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aebef145-d319-45ed-b78b-bfb4b4685032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9383a2-735c-4ba4-b919-cf9093e734ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a6158-e377-4156-a83a-44239160c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d84617-0c86-4c68-9e54-fee917ac0e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893d11d2-a967-4b70-bd0f-7a7f031d24ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84403d7c-97c9-41db-a00d-1c863a631dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb6dcd0-154a-411e-935d-81fdf135ad00",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8644788b-282c-485a-b8a3-c261f08cc429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e9d0c8-735a-4813-aa90-c6c01e0b369b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be9d4bd-eae8-478b-b3fe-c9387aa6458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96c60ae-158b-46c7-a0d7-d0b16b75f192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b87f6a5-d865-452e-a9df-a0107f4de324",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e763cd19-64ea-4ec5-bffc-3b3ee4f32485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cc34e7-15e5-4971-a95e-e09bbc396377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2193b6a4-5d0b-4edc-8d11-c65cb12d5877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dea187a-67d0-4449-a1d0-5e347d0ba990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea0a3e2-e80a-4541-86cf-a4d1384acc60",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6991dcf0-5660-4ccf-994c-6c873c8b469c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16754402-d0ad-405a-b854-3c6626cd4b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad449ec-22f8-4804-ae9f-62b751d030f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8791b047-7e73-4c7c-847c-4978a491c7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29663a9e-fe12-4b29-aa76-4640df3fa0fa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5770caef-9edb-4c35-9b0b-d0c642980f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6df4bef-4294-4b12-9975-afd68713d551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275fcc74-5da9-4736-b603-47fcf3211a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c93d934-939b-4c5f-a98c-91102a1063c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b83d5d1-50f4-420b-a784-9d7790e5c5f5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e2d5c3-ed44-4749-b2d1-d7c0ec63127f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c23e957-4fb5-476e-bc60-a8d9e164b83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acaa75d-0687-422d-a538-55d82c5a6c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf780bb-363c-4c2a-8cf3-ffd13e2b1de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8737e8-3cf5-4d03-9379-dc3537e5a9ba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e0384e-75ba-4d71-b6cc-4b640cf45fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510b5251-2cce-4c00-b5f1-20b2f42e1518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba936937-9e1a-4577-9007-3c059f01744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b176e1c-1be4-47ce-9d27-1a52348b85dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaab704-b55e-4b48-b161-258e036c530b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1c5404-8c64-434b-b269-9fa5b11158a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfb728f-be18-4663-9433-841434bf2f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e309ae22-4d1f-4932-82e4-b2766916f334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4a704c-ff0a-4add-93af-d80797431983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a33c24b-e7d9-426f-848d-23320bdb4af9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd1556a-257e-4fb3-ae7c-64fb7868ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fe2410-6447-473b-8502-c0990caff652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4792705-7b17-4546-87fd-ab14d7ef2812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab1b3ff-e12a-43d3-a658-4dbd3edb9403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ab4301-ed56-464b-a0a7-8b8092a04327",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a5c0d6-d69a-41c9-a3ae-c7b1ac6e2d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472668e8-aff0-4c0e-987c-9570f1620e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2164b9d3-c6ce-4e90-9e39-db35dafd1064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da4e367-c95b-414e-899a-4f14f08de07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a25e093-e8ce-48b8-a4fb-d95f0f18ba92",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32d823-308f-4620-a195-d5fb4a8d6fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cced4b5-9ba5-4df0-90ff-e794b01082b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b54fff-b450-43c4-86e3-601c2ce4b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12735ffe-a9bd-427a-a055-2a93204ab14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8b7f86-4aa2-4788-b8b5-1b70994d1a00",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7cd4d1-85ff-4a82-804a-7a43b2db4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410c3438-ebac-42a2-90a1-9290065ec56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382eb9b2-fc17-47fd-85e2-9f29ece8ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90300f5c-17be-4587-a691-a532dc3172a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29021e4b-67b2-4f75-bd11-67f7c3ffd47f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d2217-cd94-45a2-9061-a858b4bf8cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364cd2ad-8409-4d03-b83e-72d46117b416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72562dae-ab93-4c88-84ea-fd79b0d5ce02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5042dade-1155-43ee-aec6-44514c83f31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26096225-6e46-431a-ac9a-7db91aa1ec4d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9327c700-bbff-44aa-827d-8b289812bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc00e00a-f11c-472b-b4d6-5aa284db957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33d8f36-c5f7-493e-9703-8278102aa617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72823356-a319-4995-8db4-71c90fe5a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9206c05-a31d-48e8-947c-aa1179755390",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05997fe-de75-441f-b5b1-e765e56ce0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b613c8b2-27db-4a79-a1af-bc01e0916b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28e4d4d-ead6-4160-ab09-dfcfcf2a647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9b6be4-3da4-4ab9-a61c-a1b1d082c5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caedbac-e3b9-4bb0-bf8e-1995da656b0a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d95505-125c-4468-8757-a9b4eb9dfb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7450f1-c0e9-49a1-8188-86c44d69b138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710c9775-e417-4e0b-8e96-414917d4666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddc045a-c059-43aa-97ed-d5fd896b0b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838e82d4-eb94-44f2-8393-f70786c83583",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e70b22a-2c83-468d-98f8-9385e01bf0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c7d3f4-2c78-4950-a649-95b1ac08dccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc313ac-2cfb-4737-be4d-4d861447f35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa22808f-6239-46d8-9d28-1db1ea4d536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aa70a1-586e-471a-86f9-176a30159791",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b296ae-804e-457b-97de-1466f1d49187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a8fb0b9-db96-4188-b721-83ba35387085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83df5d3a-5a93-4120-bb3c-917f762eb8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e57768fe-03c3-47f9-a55d-174e08ae22c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1cb2231f-dee4-404b-a3ca-836052ec2da5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dde57635-1d95-4cb2-8e9a-399bd3149e55",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c67f37a-cd41-4db9-8691-42169194db78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "868602e1-7861-406a-a652-ed94f2f091d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8d61cf-f942-46c0-9985-14cad5fcb477",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "826289ce-0ce9-4d5d-a5e4-d2e5aa6bdc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40be9345-6d9a-4510-a57f-72088e44a7eb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45920ab-2b93-49c1-9f2b-461aacaec0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86387a24-e4a0-4f57-810d-f77ff22914e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f333a9ca-402e-4fe9-9427-fb09296eca92",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9be9cc1d-c129-4d49-91ae-7aec823c04e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a631ff1-fe62-4854-8c5c-facca3959b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55337f8b-37bd-4ad6-bd17-d3668288149f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0e5b883-d5b7-4903-a270-ec9114d23085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5be42ac-f6d9-475b-8e77-e3fdffb6498d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d33561f0-6d3c-47aa-b8c9-387000c7dd74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdeecae8-574c-4cc6-a119-c6740880fb8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89ce3678-4718-4b68-b804-16d32670422f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "509e6ae1-c058-4ebc-8ce7-4dc5100098a6"
                }
              }
            ]
          },
          {
            "id": "2d5bce6a-4a94-42a0-8076-3510eec77ffb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "651083aa-25c5-4ef4-b8b1-915ddfa421f9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32deee9-3cef-4c9c-af47-a40b82eabb82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1daf5a0b-7839-41dd-ac57-18c00249ec69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cfae08f-db7f-4e6f-adf2-a9f4b7361fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcea911f-a38e-401a-bf26-76161793fab1"
                    }
                  }
                ]
              },
              {
                "id": "55ee1b46-375c-4244-a4f0-5cbcdbbce3e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65748c47-61ee-4a10-9154-83b358abbf60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc8d2e8b-524f-46f5-ad5c-98bd79219111"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6417463f-69f5-4f58-8cab-22b05d01f2f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0db2538-88c0-4cd4-b9dc-80db9fc9204b"
                    }
                  }
                ]
              },
              {
                "id": "a465a38b-9a82-41c9-897a-a7ba2f64503c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b5b258d-54ab-4a69-baaa-7040e1b84b11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9d18605-4673-4fc4-ae96-75e69949868c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4147a2c-7151-42df-93d8-fdf39ce3253e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "45073035-2348-41bc-a21f-49ff90ec620e"
                    }
                  }
                ]
              },
              {
                "id": "1b4250c9-16c8-493c-91d4-6b8eccf67839",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd976cb0-7a60-4197-a624-78001a7e425c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74b5eda4-e81f-4104-877a-e5279d93aca1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7af52d20-7c51-4593-a13c-1de9f2f4bc87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7bc405bd-4f61-4cb1-9ab3-f0d5e12b9c5b"
                    }
                  }
                ]
              },
              {
                "id": "2a35c343-9cb4-4c21-8ab7-41d69bb2e04e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eed7687-273b-4c24-a993-2e267c9a594c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "744859a4-0ab9-4e42-9221-4c06b6e64766"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c31fb36-ef9c-4f6b-ae0b-66533e0da978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7252b778-4516-4d33-947a-79343bbe9dd7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18359be4-b488-4eb2-b42f-6035a7574aff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41272c5f-1cc3-453f-8f57-cff833fd60b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05f5ae0f-9c56-4a50-af70-2ec461284933",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bc544bb-f2b4-4baf-b666-c768fa1b9bed"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d59497-bd11-426d-a538-82b1f8378434",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2851e45d-0cb5-4095-bf1a-19b2265bfc1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4d2cc75-94c1-4aca-8ebf-f27befa41ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "658b5055-c2bc-4751-953c-687337055e78"
            }
          }
        ]
      },
      {
        "id": "0a8a43a5-38b6-4382-a775-e983c1521d90",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7fde9dd6-b257-4df2-85d8-2bbd6a25bd38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df201eca-ecbc-4c2c-b39d-4e976a22852f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3424cbf-5b0e-4db1-abe8-6fdab5e0fc5f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c66b9f-f29c-4f49-8885-596b225e3163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561d61c3-7cf6-4350-bb30-575268e919d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7071ce7-b6a3-4d33-896b-855b106b5c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7236414b-ad0a-4fd5-8657-571edb4cdf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138d9893-3f17-497e-acac-7ab93a7fdec2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97220126-c83f-4560-8643-838a11858e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819540f5-49d7-43c7-9adb-78ebc71abf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f5f03-1d45-47a7-9932-cca334e38a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7849212b-b5dd-434b-8087-271eeec59001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e556be-1a0f-478b-94b7-6204b707af76",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae556d-249a-4573-a2db-cf36b312d703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e57081-89d5-4eeb-98bb-65b9a7ef4300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2488b9-5602-40c1-9591-ae8a9d900ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22189175-ed48-42cb-9345-2a7116447aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a1d26e-f754-4604-8ef8-e9b25bc41313",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e08245-56a4-480b-a761-9d9fae257461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f761d9b-d8db-4cd4-8181-8ffc8d6fc74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d10630c-f617-41f9-9fc2-3f565517c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f993ddb3-ad90-4e6e-a35b-11f9b3c81fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19f7fb0-1fc3-45c2-9c30-a1620a5dcc5d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6814f31e-4280-4f7e-8e04-2765f639a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eaf3ed-51f7-43a6-8cff-157f6319573e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ec6a8-eed2-45be-9eb7-ab0bb8f2ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "250aa178-2509-45fa-ab25-f6b76daf9715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13944da1-1c3b-4816-a8b5-5dbfe2e866dc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4acb98-18f3-43b8-aa33-9dd206814818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eca9e57-3b6a-4f03-bccb-f9a4cb6f54ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd8646-f218-41dd-ae56-c81e470c6375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ebf098-e976-4fca-9c1a-0f71765341ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f30430e-08d4-4242-adfb-0c4c36016c9a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a841b04-898b-428c-b0ef-02c3bb7aec07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3e2317-fd33-4460-aadd-28be80b6827a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f79e490-280c-4471-bee6-b53c33eb5905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c712558a-de6a-4eca-af90-bd3da2157d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d3d907-646d-44ce-b4c8-4a6a9ed588b9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71145f27-d0b8-4a08-8582-459550b487bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f139197-a014-4115-8a76-8091cef806c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad675912-539f-4a5f-8615-98e9b7588ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c34037-24c7-4b02-a4c6-adbe700000aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1216b9-4d0f-4fa5-b9d4-53b2c7447787",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d322cf-7380-4832-9987-ac0963bac30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4787e9c-b995-4182-9fe2-4688354be276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714b61d5-b12f-40bd-aa13-f6baa2c14e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1908a2b2-2b1d-40c9-9633-1f319b7d5de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f79bf01-2262-4ca4-b868-58f4b9ceb2b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688addb7-2084-4c78-94fc-bf25f6acbc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cab7fe-1447-40c2-9436-acc5f5bdff70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8d80e9-bd49-48e1-8d66-19f232cb7ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5100b7-365d-49e4-907b-2570464b76c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded5e15-940c-4a9d-9b4d-3f6367b01b56",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64da2920-633c-45a9-bdca-d6f41583d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2794f5-ae9f-488d-915a-5d093d6629bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a93df29-6e71-4a24-9280-e63750e4afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "962a4894-6bf9-4df5-a80d-59237087eeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ab910-a4e5-41e8-abbc-418a896df3f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bc35dc-64f6-462a-851a-c866f424d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244531e5-2e25-4981-922c-842a4a5bd88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930c0ed-09b5-413e-b314-b432a01a0e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18c1f183-b4b4-4744-a9b8-6e0af2de035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8daa57-3927-4a14-aa33-8180ed818184",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b691dc-e234-42f0-9d19-ac518fdbe988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3431ecd-70d9-4dab-bbbc-6595aaa5d8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2209b7b-d624-40dc-8a5d-324b3f2115ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00389e8-6a7a-4da1-9d2d-51f817370f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c15b29e-e4ad-425c-89db-f3f8cedcb89f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d519b3b-e29d-4979-9415-e250295d6aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4956b16-cce3-4877-8dfd-e682a35d67b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5820252b-dafc-407a-9ec2-b6adc3ba2dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb97d165-6c0a-48f4-97e2-7d2c3ddc65f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2513f2ff-8e2d-40be-99d0-c1f1860dcb01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e51981-83ff-47d0-8c8b-f49b7b6bb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d62a2da-1b1d-466c-839b-b74ada9ffd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a14ee5b-72c6-420b-b509-de00ebf28451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afbbbff-dfe5-461a-a2e5-7e7bcb897ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84507d2b-5a00-4498-98a9-f1cf00e47a37",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff8930f-5214-4e4e-8b7b-2debe59a57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f87b21-65ab-48c7-883f-394c9bba1fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3df6983-87dc-4362-bf9d-cc88eb12c68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9f59c6-36bd-42a6-8ac0-23deb8675f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f755f8f-da10-4d91-b964-a34e8a536987",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa7d93e-3587-4576-8b81-7ed219f26c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19de2e4c-8532-45e0-b8df-0562ba2f7414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5e937-61c2-42c7-b24e-7e58627d6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "160e9ace-56d5-4912-80bd-98a8dc295c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79745ac7-a799-4764-a2f7-c74b20615abc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80248a9-d249-4108-a327-d8d2b3b9ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b663fbdb-3cd2-402e-b04c-f4222a5228cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44187a1c-55f2-4c1c-83cb-bac5ad49df38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3961f38d-b289-4ea5-9f94-512e7a27c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc055ee5-d256-4661-b137-5c5b99d15eb6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4168f72-b0ba-4d37-baca-3664415a01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89d4c39-1c64-4a45-9f64-a3082f953549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e63f2ba-83b9-46fe-b4e4-f31bc2c51665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82fd9e45-5b67-4efe-8566-d90da70e5f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005a5388-0e3b-4952-adc5-5a6b4befbd76",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc4ecbe-13e5-4d25-90bf-e9c129b4c0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712d23d8-f59c-4631-bc2e-e3830496fe6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b7a60-9512-42ad-85c4-b8c6ecd923fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b3503c-40c7-4a5c-a8c9-dbb596088df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de8fa33-e8a9-44ba-b44c-e348639d03c8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406d282e-9b13-4c77-ba6f-2835bf4cc73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24ac076-eff5-4ce1-b74e-cf82327beb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256e2a22-d8c2-4230-8486-08d4447be3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74270848-b839-46ff-aeb7-fba14215e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a6280c-bc05-4e36-a485-21a80974aada",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1010dd-c458-4651-b7dd-5e5d1db5c1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4dcdee-c8ed-4d4d-a14e-59089958fb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7b9a8b-6191-4e96-96ce-ea233ba311af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c11f057-ed15-4d1b-ae53-c57d13722421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4961243a-e497-45aa-ac57-bedbf8d25bdd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce7e129-6ff9-4739-9054-d8e2658c0139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9bf519-94a2-426e-997b-36ec4f7c0547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a19987d-8608-41a3-a29d-ed89dccbf3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9cce27-1595-4bbb-84a3-8edffe88871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d2b585-8c76-45cc-a3d1-6c60fce06354",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9595984-a35b-432f-aaa3-a8f49bc6d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1648f3b2-3697-4d12-9689-ec8522300a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9be3a85-412b-4068-9349-445c22f86aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2107530b-14ee-410c-90e2-4eebd910651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1f91ab-18a1-41fe-8f76-0cc1cb0330be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffff643-782b-4518-b41e-5310101ac24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07094ee-2017-481b-9148-a4c44d9520fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa0dbf5-7f13-46d5-b7c9-569268167a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9344fd-7356-454d-b422-5291735536cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36fc913-dea4-4a09-a840-aa5836f62c9f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab94615-122a-4f31-be57-e69ffe281df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415fddf5-f0e8-4124-ad31-ee1cd934d9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656ccd83-5642-4a95-a395-cb1964ed65ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4f047e-b53d-4106-ae66-81911640786f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd574a17-893c-4e80-b400-c44348684bf2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c83a4-7b8c-4441-a057-1ab2d17c0a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af39b127-b1a4-49e9-b606-3ff74c2ef694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdceeb-f4d9-447c-b143-3f0e26412030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dad0668-6e55-4f5d-919e-5c143d5de5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c28157a-2d46-4bac-ac6a-81c73cafd749",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f37624-70af-4333-931f-30317d5be8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36edad1-fa3e-46c9-9b13-0dbf5f5d7fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148ec72a-8ed6-46ac-9779-1e717ba87a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "633b0140-6729-4224-a135-52135ba9d0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78283ba-4183-48a0-a466-888e768125c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba152ce1-9314-4606-8fae-893d0d783805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c503acf4-e5d1-4e37-9956-ca794c12ad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ba669-da31-4dce-871d-d4d1e9e1f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d843d0e4-2732-4eb5-98a1-8ceee2d2d70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42843d2d-4f87-46a5-baa8-9dd7ffd3f001",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048a908a-1ec2-4653-b16b-a76f9606cd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26820431-e42e-4e11-8c9b-f378cefd1102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b43808-05d8-4fce-98cb-55231473c9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609a6fd7-49f1-4276-a74e-106d707060fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7d248-773b-412b-b2e9-86b275913bfd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3acc24d-bc55-4d00-9440-95973c7b6b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa47237-b4b4-47b2-8244-f5aae380db7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9647c186-c8f6-4d48-8678-833ef44a6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59286df-5e30-4078-bec7-966fb3313cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e21dab-fb81-4928-b250-0278e2b87635",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc4ae42-1e1b-4cea-9fa0-2cac836e7199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758817a7-8b1c-4ea8-b293-6f9da5e75dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd27ce4a-8a76-496e-a8e3-d1ed5fea7952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957a21a3-b3f9-40e8-bd41-32cb1d251aa9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "990787ad-4789-4464-9de2-c93bfecf5bcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5561809e-df22-4414-8ec9-71c17fa07299",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abd5f6f-16fe-443d-a849-3e2628f11fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b023f745-9d87-4f15-a034-c65a34c1fb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533da288-207d-4dfa-be9f-0eafc35019d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaddb2aa-ba6c-4edb-9a04-d672f3e3e4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd13a283-75e7-45f0-b61e-622e82dbe081",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df93285-0fe8-4ea8-b572-e22a1279cb60",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6df7ff7d-f084-4487-abe8-7c8a1f46b8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61cb5ac-f7fd-440a-bc16-563babbfbfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1590dcaf-c54f-4530-b7ec-3419c4bb7e7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef735c8-ef60-475e-8717-5cfc7987d993",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd618d5a-3f25-4ba8-8a74-cbd8c2b0852d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e8ab2a2-1048-4559-8db9-1577937605a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1ec509b-3417-4982-9aa0-4ee2cf2a3dea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e779ab8-0382-4932-8bf4-32f2edb4cd9c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fce77f5d-8dbc-463d-bc94-0d5cc0ffa811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4b662fa-7f80-4cc8-b930-e888f70bc40c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "469cac52-ae89-49b9-a088-81daafbe31ad"
            }
          }
        ]
      },
      {
        "id": "60a0a48a-bcba-4491-aef3-c4a78f9c400e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ee7df0b-129f-419a-b72d-6410388bc042",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7db58cca-77b6-4a64-856e-e79bbd223848",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36b13535-306d-43c7-a72d-f974fb91e35b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f960b14-0071-4a32-8b13-c995419d05fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc515c2-3c4a-47ae-89db-921125707956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dff3bd-5114-4ec7-9b55-e7301c289f95",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf9a7e5-5fda-45ba-995c-ec3191d1f7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf25662-bcd9-403c-888d-d23594a7ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5c3b18-43c5-434f-a447-305e4d26752a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4373d0-d585-4fbe-a82c-f544ad344b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ec7d2b-e76e-4289-8e69-1b34812bbc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a79d87-1c2e-4ef4-96e5-6073dd360538",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df8ba1-0dfc-482c-94a3-52f2b68a2847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab44f43-3c0a-43ab-b304-d6bfb6373195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c129cf63-d81f-44e7-a4ef-045a5db8f6d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bffe9ec-7995-471b-b0bb-29482a2c4d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015db596-d502-41a8-9fd5-6861a1600149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef6c777-a893-4986-92e5-4027f78589ec",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba97402-c976-41c1-843b-18dc406b2194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9dba91-f605-449d-956b-121d227804c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecab521b-099c-4102-8467-6286d5b8447f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc7a52-6c55-4b3a-8748-dae9052bcc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e30f6fa-8294-41a4-ad54-cad30fc89616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e7ff3c-6710-4476-b2be-0e0bed948f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a578c56-9c10-45ae-9533-b0e38ea4cc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6217b59-21a6-47aa-84e6-76c9891ae499",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234929be-22ae-4a1b-ac56-43bfbdd15fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddcbb93c-2b69-4acf-b26c-28ef2047409f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c44bbdd-5ca4-447e-9ce5-9a567dbf416d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ab591e-0d4e-40ad-9a69-5c983a46b7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993b8f8f-551d-4225-b12b-b26c4b40575a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbf382b-8fb7-44ac-bce9-c89bf1de712a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4254f3ce-b257-4c1b-ae9f-9a782495d9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fa3ec8-6cbb-41d7-9d8e-dbf1bdb49f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b0b04c-84ac-469f-8a26-43450b5c0fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bbeb60-d981-44d9-bdab-d07fd1ef3120",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647742b6-b129-451d-8c93-58b58cca548e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4bb3d5-3c51-4486-a25c-c8189d106b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f23bd9-0606-4c85-a920-475a1db35c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0059da-1400-4ef2-a2f2-acd92cb7275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20762641-98b7-4c88-ac5b-3b281abb9050",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdc7e4d-b0e9-46b4-9134-93a4623bb19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8610581d-1ea3-4976-8c63-da011564dc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9b0a7e-fbad-4887-93e9-c68a04a6fe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdca2360-600b-4552-8c87-b1d8727d3dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936c3b2b-e625-43b3-9387-77ea0f4bc799",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b2f61b-fb46-4766-a755-af729647b688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acdaae8-26e1-4afe-839a-ac5128c6e333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b013bbb-681b-42cb-a065-8673eb4f63b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1954e8-3351-4ee4-a8e0-12a59f90228d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a34ec-47c1-475e-b913-d6873ec3f857",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8b524c-d422-4176-aedd-d3eb5580a5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b6bff6-69b7-47fb-b592-37fc9ce0c3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa20039-50b4-42b5-a47e-b8e1f5650d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9397b2-26cc-4586-bca8-74cb82677419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21ed213-79ac-47fe-bfa2-1d4c713270bf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2cd24d-e7d8-4bcf-8d2b-a26ac8951625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ca9760-af39-4d2d-8655-2beb2026438f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c484c-9f0a-4d1e-9ec2-e352ee424705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a33a230-41b8-4615-9f49-cc84056a3ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08703d14-076e-45ba-9661-4f8dbd6d8d3d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d5db23-1e9a-4434-9620-c9554a83f378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14b02b2-e478-44dc-a240-8009c1469e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efd78f7-3ea4-4782-80f6-356e18d455d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2263e3d0-1493-49f7-b73a-e88286c06014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ea1b9e-8d04-47fe-a5d7-4b3bc64787f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eefda1-e2c0-4e66-9deb-10b9910ba5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4ce7b7-189c-4ff6-8139-bac33cc8859b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956dce90-8226-4718-9917-da866334800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1cd6d1-b6ca-4842-b70a-76151a909cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e719e48c-8f36-4018-84d2-f9cdfb436a56",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60db0253-5426-4cea-9bc7-524c982a2712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7510c6-055d-4023-9f01-4fdc77d6f5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619ae359-304e-4180-99b8-215f579c6c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6112cd8e-6f85-49f4-87d5-b067ab736ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c67b310-9257-4d64-a2b7-7dfd9199f853",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2595d05-1c9a-4c13-89e6-b6f8092806ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440e5e74-822a-4a35-8e94-dcee9c5f649d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c924b40-5123-46d9-9f96-ea2918aaa305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6a2715-51fc-4aaa-90d0-dfe625546a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4a95c5-96f3-4aaf-9dc6-f37320c631b9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c436501-8dce-49ed-8f22-dd8369d34496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df18438-71d1-419f-bf59-325dbf9db861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8814961-c146-404b-a98e-c2cedc95eb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be6862e-e4f6-48b1-a108-777875bd309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52327baa-587c-43a9-a3fa-1c34dd86ac18",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211b31ff-bb46-4514-ac8b-b0d093bdc66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f537da-138e-4bb2-947f-193c8532ca68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01876446-0ed3-4365-a4d2-ec5d91d7358e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6255aed-ab6b-4bbd-9b85-3b1c6e613628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1f75a2-3839-43d8-bc1e-3eadf2205914",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d881a94-b17c-43f8-85e2-a01ca283d20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ff1f9b-4e63-451b-bc97-8afa92227e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b5c566-b6d8-4515-8766-7970620fa995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738374a9-c353-4ece-9daa-6bb1f935f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad7cbed-4f55-4bc0-b60e-bf84461b99f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdefca8-f6c1-4091-8fdc-ba15d941bbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fe530f-1ac2-4daf-bee3-a79623ad21da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75e956a-6086-41e3-9db8-2795943e2306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6389ca-7e7d-4587-9fad-0fed69c55a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed67e55-c2ae-4a8c-89f7-d3479d84d159",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcc397a-d40e-47ca-8892-958def5660f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b984033a-1737-4c74-bb82-d5bfac5f69b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bcb11f-a59f-4afa-ab85-584a88c4970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9d1822-23a4-403f-89d8-bcb665442ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9b0287-2a4c-4b9e-8788-071074839977",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2613a09-9dfa-4676-8597-437479f5563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90320298-5b77-4516-80b5-7199c29f24e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c367c-1baf-44d8-ba26-1077bca60723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0ba8b7-5903-4b80-8f14-ae7d860e39f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69af5784-c0dd-4ef1-ae0a-8886ae0b0a5b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d2b1ba-44e5-470e-9639-e27051b76a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8badbd9-a2e6-4891-b62e-8e461c246ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811ef506-8f71-408f-99a4-708ad91289e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c79402-4ef3-4a28-a35e-8c4dc9d5c3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b9e6d-5e3a-4b3f-ae9e-9e1ae5f8ba28",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daeb3be-3d45-4332-89ee-31226f584be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4576f0f7-e240-4f27-9467-3465b2da0660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d477fdb2-03ea-452c-af63-af0b4316dfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a3d6ea-8395-43d2-883f-22e822b92bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173baf0-aee6-48c0-9aa2-25b8f0d9e37f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b337928-2878-407c-b0d6-4f8df7838da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147c6bf4-17d4-4556-b6b0-b418c903de91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0961970e-46f8-4e8b-b08e-a00bc834823e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c51f9d-e510-4891-8d93-a4d114e73160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd8c500-641f-4556-9d05-01adac24d872",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc32086-6ff7-4669-af7c-7ff5c83954e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30891b7b-129f-43ce-ae95-b9f54ac41f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a89228-800c-476e-89da-14638df3e395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e3606c-6dd1-436e-8d7e-a69ce49c1408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c85acc7-9ab4-4e96-a99a-10f6463d6c51",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4baa10-851b-4ef8-87f2-461cc9bc7e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc748891-1871-49d9-9204-df34c497a4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1edc5d-3b4b-4764-ae9d-b62ed3f0a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20fc32c-d643-4462-b0b4-062b4dc5c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c051c858-d7d3-4d9d-83d5-c287171ec6b8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d7ffc-57b9-460f-a410-b48652cd9f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fab090-08e2-4f93-8715-bfe70e945071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498d6682-692c-46d0-991d-975b77fdc6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f28cf3-2625-4e04-a769-bd790f732ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015c5dd9-9bb1-4662-9e8e-cd2e358ff082",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6d6184-29ab-4847-b683-cead4c27cff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d083ab-a7af-4431-ad9e-d31a7545995e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b665baf-ef6d-4951-bbe6-17b9400f026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bae3c8-53d9-426a-9cf1-2c510932dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57440eb-b644-465a-8437-951f0986506b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489fb385-2ea7-42d3-835b-025a9b3cb077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b9ca18-0f7a-4bbb-a7fc-a9ef82493e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e3c52d-6569-4979-8a00-dee8f2b2555c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1be739b-7dc5-4066-90c7-df7bbc721631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e84c8-2dc7-4dec-b188-a822d0e08a2d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da899208-fad1-4fd2-9feb-c4de2ccd9540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b653a5-aacf-43df-af82-02187bb87749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f25a9fb-42d1-4a80-9a5b-b717b15b75a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb03b126-3a1b-4e8e-9e0d-30f5debf6c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b30f66-1e4e-4846-a0e7-4b1cf7e670d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3b8629-97b5-4681-8d76-95e925aede06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c549c69b-8f2f-4bf8-b6cb-8a38b8c3d129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69f110c-14ac-472a-b426-c0dca7efd21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6affd5cc-f368-4bf7-a5b1-3d740cbbdbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0a8f9-7a64-4050-b87f-b06f7373d1bb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44bdff0-9691-4441-aafe-572860ff0deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b83e73-2e69-45a5-aa37-577837d476ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1458618-41c9-45a2-a11f-5ca0be9f1041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226431e8-2d17-4663-8edb-f54f95bb40d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc828fb-d7ef-4ee5-a0f2-34fc93a86c44",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1acb24-d2a8-49ca-b4d0-bb2f150ff866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6440c334-475f-4648-8e46-91cc15baad74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e773224c-813f-4f81-8342-1c0954827920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447cfd9d-5539-4129-ade3-8bab96fa86c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c2234e-0bed-446d-848d-84f30ea9a43e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1210b066-6efe-415f-87f5-d37cd1b9d503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca6dd0a-d40d-4e15-ba3a-e647a195b786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b212eb2-f646-4ffd-bcc5-87ce71c389f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54edb7f-c6ca-46e6-8346-422ffbbf1ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0f30c8-7b7a-4938-baf7-ccbb42a54da0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce67c6a-9736-4298-bec5-98dc2538ab05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864654ef-5854-48ba-9be7-f09b1679b82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78035c72-b165-44c2-b80b-5c957dc4e96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374b341b-65b9-4ee3-877c-17e716fb8670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1624f90-e870-4a8a-a44a-df9b1fbe987a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c17ae8-f4fa-4c7c-8b0d-b341d9bb79e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4fc55b-0764-4547-9ed3-435305ccbc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81899679-c1f5-4661-a07e-202e75b84ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b887aa-2b0a-4c61-a8db-b1ef9f986d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449b09e3-27e8-4a9b-89b3-ab019efa862d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20e91d0-1bda-4377-8aa0-bdbf78673f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a02c67-8cb6-4cf6-a38b-e2ef461e191f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26acbef5-a2d5-4bcd-a62c-3985be4f7396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01c4590-7164-4890-b6f7-fbb522b1ed49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2a1316-f7d2-4897-bee8-1d8bf69d8c02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0c9038-890a-4e34-908e-bb183c0a5713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b42b98-c933-41ce-9981-c16f9d7c3927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7585bd-91c7-4d81-b25b-be16b6401b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89ed244-3618-4355-9450-4e77aa6eec41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8320fc82-f81c-40f0-96f8-57a167b9c742",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc68fe17-bb55-46fb-8b22-fef7acd0f30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba1eb4-3005-491d-a782-27f7f45a040a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094cbb48-435d-4e32-880a-2a57081c0148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be2287d-84dd-4eff-b9cc-312de66ba2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77140d0b-2f56-4c44-8ffe-e5dc7e620054",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af23e13c-3839-4360-b231-d7803a6394d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd765df0-1b08-4726-9cba-d2def18b1781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1780d324-cbf8-49b7-b0ab-8970e2fd39df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8785c07-5dfd-4095-932c-814e98a1dfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3e69d-d892-4ff0-baea-51fbfa9e12d7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfa0853-b353-456f-9a42-db37f26843ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb12c8c-889a-41cb-a0d1-d6461a31d6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c618db27-77be-4ecb-b5c5-ee29ad0ab3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e5844e-9855-4219-aed0-049bb3f3b5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf9d76-3ded-4a51-9541-71d507e2de49",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131393ed-ea1b-4ccc-98bf-98e1bd937e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaad4c9-07da-463e-ac6e-aea1c2574f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aed028-f79d-45c5-bb5b-ae722900556d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836f7797-44d9-4a8c-babd-33c0d7305b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f599ab2a-2cdd-449c-9d4e-798158a093b0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f393bd9-7ec3-4100-9b8e-cb8fe1ec3c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dbf930-2138-446a-a018-3c021d1fa008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b76c8-d3a3-47a5-9167-0317740468b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b76475-0fe9-42f7-8967-4c3415fba2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e403f9-40d0-4477-bb71-2c1e82e479e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f75c6a-c647-4fc9-88e5-fb48ddc839a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cb0f97-e360-4f40-ba7e-3de7a7962796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c7e24-a07d-48b9-8421-6e5ad29edf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1564fa5-df1a-4570-80fe-220fdb2cb05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f02ef29-de2c-49d9-81a3-787f2aea0e2f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d989094-5f39-48ef-8b53-dc62b1b52b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83490e76-4479-48a8-aa1c-b104dfcb347a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617107de-dad3-414c-b2bf-154329f4ff47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce6b81b-23a4-44dc-bcdd-cfc641528a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693d2c32-b392-4dbe-9c91-5ea03caf4c44",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2830a87a-0d69-477b-961c-736a77417209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c34294-4bc9-4b8a-aed3-ae24601a7dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad42ebb-ebab-475e-8cce-e7565a7c2a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095082b5-3ada-4efb-96b0-649e092f02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96805bfd-4f49-44a5-aaa9-43f31cfc2d18",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a75156-2365-47a5-9680-cca39d5c3485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6f6219-5fbf-4961-94b2-2b83807d83ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016287c2-5281-4451-bdba-68884560e436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1da9cb-81a7-4019-b337-7637397363fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222580e4-041c-40a6-8481-a74522dfaef8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb44323a-7c4b-4c2d-9ebd-f8ba0794cec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6459e158-de02-4a66-9e7e-bb7022e01084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18200f05-08d2-4152-93b3-c3583a73ee08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0150796-2d25-43ce-8d29-e0810fd7f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2a33ac-4091-4e03-922c-f0f12c7f2a8a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcd27bf-86f3-4a8f-9e23-abf8063aa4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe51bdb-b531-4893-bd27-cd528d055e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdf9093-53ab-4995-8f2f-dbf3a40dd163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abcf99e-fe0c-4330-8444-91a9a6f26cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d57e904-4a12-4817-8337-989aa16df487",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a72a07-ba72-4c76-92b1-0582d9ffb837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7291dacd-dcda-4077-9524-59b1d126de25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc66ec0-d9f7-410d-9c2b-b30be29a8d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891aa7d5-4f47-44fc-afc0-d0cc8082c89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e275881-9f1c-4c39-babb-6c0e71098374",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cde93be-497d-486c-a0c6-5c3934c32e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b19d9c-2a3c-40c5-808d-b7e2491bfa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403e7a9e-17b1-442b-8b08-a562ceb9cbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f270b5d-5689-4d45-8410-7a3c83770e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd02059-61d5-4d26-98d4-ec3d8c35dcac",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f089079-2439-44b2-aa21-e701c770d26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bbbd43-8302-431e-9526-3f3a322a7dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60eed62-9e7a-4439-af8e-0713813e54eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6490a1a-b792-47c6-b8e7-64d0435d71a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c40ba76-c739-4dc6-a51e-2d742767aa87",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06dd352-b77b-4daf-a15c-d5f95f80f73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513cd2f4-a4be-41ea-abc6-59facc5a093f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7167448-ce12-4100-b9b2-6438a09e1579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5c276d-4f02-4d6f-85df-a6f624a839ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a156b4c-fd23-45f2-8660-bfa62f382a54",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b488815-8624-4d4b-a4b4-3ff8fda0520b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ad8a64-98ab-42f4-9c8c-14e924f88742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e6c482-dd0b-4874-a471-a8b2a9594681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ae83c7-25ec-44ad-bb4d-08201bc4bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101d9fa-929a-43e7-8450-6db0f70e60a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae4ad9c-b0c5-4ea3-b32f-3fbc5ecbc6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e689fe1d-8da7-4627-82e0-fbf0b870a948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44294d4-1739-4ffd-b9e8-5687aec1e5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eddc8a6-47fd-4871-895e-7ce9da3e9bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64c4544-66bd-4552-b0e6-b513afb78b85",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a156d6a1-218a-4bfe-8087-265edf3b154d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c76a56-54a8-4762-beda-e5e0d45ee765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ec9769-24c6-4ad9-955c-3d4c0a5c12be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2eaa2ee-6950-493a-b6e5-90f970b96455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d5ca40-b5ec-454d-a6f4-bbc20d37ef31",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43e8f99-55d3-493c-b5d8-8ddbe47ce255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4dcd9af-54a9-499e-9945-9977b60875ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29552f1e-7bfe-4339-af65-50485046a95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a59dd8-1199-43da-be71-b9aff0bdbdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f301eb9-927e-430b-83d3-954b910050d6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5e715d-9cd0-4a7d-a3fc-b953d558989c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ae7979-df2b-4015-94c3-a243e89705f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f29ebe-581e-472b-89e5-54bca91e41c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d3c1d0-ef9f-497e-ab77-b72a0f017e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e790dc-68ba-4603-aa52-dcdcd959a9fc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2686d6-2c78-40cb-8933-a4ca28fcb874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac94ceb6-073b-4396-a936-db2e5c5b215d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad267b4-9a77-4272-bd46-da8d9814a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d77237-e9fb-4ff7-9f0f-473aa7e8692a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1af940-ee68-4745-b13e-cc92da17b032",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c886010a-32bf-4061-9b4e-0d184b920c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b9e69d-8b7f-4871-94e7-11df59ab987e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967f81af-9089-40eb-8914-1271bd0c465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b628ac2-f817-4d5a-9a57-e72ae61549da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8018eb-a633-4532-ae9b-ebc017437c50",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e22d5-839c-4bbc-8a38-2fd6d4b1f8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7a14a4-01c1-4da9-ab71-951c220e0677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307851a1-724e-4254-b96b-59e350e0ce82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accd103c-9943-401e-9381-cdee9f573311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7ffb3a-1b1c-4fb7-b816-def0917159ca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c3dcb1-0cf3-45f8-9603-d78eae9f08a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9efa418-14d1-442c-b64f-e36fe71434e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f919283f-007f-4337-9b08-7ddeb236de48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ac39a9-4c44-49cd-b81c-32d28f33308f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346d557b-21e6-4fb7-80f1-c7f543175477",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fa93b5-8079-4b1c-bcde-30a63e029618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fff14ba-fbfd-4798-ab6d-e15661ec5060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b572f99-cb55-41e3-bf9e-d81d7f412afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0844a328-bb67-48d5-89bb-8328d0c05d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa662f72-ee14-40bb-b12c-81a6417ed56a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667d87c3-ba64-4e78-ab95-61fef3a78d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e24d57-36af-4b1f-b5d8-20f16f192ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224fa63-9001-4c74-a6b2-0f83d89a369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b9f83-d742-4ff5-b370-a1382383029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1474e5e4-beed-4f59-9f2f-120d3fe76299",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc93fd52-d012-4421-963b-cfd96fef4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7d6a95-29b5-490d-92ea-e1f1edc6e87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710eba98-ded3-4c0a-a104-a84e711042ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3f628c-abb8-48c9-ba6b-80618358e2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a621ca0-8474-437b-b6ec-1865147b5918",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5277157f-be07-4589-aacb-4993825f3430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeff9992-0d7c-4035-b88d-1487203f4abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f256847e-a065-49d2-a3f8-4a8d8eaac7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7561080-8b70-4e36-ba29-6da3ba5c48d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffc55ff-24a9-4dcb-94fb-6c5ae5383e9b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c994682e-3651-4820-99b1-92c40adcbe35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c565863-a291-41c1-979d-9774fa22024d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3c8fc9-ef6f-4f4f-81c3-3fd4290a3bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17c391a-faf1-45cd-8794-ad4942f3c30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d690c8-1d15-4a57-9e73-7074ccef9be3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf471daa-7637-4ff5-9d6b-198d4b1cf4c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7d2874-79de-4c67-8b69-cf84f96d5488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7523a7b-a33a-44a7-83cb-e9d779214f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2beda2d-c737-410a-afe2-fae0a489c6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccbe3d7-8e95-49fb-a446-2f82622d9b93",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a828d47d-69c4-4875-a410-ea17f99867d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f4af2f-7f79-4375-a711-9a2545efd6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285981f0-1b7a-4d59-9fe9-a0a49354c97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcd2b12-7882-418e-bbc8-877531394a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63433a32-4d19-4add-924d-8788e55ad655",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b3fca2-ebab-4327-b185-67b833048af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60693316-79e1-4052-9449-326d5c70d3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09193dd-c0a1-4c2d-ba7a-3b8ab29c8163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08439477-2573-47dd-a1b2-d93093414d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e35399-3c7d-4c29-9de5-5229e246708f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddd434d-d107-465c-86cc-a2385feac5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f5fed3-21d9-4086-baab-15dc85be954f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05767e3-9626-4871-af94-76c28bb9393e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c23c2d-8831-4de7-9af5-9ff3dfddc227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a949b2c-a785-48b6-b082-03f5eb125cda",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b17b95-fc2f-4031-964a-f684da225788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4320146f-1f50-445e-a14a-be5e1b9827fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c847a1c-ac9c-421f-afdc-cc577203d861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c5937b-a21a-4342-937a-9c6e875a27f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba317cde-835f-41e4-9d26-df2619473cfb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7635327-f867-46e0-8284-386565b78a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27818759-a10c-4f2c-95f7-3f233edde2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d8663b-1ff1-42f3-935e-1b6779241882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22171223-a330-49d4-8674-85d56e2520e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22437e71-3303-4e9e-b720-6a2f8ed73d21",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acca2696-06eb-4c33-8cce-92c1626ba567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96df1242-d62a-46c1-b193-a1330c9cd804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df85b962-2a00-4130-8930-3a8ec2d660bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f703a43-0aea-49c0-a34d-78be7033cf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345aa723-308e-4b72-96e6-d3c22d355b0b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105318aa-7a6b-4114-b570-8e857a6db591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114a92d6-2e35-4ee3-bc71-d030e9166016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c7106-4c5c-4f6b-a10d-bf73056b6978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf39a4e7-8af0-4999-8a45-fe14b501d7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc57824f-6b2f-4ba4-b949-fd0ebc03e18e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf11aa9-58a0-4c7e-9fed-1894dd773f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a9e31c-a598-4afd-80f2-7d0a4b518043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c89455-d3b9-4ad7-9061-4f3b300e58db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d54ba9-6011-42d2-be85-7cf0e160c0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a25427d-7c49-4c15-8b9c-f654be1a5fb9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3241fb-cb9c-4418-9320-4bee5e10183c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a31d776c-f286-433b-9391-b44798db0988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dadd336-1d31-4084-ba57-e4c499768a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca91a901-65b3-4ed2-ade1-ccf79000a885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c3bde0-2be8-432b-8e6e-749ca2179e23",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83df901c-2bb7-4531-8d87-43604e06bb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe84d5c6-cf27-4a10-b2fd-7419951546fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f078a8-5e62-4c9b-aa35-78472b630667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58bb923-8366-4b1f-b357-5e289f110ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e491925d-2a94-4df5-96ea-dcac1839f139",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7376cfd2-f8c7-4838-b284-768d3b14eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0ba77c-b2b0-4037-adeb-13854cd72e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be75c0f-d4c6-4e8e-b160-83aac8dd4f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd28a56a-bece-48a6-8241-aebe7a3965b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afb7806-07f4-4e91-8564-294de647a083",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bef1ef-27dd-41e8-83c6-2e28765b5efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b90200-fd0a-4d48-acc4-21b82fd7b7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7d5ca-52e1-4627-85b5-6388d2e8779e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2056ab63-b260-4eae-9f35-cd912b49eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79110722-3506-4341-8dcf-da89bdd1a19a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2ca04-825b-4867-9900-d3b759a6af54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf889a1-811d-4760-bd00-fa83bfb9508c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628c412d-b5e9-4284-82e8-467c6729eaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cb2e11-53de-4475-8628-59c2661d668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99077432-6465-4827-90d8-18e271f2d6b8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0afd9a9-823e-4813-b281-ef37667649b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af218693-0985-4623-8f3e-5ae0c099eeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e949f18a-7c31-4b84-960a-54a775daa6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702a931b-6198-4ee3-a4cb-0ebbc46e8410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175a6613-28ae-4cc6-b721-11d76836e562",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec2d301-4e7b-4f48-a795-e4d74635dae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87810f17-b325-47c7-848b-89ad632ce65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e44362-91c5-4617-a58c-8de04f64ce4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db37649-5696-4351-b72a-fa7f1fd9766b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921b1004-8937-41e8-8b30-5548b7ce23d9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a408e1-d817-4068-bf27-5c1fc17b0dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d40ca0-8d40-4af2-9f79-cdeb0abf8ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ffbf80-316b-45da-a95f-ed4a13e3ba14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7739025-202d-4aa8-bddb-9cec676a5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5fcdcc-5a57-4ed8-97d0-3129a3fca6d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1872a5-0e9b-48b4-bd4c-28460fadd462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b44edb-b509-4394-a6ec-e82572f87149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a9370d-4ee3-44ec-af79-e44d38550604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658a6a53-5f22-4cad-9e24-98b26d28a1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e4ecd2-de55-440c-83c8-e8180473ea79",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5badb458-50f5-4e8c-ba05-9ddd00a9599e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdfdbea-88a0-424e-aa6e-7afb76e3bbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251e8d6b-f533-47c9-a262-3f27afc9326a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870f9220-c641-4e1c-abd5-c7a137f43bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53155db-e38b-4c9d-b9a5-d8dcc7a5356c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa62ecb-775c-433a-9dec-08e415197c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb706fa-2770-408d-9db7-0b144f52db44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0e2952-a648-4f43-b3c3-eb82078d84d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc57b6d-b266-4346-836e-d8dfad971088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eb4905-1494-4463-8427-221e59595459",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e6840-0a1c-450a-9fc8-942a8d4011cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f157609-c97d-4068-aa1b-83deb4bcf67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38df0c4d-3745-4b04-8291-f597376b481f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00614a6a-5ccf-4fc8-ad2d-925c470e8658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c974a4d4-f5a5-4844-acb1-4c6458b7bc12",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d77575f-7344-4ff5-9880-8586f0853fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601c32e2-f2cb-4e14-83e9-a0513fac3969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8915e545-8a4c-4c8b-988b-f025e41d254a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05af282-3d34-4eb4-bafd-73865cbc8b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9bd653-6832-4daf-85b4-52d4de0c4e3f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f873f8a-9fc4-4f60-8bfb-cd76ab4b0a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7780ee18-e237-4933-858f-1b038f64565d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb30d4c-b156-4097-97de-0f5db90372dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ee7319-f743-4627-8798-9e5b528db3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dfee98-04b3-4615-a547-43b3b470559d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c0eae-5c99-45e9-9f94-b2e804f51f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44726c09-2057-4a56-9d82-8dd23915b554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b50f4-fa7f-4768-b241-665f0ce98ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9707e1f-8cf7-4c6a-ac7f-459b090b26b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc0c998-1e9d-4e01-bc13-39c8c8c86342",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb1ee5e-dbaf-4eec-9bd8-7b16863f1b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbbfa95-6736-4fd7-b31e-3378b613e4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8063f5d8-b555-40b0-8db1-dc0c3dd2ba4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3ff034-3bc5-4b0a-9141-c1eb944a42b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb10e69-3899-4ad3-9c3b-f12185ef7f03",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d23ef7-0b77-4485-a194-fa0830c91362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe062b1-fb16-4df7-92f9-f85948315bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d651271-8db5-4d47-82d7-0aca3d8bf1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b991b0b-3c67-43f7-a6f3-efe7a745116c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc76d7c-f9c7-4c57-9dff-9908460e6eb7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d2931a-bda0-4593-b8b0-53e19aa080f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c6dcb5-6f85-43cb-be51-4645cc6a5dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda5ef56-9d91-4a7d-92f1-3bddb3427ab1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee374fc-64a6-4811-8cc6-0c0a4a746d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3269100d-d02f-47ac-988a-dbdd9b8719c6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef30a202-596f-48cc-90f0-317eb8f2d032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa8454f-bd06-411c-8817-165158fa2a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4e592-87a0-4de9-9b28-3fa1e0a009bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcdf205-cf20-4bbe-8c40-24bfc39ba922"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2478ee59-32c1-4dfc-b99d-f5ff1eb5bdf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28d27e9f-b460-41b8-89e6-26d06dad8b57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f3ad39-0c47-4a53-855e-309fae05fdf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67dcfc2e-f69e-42a1-884e-b2d77900c8da"
                    }
                  }
                ]
              },
              {
                "id": "b7f39733-6252-4bbd-81e8-dc3fc69f4cb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cf89e02-7dd0-4349-a5fa-52f90c4b1b99",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ba421-45b4-4aa3-84d5-6dc0395a688b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "387f0730-e695-47d3-b260-4eaebad31212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f4d61b-1ec4-438b-96e2-9089e11293ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a2c555f-4c5a-4a91-89c1-8b4ffb7d4a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3341f18a-96ce-46af-a981-7df8bc77fcbd",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee78ad9-da16-4164-9d30-41787f4228b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "23ce8b44-4d57-4e05-a034-b4ad09d80ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344bf109-af2f-4328-8420-1b06e72320ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ccdab0-4d06-4bbc-990e-fbe1aa943cf9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ce18d30-ba21-41e1-b647-c4e08d249b70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "062dfb56-b4e7-43e4-a5da-fe56f9ed8e94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f9a6ba-1a1e-4d36-9dc8-2dc44f74378e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74219f2b-e328-429e-b003-d41a3b67e7cc"
                    }
                  }
                ]
              },
              {
                "id": "6fff7458-d15d-4242-929b-5b341ca72505",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "21c94b49-a378-4153-a58a-15373fb173fb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f01ad8f-cf23-4953-b514-5f895d12a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "56222846-0a5e-45dd-872f-a9e3592b75d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e56f8a-a248-4647-95b7-33567b1e5535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd37c5-e31c-44df-8686-97e9c474eac5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9906d04-d0f7-49ce-ac92-c8207cbae800",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c07bdc4-592b-4dcc-b4c6-193ae1a67445",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02f54916-9ce2-4884-a0db-b654952cb337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "779d3ac8-23db-4ad6-881b-6b3969e01262"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed7be3b1-e38f-4089-9250-a30b94fbc910",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efc751ef-2709-42fa-ad08-b7158be26926"
                    }
                  }
                ]
              },
              {
                "id": "5a992b82-4436-4659-980b-64ad5aedf760",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba6987b7-d3fa-4feb-aa02-1dc8851e2547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8689b30b-5283-44cf-872e-b9644523f9db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cd77dec-ec3d-4264-a703-8ff2e25a5d1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86aa0d75-be15-4b05-b1fa-600031501e2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e005708c-6960-47e0-8c0e-024d304731aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ebabe977-f032-47c8-a676-3433e257415a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dd3409a-b384-4e86-ae71-bca5b77b0e00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3dccf51-d19f-4431-88e3-df43d4fa9b03"
            }
          }
        ]
      },
      {
        "id": "aa0d8c28-f63e-4e34-aa9c-74f07cde4a8a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e89b4fe-2b47-40f4-bc57-5754ed2e6597",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95ac4cd2-beb6-4c46-9e15-10d7b2287481",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2c3de-879c-452d-893b-abdefe276091",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b07848f8-df72-4c0a-abe1-85e0b118cb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a4763-dba4-49a2-a7dd-40e2f776022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aa3e7bd-2312-4d7a-9f09-ac8b2f7012f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132df761-026b-434b-8872-e0594b03d148",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e94d3a-e106-4d10-8c29-a04bc6d61808",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8d85f7f2-2bf0-4bc7-9e91-931fa8581dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef2ea71-8893-4754-8507-e75262f73f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7df5a59d-c44a-41c6-80e2-2b872d811bcd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13e4b7d5-6950-471d-a78f-80a9897891b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b1af9cf-9200-4f65-a5da-ef8119e35167"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce691dd1-247b-4e9d-b1a0-faa1217fac94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85767ad1-abe3-4f3c-a20a-eafa63bd6c6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc9f81f6-35c8-453a-b8d7-fa895b4c457d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab1b47aa-303b-4e0b-b538-f04aefbb3e84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fda1ec7-9ce9-44ee-8325-127311483f2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ce59e26-d9d4-484f-8ab4-000242eb48e4"
            }
          }
        ]
      },
      {
        "id": "d5d183d4-be5c-405d-b9f4-4f723b875fcd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3adfb663-e9a1-4d1f-a6d8-b2282b7c74fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2431d05-31ac-4f50-80ac-be1e3626151f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c672981-c0fd-45e7-8d36-d492b0ddc69e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec9050-e55c-48eb-878e-652df273b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "53a852f5-0d95-4ad7-9d34-b46da97768a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2294a3-4c58-41fc-89bf-4089b4a9312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "366eea0f-11e3-4816-818e-ada55dfbdb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a772d-534c-4e28-ac58-6e4cf5250823",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b68e16-8534-45af-9202-b31196eac3f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aee0924f-ea7f-4097-87a2-7bf983dc20de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc67836-c6a8-4a82-81cf-2f453fb2b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a639aa7-8ee6-41fc-a5b9-f4677f939591"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15735e01-f638-47cb-bd29-d4d5051130bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07db7772-0984-457b-b54d-3a22b9ac66e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b719e8e-1694-46c7-befe-9429f48a560c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9c3a9a5-8a34-4a81-acc0-e68422752c45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2a681f9-9d1c-4e4d-8dbe-5a5a6de346b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d13e6b0f-1053-440d-a334-009f67f7f9f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b95bdd8-3f22-4ac9-abff-92b2239388ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "196a4885-9dc5-4fac-9884-093da52315f2"
            }
          }
        ]
      },
      {
        "id": "3b2d4021-3284-4800-8a42-8d2f3ca3b3b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "acdac0bd-61e8-4f1f-9f25-b55d70341c50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e737571-3cd0-4c19-ab93-0057360b4529",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50ce0067-e805-4fcc-9df7-0fa30104ae48",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba21c55a-2f63-4f9f-9ca6-866551ee4a67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4e2a4138-40b9-466a-9cf3-cd3dad06fba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5c06df-4aa7-48fa-8c94-936d5ac4fa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5d7a23e-4ca5-4177-be1a-d9f2fc38dd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36ddae0-f472-4efd-be8c-0f334c8bf011",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dad9f7f-28ab-403e-ba27-29139a712694",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c6b14dc0-90ea-4ebf-91e5-0defe46f0b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70913ca3-5632-4056-8892-7f1cedae634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22f4df6d-249d-44c6-b7e8-d498124b1c3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fab00ce-d3af-410b-af04-9c2e41306bab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "826c9a59-2b2a-4207-915b-917e46120e34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "118ec914-4c97-4d42-b5de-06486a5f9911",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "498f180b-28e6-4ba8-8d37-24ea604f6efd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac7d424b-8688-486a-ae18-f3b8daf0273c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "604347c3-efdb-4334-8434-26799c9e69ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59df1f4a-8479-49d7-960b-877989246270",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34d954b6-22f1-4bdc-9372-cf732b74b55d"
            }
          }
        ]
      },
      {
        "id": "d89706af-7449-4e54-9c62-0eb3633b2ef8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e4a1cbe-ed4f-40ed-8a8c-8df06f381497",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "570209f7-9cf0-4c2b-9ce1-9c18834ad11b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bff6ec9f-a295-4b80-97f8-069c5e47c1af",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6413b65-e684-4dd3-9d25-bf266b4c066d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6013ebf1-c0db-4c19-baaf-f41c0d023199",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 498.763358778626,
      "responseMin": 12,
      "responseMax": 4421,
      "responseSd": 620.5919955308503,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671928779854,
      "completed": 1671928921145
    },
    "executions": [
      {
        "id": "8d88ffd2-d0fd-47c6-a254-c2e34ac405f6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "92a36409-f353-499f-b248-0eef15e60a5d",
          "httpRequestId": "78c31cd2-9ff2-4036-88f7-1e82abfc52a0"
        },
        "item": {
          "id": "8d88ffd2-d0fd-47c6-a254-c2e34ac405f6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a32491f6-c18f-48ef-a6d0-918ba921d084",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "a39a05b6-7a01-4df7-a22b-1e8b461a7671",
        "cursor": {
          "ref": "55fae641-0618-4759-98da-e247ccf70de8",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96b07eff-9de5-4ea0-8b30-4ffc5b21e5d8"
        },
        "item": {
          "id": "a39a05b6-7a01-4df7-a22b-1e8b461a7671",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2a970236-3d2a-413b-8045-6ed60af02d73",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "96af0c08-1feb-4d40-a10a-82ef2d373b4f",
        "cursor": {
          "ref": "d597fbb6-cf13-4197-8fea-f2400b505460",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d3f9b91-312c-431c-88ca-8293b32d0c60"
        },
        "item": {
          "id": "96af0c08-1feb-4d40-a10a-82ef2d373b4f",
          "name": "did_json"
        },
        "response": {
          "id": "4f92d7a6-46e6-4b64-ac61-2cbd0a7fcae4",
          "status": "OK",
          "code": 200,
          "responseTime": 958,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d141c-6449-40d1-88e6-c658742a7bad",
        "cursor": {
          "ref": "b2344259-1e6c-464a-82fc-b86858a7b049",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59f44b1a-99ab-4dc2-9720-32cc1104b8c0"
        },
        "item": {
          "id": "349d141c-6449-40d1-88e6-c658742a7bad",
          "name": "did:invalid"
        },
        "response": {
          "id": "9070df51-a5e3-42c9-8bcf-a69cfe6f47c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d141c-6449-40d1-88e6-c658742a7bad",
        "cursor": {
          "ref": "b2344259-1e6c-464a-82fc-b86858a7b049",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59f44b1a-99ab-4dc2-9720-32cc1104b8c0"
        },
        "item": {
          "id": "349d141c-6449-40d1-88e6-c658742a7bad",
          "name": "did:invalid"
        },
        "response": {
          "id": "9070df51-a5e3-42c9-8bcf-a69cfe6f47c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ddabeb-fcb3-401f-9ead-c190afd41928",
        "cursor": {
          "ref": "c565eb68-61f7-488d-a022-a3888614f140",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1340bdb8-2cc5-4125-8594-03e27362d9da"
        },
        "item": {
          "id": "96ddabeb-fcb3-401f-9ead-c190afd41928",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e60680fe-da78-446e-9319-e185945687ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 622,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1081326-7409-48f9-b628-92fed01f5cea",
        "cursor": {
          "ref": "dd2c6a14-5b3e-4909-9c5a-1cc7ffd4005b",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "47b7a7a7-fa4d-4ba4-850e-df07bb9377fc"
        },
        "item": {
          "id": "d1081326-7409-48f9-b628-92fed01f5cea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5d756619-f3fc-4c07-9a41-0c5a242660d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 530,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170bb34f-e07c-4411-a6cb-0f83854af051",
        "cursor": {
          "ref": "ade65bda-6ec4-4983-bde2-0b1a0aea0e78",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee3d8ca1-3420-455e-a0fb-174925318694"
        },
        "item": {
          "id": "170bb34f-e07c-4411-a6cb-0f83854af051",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7e2cb5d6-c5cd-486c-ba52-e83a3961bba1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b038b7-c375-4efa-8c00-37b983d92609",
        "cursor": {
          "ref": "bc011c17-7618-41cd-b618-a37f6c05a7d5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3a26a68-a10a-44ff-839a-2df372afeaf5"
        },
        "item": {
          "id": "35b038b7-c375-4efa-8c00-37b983d92609",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9ca9a1f4-f822-42db-8df2-61f7144b098d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b038b7-c375-4efa-8c00-37b983d92609",
        "cursor": {
          "ref": "bc011c17-7618-41cd-b618-a37f6c05a7d5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3a26a68-a10a-44ff-839a-2df372afeaf5"
        },
        "item": {
          "id": "35b038b7-c375-4efa-8c00-37b983d92609",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9ca9a1f4-f822-42db-8df2-61f7144b098d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389cf6bc-00b3-40b3-97cf-f8ed71e4c46a",
        "cursor": {
          "ref": "86294d9d-0841-4894-a277-41dc4c71544e",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6826760d-d72e-4fb9-8c31-821a593b1050"
        },
        "item": {
          "id": "389cf6bc-00b3-40b3-97cf-f8ed71e4c46a",
          "name": "identifiers"
        },
        "response": {
          "id": "f2eae29d-ae9c-4536-baea-35b43121e729",
          "status": "OK",
          "code": 200,
          "responseTime": 962,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633db199-e2b2-49bc-8cbe-ff6c6ca0e328",
        "cursor": {
          "ref": "08d46d88-0c6c-420b-a563-e026efcd94d7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8cd32481-816b-4767-82a8-86da0f49d792"
        },
        "item": {
          "id": "633db199-e2b2-49bc-8cbe-ff6c6ca0e328",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bb9d1765-e8b5-4369-b9f0-33511c8f9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633db199-e2b2-49bc-8cbe-ff6c6ca0e328",
        "cursor": {
          "ref": "08d46d88-0c6c-420b-a563-e026efcd94d7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8cd32481-816b-4767-82a8-86da0f49d792"
        },
        "item": {
          "id": "633db199-e2b2-49bc-8cbe-ff6c6ca0e328",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bb9d1765-e8b5-4369-b9f0-33511c8f9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be8e156-8d75-4acf-8535-aa0b12d3484c",
        "cursor": {
          "ref": "12b91bea-c871-49c4-920f-07359691e11f",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1ad7709c-9df9-4516-8d21-cdfa82d5e537"
        },
        "item": {
          "id": "9be8e156-8d75-4acf-8535-aa0b12d3484c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e946035a-1b11-493d-a935-6654b567e10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf2e183-7825-4d23-8555-d32d745517f6",
        "cursor": {
          "ref": "67a9669a-c2c8-4a16-a38e-922a5790b795",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7256a1c8-f750-491f-be22-28c1e08bb699"
        },
        "item": {
          "id": "7cf2e183-7825-4d23-8555-d32d745517f6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "700cc442-241f-46af-874d-a60573f41152",
          "status": "Created",
          "code": 201,
          "responseTime": 2127,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "4954a2e7-2520-4791-8dd5-7e869108e291",
        "cursor": {
          "ref": "78bbfd56-3c9e-44ba-9ae9-2e6d5917877f",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1f70343b-08d1-4b14-b7d6-4553f926ce03"
        },
        "item": {
          "id": "4954a2e7-2520-4791-8dd5-7e869108e291",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "88ebbe0f-52f2-40c7-84e2-1c7816fd7610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb28888f-6b5d-49c1-9934-6057e214fbf4",
        "cursor": {
          "ref": "d4f00eff-d3c8-49f5-a60a-0e41ea2afa18",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "047ff08d-4eb2-459b-8f6f-244958653bdb"
        },
        "item": {
          "id": "cb28888f-6b5d-49c1-9934-6057e214fbf4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5acb5b8a-0b15-4b2c-8bcc-1870f991fafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506e615d-7c87-4e65-93cc-d720a3c3c94d",
        "cursor": {
          "ref": "25cf8147-6099-4b90-b917-bf721351557c",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35370c3d-8605-4403-8c4a-6a87d4092818"
        },
        "item": {
          "id": "506e615d-7c87-4e65-93cc-d720a3c3c94d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d95c5489-9658-4c43-99e3-9dd00a19e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1c79b5-e371-4dbb-8b0f-53554cea1530",
        "cursor": {
          "ref": "1fd139ec-a82c-45ae-b370-daf4a34a718e",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50f1130d-3be9-42cc-a434-5b0ad30241bb"
        },
        "item": {
          "id": "8b1c79b5-e371-4dbb-8b0f-53554cea1530",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9986838b-03f5-463e-91c4-8ef40dfc02ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd029bda-71f2-496a-87c3-5bbce54e02ec",
        "cursor": {
          "ref": "3dba538d-9805-4cb4-b643-e1257169dc03",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "46cd9429-e564-44f2-99d1-556f784c32c6"
        },
        "item": {
          "id": "bd029bda-71f2-496a-87c3-5bbce54e02ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eaac3bde-cded-468a-9aee-cf36d5583a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d415de8-ccf5-4a20-8be0-da541bf0e56d",
        "cursor": {
          "ref": "22110235-dc8d-4706-b5a3-e8a211f0ecec",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "be4f1397-0285-4cc4-b2da-da9afb838d11"
        },
        "item": {
          "id": "5d415de8-ccf5-4a20-8be0-da541bf0e56d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "25c5a464-df27-4018-b5a0-e0860f209337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68a9532-825d-49c1-a8e2-6e386338f257",
        "cursor": {
          "ref": "fab319ee-6db7-40a2-bcc5-776464d6a065",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "96ee5920-84ef-45a9-9505-7c73a4a8ff8b"
        },
        "item": {
          "id": "c68a9532-825d-49c1-a8e2-6e386338f257",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9c626105-4328-4421-bb5c-1e0fdf8cfc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59384374-8db9-4d5e-bd05-c42ea58d638c",
        "cursor": {
          "ref": "520dc691-fec7-4988-97f7-acc33842eb5a",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89ad42b9-db8f-4f6c-a9e3-b5d194e8d6ea"
        },
        "item": {
          "id": "59384374-8db9-4d5e-bd05-c42ea58d638c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "72197b5d-1e4d-485a-a03d-d0ca9e51c40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d144200b-6955-46a3-9b92-0abda32988cf",
        "cursor": {
          "ref": "bc93500f-e1b6-43ab-aa12-0d1c79805524",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f6dbfab2-2667-4228-857f-896c8c6f9dc1"
        },
        "item": {
          "id": "d144200b-6955-46a3-9b92-0abda32988cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29ecf28d-edfa-4aeb-b794-2e1d01c05e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6725008e-d251-4dec-a824-5b2f8c2830f4",
        "cursor": {
          "ref": "5a1af0bd-8d7c-47de-8b30-378ba0d8d59c",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e6f10173-9d2b-4e0b-8947-a73aa786d841"
        },
        "item": {
          "id": "6725008e-d251-4dec-a824-5b2f8c2830f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9b99e542-d667-4335-88c9-706a292618b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f624cdd-85e2-4621-96ef-0135d2745e41",
        "cursor": {
          "ref": "023eec1f-8c3b-45c3-af3a-ee25fedfd4dc",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "44682019-1b42-4050-994d-6327a92794b8"
        },
        "item": {
          "id": "0f624cdd-85e2-4621-96ef-0135d2745e41",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "24436b1d-3a3e-4fe4-8591-36530a1363f8",
          "status": "Created",
          "code": 201,
          "responseTime": 4113,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "40fc6503-285a-4cc3-9412-33c6a0f29e1b",
        "cursor": {
          "ref": "3e011ca7-bf18-4363-a2b4-0cf674cde4d1",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "08430849-e874-444c-b4f5-cf9d3597cc0d"
        },
        "item": {
          "id": "40fc6503-285a-4cc3-9412-33c6a0f29e1b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "da8e6426-318e-4458-bb42-8ae5a5a8ba16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e04bb47-aab5-4f5a-affd-28048a22db5f",
        "cursor": {
          "ref": "6c1d727d-7c55-41dd-b891-099590d65d28",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "485d28eb-4dbc-4cdb-9ace-3fd10dc8e7ae"
        },
        "item": {
          "id": "6e04bb47-aab5-4f5a-affd-28048a22db5f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3331eb73-4a29-45dd-b2d7-894a1cd40c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e05537a-e7d2-4ba0-9ee2-c3bc5b1872a4",
        "cursor": {
          "ref": "2297be86-329d-40db-97ef-60d9c1a81ab2",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a2c8483c-69e1-4190-8368-e99a13b2d283"
        },
        "item": {
          "id": "3e05537a-e7d2-4ba0-9ee2-c3bc5b1872a4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aa156598-3a4e-45cf-a656-4fd188fa3de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc23147-eaed-4240-9181-a8024dbc2ed8",
        "cursor": {
          "ref": "8d7a7952-adbd-4b22-9110-6238e90f47d6",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fe9d6c7d-9d08-481a-8be4-6bbef6bc31b1"
        },
        "item": {
          "id": "acc23147-eaed-4240-9181-a8024dbc2ed8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f8f659a-2d6c-41fa-8fd2-214a94650c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dbe580-5d5b-4b8a-b0a3-b63ec54f62d7",
        "cursor": {
          "ref": "d1517e05-a35d-423a-a51a-971f2ae46cd2",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "167722ce-c243-4ab3-8081-62dc8a8f66fe"
        },
        "item": {
          "id": "b2dbe580-5d5b-4b8a-b0a3-b63ec54f62d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "868f5169-f2ca-4f1d-ac62-5eea216918df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780e2542-6fd9-44c9-9e40-22456f74f4e4",
        "cursor": {
          "ref": "796dcfb3-ce89-4159-af65-69663e65f02e",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60f34bdd-b31d-45ab-995e-44675a03e87c"
        },
        "item": {
          "id": "780e2542-6fd9-44c9-9e40-22456f74f4e4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85110f62-4071-4ec7-a722-5eabc9f11fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c4e53-c6dd-4c32-8073-f3229256c3fe",
        "cursor": {
          "ref": "7d835900-ca8f-43af-a4e1-774711abf537",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "41f8dee9-8959-4486-a8dd-2c5422a4ced3"
        },
        "item": {
          "id": "f56c4e53-c6dd-4c32-8073-f3229256c3fe",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "12b7bfbd-8f58-45d1-a42a-bea4f921beef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6339aaa8-1ea4-4187-a90a-3eb957864e38",
        "cursor": {
          "ref": "a13a0736-bede-4643-919e-7f97cd1f81dd",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70c5b521-4ed0-4ec0-9ccf-d5472c6084b7"
        },
        "item": {
          "id": "6339aaa8-1ea4-4187-a90a-3eb957864e38",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9f94b8d-74bc-4acc-9bfd-cc8fa3fcfce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77da23ea-f02a-4d31-998d-be493bbcd31f",
        "cursor": {
          "ref": "b614892b-5a13-4f53-9add-156d07ae5f0d",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e0c5b0f6-b786-4a0b-a483-2a384b4f058b"
        },
        "item": {
          "id": "77da23ea-f02a-4d31-998d-be493bbcd31f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "34e04daa-f954-4f92-888c-2f0e35d8ea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0753ed21-2da3-403f-a50a-a937c0eac49c",
        "cursor": {
          "ref": "ec1ad70b-44a5-41dd-9704-2bda14940ec3",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06863eb1-2bd7-4c47-bcb0-d8306bbf9b55"
        },
        "item": {
          "id": "0753ed21-2da3-403f-a50a-a937c0eac49c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aad9c85d-2327-4be7-a508-599c2bbfb7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2f9fb6-2e0e-4235-9804-9081ebb73e20",
        "cursor": {
          "ref": "13e00498-04c2-4e65-9a42-12507cf0911f",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "86b4711f-2ccf-41b9-99f3-08f079aaa1cb"
        },
        "item": {
          "id": "6d2f9fb6-2e0e-4235-9804-9081ebb73e20",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e77abc63-9c28-4b92-ac8a-9eac7fa3d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed0ee44-4db4-4df7-817d-aad900e4e110",
        "cursor": {
          "ref": "1e29e9f0-7409-4a9b-9924-5317981cc0ea",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b4b5c5e6-de45-4503-aed2-2c2114d281b6"
        },
        "item": {
          "id": "4ed0ee44-4db4-4df7-817d-aad900e4e110",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "de050e64-0d96-450e-b657-96421309e0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b10b4-9879-448d-a424-1dd02c1d274e",
        "cursor": {
          "ref": "35d9af43-6c7d-4db8-8a6d-312a8be4e899",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9b49da7-7882-4932-9019-e3f647410159"
        },
        "item": {
          "id": "786b10b4-9879-448d-a424-1dd02c1d274e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2643542c-bfe5-4fa2-802e-f86c5f9a104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63bd9b2-f62f-4ba9-9cf7-aa7ac10e6d09",
        "cursor": {
          "ref": "472fc94f-0fac-46de-a0dc-1aadac0351bf",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "086b2765-1933-4985-a2e7-40c04dc46ffe"
        },
        "item": {
          "id": "e63bd9b2-f62f-4ba9-9cf7-aa7ac10e6d09",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "79c5b9d9-8814-47e1-a348-735e9e50af09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833a1c39-43c4-444a-bdf5-d87e4eadf935",
        "cursor": {
          "ref": "64e485b2-0767-46f3-bea6-8ef593d2e335",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fdf0fe97-e95f-49ec-8091-209f1ddde8e8"
        },
        "item": {
          "id": "833a1c39-43c4-444a-bdf5-d87e4eadf935",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a140b795-4185-428f-b225-b5d2755385e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e8a4a-0d2f-4278-bfd5-7bebc26e6b44",
        "cursor": {
          "ref": "e15b9205-df3c-45e4-adb0-a7778498b154",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a980994-9896-4ea7-b7f6-ec8f2310b5ad"
        },
        "item": {
          "id": "173e8a4a-0d2f-4278-bfd5-7bebc26e6b44",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c963128a-18c6-4bc8-904f-93a4dc8a8d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06793ee6-cb6a-42bd-830c-d84c93bec7c2",
        "cursor": {
          "ref": "411c96f7-3fef-4487-964c-742ed210e538",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42081596-a99c-4a20-93a3-505f32e642d2"
        },
        "item": {
          "id": "06793ee6-cb6a-42bd-830c-d84c93bec7c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f2d7495e-6c3f-466d-8529-cec994d6bd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07037504-4be6-46bc-8d19-79f9caff9969",
        "cursor": {
          "ref": "a3b5c096-b34b-4e0f-a689-1e6051f58865",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8e3a64a1-6424-46a8-aed0-4fc9cf7e783e"
        },
        "item": {
          "id": "07037504-4be6-46bc-8d19-79f9caff9969",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92f9ea0c-54d6-49ea-bd23-299e515ea035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc942871-a010-4224-9c53-b7d3e528cb6a",
        "cursor": {
          "ref": "65af500f-e1ee-428e-8422-664f8f1d27d3",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "26907da5-f1d3-4c99-8715-4c3fa65cfbe3"
        },
        "item": {
          "id": "fc942871-a010-4224-9c53-b7d3e528cb6a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3e1e876f-3998-49fe-a970-5f1c59c1fdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ff6a8-d01e-4ae2-a583-9e8544b878c3",
        "cursor": {
          "ref": "3ce018d6-c688-415d-aac0-6203c203e67e",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "81951683-bdfa-41cc-9741-624c1b14d47f"
        },
        "item": {
          "id": "ea4ff6a8-d01e-4ae2-a583-9e8544b878c3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "86a6b996-cfe0-4f5c-ae59-997a49dfbc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4499b7a-fa54-4039-8849-f7e32c6bc3a0",
        "cursor": {
          "ref": "902d3ae5-cac9-4017-b37a-eb4578b6ba06",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "049ffd36-1c45-4b32-b54f-d1bcafbe4d64"
        },
        "item": {
          "id": "c4499b7a-fa54-4039-8849-f7e32c6bc3a0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5b0a3452-4753-4848-924f-17b27860db6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6ec3e1-4481-49cd-91c2-fd7bc5749c19",
        "cursor": {
          "ref": "bc70ee42-bdd6-403f-8a95-266019af1685",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5350013e-69fb-4015-bc35-697bcf960fbc"
        },
        "item": {
          "id": "4e6ec3e1-4481-49cd-91c2-fd7bc5749c19",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8fda4371-1ad0-4a6e-8f80-deffe1f5fc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c7390-aadd-41b4-8f15-3441b8ea9a3f",
        "cursor": {
          "ref": "08aff685-ebed-45ce-86f1-444329d4867d",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "814b4fc9-cfe7-40f6-b90c-c341236398de"
        },
        "item": {
          "id": "840c7390-aadd-41b4-8f15-3441b8ea9a3f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "980de3ab-6618-40c8-8064-5029e6f921b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1044d-d826-427e-8736-eeaeabaaff2e",
        "cursor": {
          "ref": "841a1ce5-b9bd-4af9-98ad-861d931452bf",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "190ec0a6-9b38-4a87-8b96-4f2563be5292"
        },
        "item": {
          "id": "11f1044d-d826-427e-8736-eeaeabaaff2e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "62a90cb6-fd7a-4498-aeaf-a55c1b64b029",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 545,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44e794d-f5ee-437d-9148-9bdd92e51758",
        "cursor": {
          "ref": "cc115b09-c1cd-4aa5-8d17-9f21016a1b6b",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "98b13a3f-1575-4fca-9cae-b5ebdaacf8df"
        },
        "item": {
          "id": "a44e794d-f5ee-437d-9148-9bdd92e51758",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "68bff1fb-ddb9-4186-9bdd-d52d21768799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a93d52-d240-4942-9426-3616919ca089",
        "cursor": {
          "ref": "98800ef0-47ad-455d-b638-00e24f753fe2",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8285b4f7-3287-43ab-b2da-edc3e2303414"
        },
        "item": {
          "id": "32a93d52-d240-4942-9426-3616919ca089",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "761fb21f-bf36-49cb-a1d8-6af364acebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab3ef7-bbf4-40a6-a7ac-a4d97a5fc9f9",
        "cursor": {
          "ref": "1aa20176-d20c-4b3b-ba11-1464363167f0",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "468f3879-5888-4a3e-95f5-343997883878"
        },
        "item": {
          "id": "8fab3ef7-bbf4-40a6-a7ac-a4d97a5fc9f9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d26864aa-f919-4e24-876f-a7ea59041d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a23d4d-bde1-4421-ac47-1f0108a2fe77",
        "cursor": {
          "ref": "2963e4b6-fb9d-44e7-ba1d-22163fabf435",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4a4886c9-b6ed-499a-9245-75a151b02341"
        },
        "item": {
          "id": "a7a23d4d-bde1-4421-ac47-1f0108a2fe77",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84cc7b95-1c91-4211-96d2-5bcfb08a9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de51ec9-5d34-4127-aa86-aad9aee34e86",
        "cursor": {
          "ref": "6c8d47ee-360c-4626-85eb-a5714f0fd28b",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f4564424-9489-4dae-948c-b3919a5e88fe"
        },
        "item": {
          "id": "8de51ec9-5d34-4127-aa86-aad9aee34e86",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2787fea8-21ec-4f2b-b811-4a4c6450bac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8cf696-77a6-4c3a-9b3f-be8b4160c16d",
        "cursor": {
          "ref": "6e78942f-6e36-4750-adaf-aec16d6090af",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "876b3dac-a75b-4107-b97c-1a05473567a4"
        },
        "item": {
          "id": "5c8cf696-77a6-4c3a-9b3f-be8b4160c16d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "be3c782c-0761-4ba7-9dc2-08928c387dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8212edfc-41a8-45ce-a854-2cd4ac30c244",
        "cursor": {
          "ref": "a6dc4915-7673-4577-853f-14a597e53d5c",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12438d4a-cc8a-4da2-bf93-64ba8e2101f2"
        },
        "item": {
          "id": "8212edfc-41a8-45ce-a854-2cd4ac30c244",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "415e752f-d263-4349-acec-55525d656b12",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 568,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7333ccec-6dec-44bd-a9c7-9f5448ffd48c",
        "cursor": {
          "ref": "75ba2981-ba4f-45c7-ba5a-5bed22759a01",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c72f521e-e386-4559-9c41-742a362285c9"
        },
        "item": {
          "id": "7333ccec-6dec-44bd-a9c7-9f5448ffd48c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "066ebadd-866e-433b-8320-9d9232ec65c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586e7429-83a2-4a0f-ba0e-e156ad81efc8",
        "cursor": {
          "ref": "5ee69f37-d53a-4314-905a-38c83200e6d1",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ac58ce68-7ceb-4b53-88d8-61fa63145389"
        },
        "item": {
          "id": "586e7429-83a2-4a0f-ba0e-e156ad81efc8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2e7efffc-4f6b-4e36-a9ac-5d7597775dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee9cb02-574a-4ad2-8317-9f8bf0204f91",
        "cursor": {
          "ref": "9f046b00-057c-402b-a386-3bfd9e0c2e1a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bca95a9b-4b94-492c-b4e0-6de57562c31f"
        },
        "item": {
          "id": "dee9cb02-574a-4ad2-8317-9f8bf0204f91",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2b9d453a-35c9-4d00-8ec0-a2df474d597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2c31e-6394-4b6a-be2f-800ebe966f7a",
        "cursor": {
          "ref": "5601dd10-8bd7-459f-8913-be57ba958ab7",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "996a8676-16c5-4b79-b579-f291d136e1c8"
        },
        "item": {
          "id": "54a2c31e-6394-4b6a-be2f-800ebe966f7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "89105093-d11b-424f-aaee-d90b5f84f20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d556c6d-6331-4879-8e23-4aa543877eab",
        "cursor": {
          "ref": "caae435d-dd54-4abd-aaca-ba38c4fa1926",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "50e56fb4-f1d7-40c5-be1a-ddbc281d28aa"
        },
        "item": {
          "id": "9d556c6d-6331-4879-8e23-4aa543877eab",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "870afe8d-e2ab-47a4-b780-a03d14707ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fc5277-699c-4904-85c4-c961666d76c2",
        "cursor": {
          "ref": "0e7ca8ca-cb64-40a6-b925-1af8f59d09a0",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3cec369-b0d9-440f-a035-aef9e72fe910"
        },
        "item": {
          "id": "78fc5277-699c-4904-85c4-c961666d76c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2a853b9-802f-4a35-bb98-04b8edded66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02a9e8a-5a3e-4224-9f98-dd56cda78585",
        "cursor": {
          "ref": "2d875248-e924-41aa-899c-f910f80abf8a",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "424be368-f5fe-4b07-a541-7d25863eb2f7"
        },
        "item": {
          "id": "a02a9e8a-5a3e-4224-9f98-dd56cda78585",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3a7532f6-e81e-4ae5-9c05-7405cd5e2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a759a9c3-007f-460c-9eed-2cc8a2709607",
        "cursor": {
          "ref": "54283cb2-aa98-4095-96b4-28c5474f74bb",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "92aca6d7-7275-4459-818f-dfcd3a209727"
        },
        "item": {
          "id": "a759a9c3-007f-460c-9eed-2cc8a2709607",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "894cebb3-2e89-49ce-86eb-fae16754d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e6174-aed8-4439-9396-fed434b14eb1",
        "cursor": {
          "ref": "f10af283-ab94-4379-8c0b-4fb1ef1b3073",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "87d2416d-c38a-48f1-8e2b-2c0f7bc5d7c9"
        },
        "item": {
          "id": "2d8e6174-aed8-4439-9396-fed434b14eb1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2ecf8616-9192-4b19-a904-61a349efe9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad8027f-f8f8-4751-b704-30d9c2bb57c8",
        "cursor": {
          "ref": "3319f863-6629-44e6-b85f-9d32b77ad64a",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8013bc87-4916-4272-8c48-46b3f932af54"
        },
        "item": {
          "id": "dad8027f-f8f8-4751-b704-30d9c2bb57c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d0d8672c-5e54-40eb-aa8e-b2213fcd8397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ffbbe-39a0-4c39-9b12-dc8251f229d4",
        "cursor": {
          "ref": "3ccf3107-3237-49c2-9506-cf4dbe080e56",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c32bac1e-756f-4a0c-9954-a24131dd1d9e"
        },
        "item": {
          "id": "6f8ffbbe-39a0-4c39-9b12-dc8251f229d4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2ea6b1e2-a04b-4c82-bc0b-c982e892593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7297603-5b5a-42df-907c-6632301708d5",
        "cursor": {
          "ref": "6432fc38-9862-4e6c-a50a-0c6f6aa7914b",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f11f7e68-3895-4983-bef5-73ce6ebdc022"
        },
        "item": {
          "id": "a7297603-5b5a-42df-907c-6632301708d5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4355338f-5632-4fe6-97bb-ab8e76219dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac66a4d-f497-47c3-acf6-a782700bd3db",
        "cursor": {
          "ref": "b40740eb-9792-4508-a56c-ee2d57bf1459",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "515eb4c4-fc24-42bf-83d3-74d5bc8a9d26"
        },
        "item": {
          "id": "fac66a4d-f497-47c3-acf6-a782700bd3db",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "559447e3-330b-48c9-a440-28a5cf2e635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d11aa15-c384-428f-97ca-f3400e113f38",
        "cursor": {
          "ref": "3bc3f838-4789-482b-ba1d-6571e1ac8141",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f75b912d-8b46-4ffc-b9b4-cb8fa88fccf8"
        },
        "item": {
          "id": "1d11aa15-c384-428f-97ca-f3400e113f38",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7bf98cfd-ee88-4492-87cf-7564efdc5a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f62143-94e8-4f65-8e65-1a389534709d",
        "cursor": {
          "ref": "d39bc6d9-710f-4265-9e24-c5b2ee4157b4",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4d9d3393-b745-4884-8df7-1394d0d83dc7"
        },
        "item": {
          "id": "93f62143-94e8-4f65-8e65-1a389534709d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8233f22b-8ed9-4321-bc99-f9eafd85f439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c00d4a-c3a0-4b20-8aef-41f57d152ef5",
        "cursor": {
          "ref": "f6973f32-3df4-40ba-b462-f416cade16a8",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea64d997-7878-4485-95a1-2a607c8665e9"
        },
        "item": {
          "id": "62c00d4a-c3a0-4b20-8aef-41f57d152ef5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4e75f2d9-aa52-4219-9185-9bfb44ee9051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375eac6-f6bf-49d1-b572-9f56df712d5b",
        "cursor": {
          "ref": "3b1419e4-7c41-40b3-be04-384b0aa89abe",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1983e270-b3e9-4ae1-9404-acf3f7de4bb0"
        },
        "item": {
          "id": "2375eac6-f6bf-49d1-b572-9f56df712d5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f708d34b-66ad-4327-bac9-46048ad377e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9f5824-9d06-4131-bb49-f4d794badaa1",
        "cursor": {
          "ref": "2760e1fc-a666-4458-8981-303662db0eff",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8d3e62e0-a35b-4c0b-8e3c-8f763548f19e"
        },
        "item": {
          "id": "3b9f5824-9d06-4131-bb49-f4d794badaa1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "37ea13b6-87d0-4d0b-9aea-ee0d3194dffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124f723c-fb8a-44cd-8fbc-a1c0aa5cf7ab",
        "cursor": {
          "ref": "2cfd6a7b-738d-487f-950d-a38541c7b60b",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "85088cb8-615c-47c0-beb5-be190a45a055"
        },
        "item": {
          "id": "124f723c-fb8a-44cd-8fbc-a1c0aa5cf7ab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7018c9a6-4da9-454d-9f8b-96b1d6e0fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a078fc38-601f-4a7b-800d-7505bc3d83ad",
        "cursor": {
          "ref": "83b59be0-901d-4a85-8aa2-72cffc259bf7",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53b7825f-8b95-42d2-a210-a2deab024ee2"
        },
        "item": {
          "id": "a078fc38-601f-4a7b-800d-7505bc3d83ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "229002a5-de9d-43e4-aaad-bb925602eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd245078-8b5a-43ce-8d47-53c48a08c5c5",
        "cursor": {
          "ref": "4e1d61a6-7c73-4f93-ab3a-8a79bd22510d",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "407c5682-fb4c-4623-b0c8-c034e3de60e9"
        },
        "item": {
          "id": "cd245078-8b5a-43ce-8d47-53c48a08c5c5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "15c94353-78e4-45fa-bd2f-cd835dcb7ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca125d6-58d7-4993-ac3f-7f4a2723e517",
        "cursor": {
          "ref": "7c11a3e7-a5c7-4e0c-aff6-739fe30661b0",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b4b0845-b36a-486e-aa08-5fd7d9c55ad9"
        },
        "item": {
          "id": "0ca125d6-58d7-4993-ac3f-7f4a2723e517",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fd509785-0b13-460c-8d40-04f76faa5838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c21e8c-0f3b-442c-869a-f0d082431dc5",
        "cursor": {
          "ref": "8dca362d-fc8f-45ab-af1a-5c931c498faa",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7333843c-3347-4eae-80bb-c4f49d27722d"
        },
        "item": {
          "id": "d5c21e8c-0f3b-442c-869a-f0d082431dc5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e6afaef0-b56e-4d9d-9f3c-0ca9fef159e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d20a8-95d0-4f9d-a814-1a8c8930f75c",
        "cursor": {
          "ref": "d7e95c4b-08a1-41ad-8c50-cbf5d0cacc07",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea669bb8-59e3-487c-aaa9-27f03f16fed7"
        },
        "item": {
          "id": "fe3d20a8-95d0-4f9d-a814-1a8c8930f75c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7bd5b235-a6d0-40a6-a6b6-4776ee677ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c182345-c9af-4468-8001-6a9cd446af74",
        "cursor": {
          "ref": "de33ee5d-1d95-4971-9a65-dbd9aa7902f2",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4a44386c-1d78-4530-9cd2-fbb3c091098c"
        },
        "item": {
          "id": "5c182345-c9af-4468-8001-6a9cd446af74",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5db0a50b-dace-4c55-ae38-19f46ba7950b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deede17f-a2f9-428b-9942-89edea022186",
        "cursor": {
          "ref": "85defadc-34b4-4b32-9294-1b08c0e9efc0",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f3b853ec-fb3b-4f1e-a3a8-271dbb9d62ef"
        },
        "item": {
          "id": "deede17f-a2f9-428b-9942-89edea022186",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "07ce9f71-799a-412d-a5c3-5595462fa370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac197eb-5e2e-42ac-a10e-11c1327bae55",
        "cursor": {
          "ref": "56b4c357-0ef0-4c15-949c-39c6e22b7baa",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "58ed9fac-79aa-4055-bd0e-0980d9a4a713"
        },
        "item": {
          "id": "4ac197eb-5e2e-42ac-a10e-11c1327bae55",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "270dfeda-1069-4208-bd5d-a08d6525d3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b17602-623c-4e7c-bdcb-ad3331d0e549",
        "cursor": {
          "ref": "4550167f-16a5-404f-bbe4-cea31bc272e5",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7633f436-782f-4cde-9f85-23b3cce52d41"
        },
        "item": {
          "id": "c0b17602-623c-4e7c-bdcb-ad3331d0e549",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6530bc65-ee98-4fd2-b41d-0ac61289606f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312821cb-f1d9-4e43-a28d-e5bf7574c1cb",
        "cursor": {
          "ref": "11394ad3-af31-4f7a-8ca7-6ffc7a9f18b9",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d43173e2-c492-47e7-b80a-0c142b933caa"
        },
        "item": {
          "id": "312821cb-f1d9-4e43-a28d-e5bf7574c1cb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d1086de0-53d3-4a32-97c2-4524be8321fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcbe8b7-a5d2-4032-bdc0-5427b5724c95",
        "cursor": {
          "ref": "1d4e3328-cd55-4f9b-9dad-e703ab716a83",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "940327d1-d55d-43b9-ac8e-c56b7a517a34"
        },
        "item": {
          "id": "fdcbe8b7-a5d2-4032-bdc0-5427b5724c95",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53a43aed-a91d-4d05-b098-d6dd8b1fc75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b545a2-a660-459d-bda2-61a83c1385c2",
        "cursor": {
          "ref": "84b6c51d-84ce-4764-8f5b-529d89fa6097",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b2269fd4-45b4-4c3d-8f7f-8561b872a77b"
        },
        "item": {
          "id": "58b545a2-a660-459d-bda2-61a83c1385c2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0d6815b-8112-4530-96ef-325b8e02003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9383a2-735c-4ba4-b919-cf9093e734ec",
        "cursor": {
          "ref": "2603dcd5-3808-4da7-9aaf-d0c6ed56fbc6",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d2701ec6-d556-4d24-87f8-b8d4496fc042"
        },
        "item": {
          "id": "bd9383a2-735c-4ba4-b919-cf9093e734ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b5e09287-6755-4e64-93c2-ad5e3aa7d6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb6dcd0-154a-411e-935d-81fdf135ad00",
        "cursor": {
          "ref": "98541c7d-e26f-4c7b-949b-c2d57b46ad02",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b949ed54-02e4-4bb4-8077-76c2a8871007"
        },
        "item": {
          "id": "acb6dcd0-154a-411e-935d-81fdf135ad00",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ec38e73d-1b12-47b5-93a2-90359cf1feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87f6a5-d865-452e-a9df-a0107f4de324",
        "cursor": {
          "ref": "9afaaeaa-56f3-4954-8aa0-dce77d67adff",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9eb48554-4709-45c7-8038-665d6cfc010c"
        },
        "item": {
          "id": "6b87f6a5-d865-452e-a9df-a0107f4de324",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5c82fb20-3695-4e67-b7f9-1c9c71aeae10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea0a3e2-e80a-4541-86cf-a4d1384acc60",
        "cursor": {
          "ref": "eb21faab-56cf-4572-9d71-9a2c79ec4ef4",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "58fe3bb8-2ec8-4ccd-bd5e-f940d49da1a7"
        },
        "item": {
          "id": "eea0a3e2-e80a-4541-86cf-a4d1384acc60",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7b89326a-1275-4a52-8a07-094e222d2b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29663a9e-fe12-4b29-aa76-4640df3fa0fa",
        "cursor": {
          "ref": "068aa798-3dd4-407b-8706-a1e50feb6854",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5a84e708-f3a4-40aa-9153-8e41263955d8"
        },
        "item": {
          "id": "29663a9e-fe12-4b29-aa76-4640df3fa0fa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e97e1ba5-e989-4237-bf5e-2ae857212ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b83d5d1-50f4-420b-a784-9d7790e5c5f5",
        "cursor": {
          "ref": "b28ba578-d096-4432-9e17-c69e67beca0f",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d375011a-572d-410a-ade8-b609bd49c58a"
        },
        "item": {
          "id": "6b83d5d1-50f4-420b-a784-9d7790e5c5f5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fdf6fd78-99ef-4199-be8f-2b11a438229c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8737e8-3cf5-4d03-9379-dc3537e5a9ba",
        "cursor": {
          "ref": "e57bf8e2-6318-4116-ae58-48ba3efa46fe",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "26d98771-fb0c-4c49-9779-63123886362c"
        },
        "item": {
          "id": "1c8737e8-3cf5-4d03-9379-dc3537e5a9ba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6cafd874-4227-488e-8c31-60a7677a12aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaab704-b55e-4b48-b161-258e036c530b",
        "cursor": {
          "ref": "2c21cfc1-05ca-4487-8431-754462f7ab0f",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "845a7cd9-e07c-4647-a2f2-37489d5b4c33"
        },
        "item": {
          "id": "aaaab704-b55e-4b48-b161-258e036c530b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cc959ebb-61df-4f26-869d-83433625e098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a33c24b-e7d9-426f-848d-23320bdb4af9",
        "cursor": {
          "ref": "d3671948-f336-4aec-a326-f01ab148ee15",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "86dec703-33d5-46a0-8763-8affd71be5f0"
        },
        "item": {
          "id": "9a33c24b-e7d9-426f-848d-23320bdb4af9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6a65b77a-1bf7-47ad-91f1-fa3e89c28d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ab4301-ed56-464b-a0a7-8b8092a04327",
        "cursor": {
          "ref": "3469bfbe-2e9e-45ee-ad3c-c389ced9ae83",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7ef4f0a0-ef01-439c-95e1-53859dae2bdb"
        },
        "item": {
          "id": "61ab4301-ed56-464b-a0a7-8b8092a04327",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ff2b92f8-b029-462f-8d8e-54546945e99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a25e093-e8ce-48b8-a4fb-d95f0f18ba92",
        "cursor": {
          "ref": "04cca99f-0cf8-423a-ae79-d1efe13808c9",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cf847297-a9c0-491a-9e39-d95e7084c31a"
        },
        "item": {
          "id": "0a25e093-e8ce-48b8-a4fb-d95f0f18ba92",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c2fdff14-edb6-49e1-8a35-069da94793aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8b7f86-4aa2-4788-b8b5-1b70994d1a00",
        "cursor": {
          "ref": "9ae05a63-573d-4a99-bb87-5d159452e44b",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7c5a23a4-e94d-4f09-ad2d-0665e01b48d9"
        },
        "item": {
          "id": "4d8b7f86-4aa2-4788-b8b5-1b70994d1a00",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "db40cbb4-2808-4e19-b290-38d5fc14bcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29021e4b-67b2-4f75-bd11-67f7c3ffd47f",
        "cursor": {
          "ref": "802797ee-a995-4780-b90b-4f269e254733",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3264c47a-e037-44a6-a962-1d526bb1d2b9"
        },
        "item": {
          "id": "29021e4b-67b2-4f75-bd11-67f7c3ffd47f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "41a24567-d048-4ba4-a667-a07cc9715f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26096225-6e46-431a-ac9a-7db91aa1ec4d",
        "cursor": {
          "ref": "ffc11272-4e72-4397-b3a7-9bc5292e7361",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b849fb2d-163a-4035-b356-937fe5d79612"
        },
        "item": {
          "id": "26096225-6e46-431a-ac9a-7db91aa1ec4d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6a30e140-a18f-4c48-adeb-7c641a5dfbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9206c05-a31d-48e8-947c-aa1179755390",
        "cursor": {
          "ref": "db057390-80e7-4780-b0fe-00986b16be63",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "946e1ec3-cd09-4292-a4c4-cf60150d15f9"
        },
        "item": {
          "id": "c9206c05-a31d-48e8-947c-aa1179755390",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75ae0467-c2ca-4f57-864b-2b9d53fb69ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caedbac-e3b9-4bb0-bf8e-1995da656b0a",
        "cursor": {
          "ref": "d64d3b3a-9786-44fc-92aa-8e68479b97e1",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb9b800c-80e4-4ccd-9d5e-57d55a8b6e91"
        },
        "item": {
          "id": "8caedbac-e3b9-4bb0-bf8e-1995da656b0a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1955721a-bcce-4240-bf7b-58177cb11d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838e82d4-eb94-44f2-8393-f70786c83583",
        "cursor": {
          "ref": "90989ef8-fe8a-4f4c-90b6-690c113428d5",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "535d0bf7-ccf7-4f06-853f-25c3e05d9c77"
        },
        "item": {
          "id": "838e82d4-eb94-44f2-8393-f70786c83583",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8edab979-911b-464e-910a-4447ef33de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aa70a1-586e-471a-86f9-176a30159791",
        "cursor": {
          "ref": "9788ddcd-50b8-42a9-8c40-567c70433d61",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cda35020-0242-42aa-bc72-b57af69b7759"
        },
        "item": {
          "id": "77aa70a1-586e-471a-86f9-176a30159791",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ad25a881-d3f1-4edf-be3a-adee7613b445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde57635-1d95-4cb2-8e9a-399bd3149e55",
        "cursor": {
          "ref": "5f947e3e-3c26-4161-96b6-f3eae1fc8c05",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f3337dd-89b9-42a2-aedd-6b1eef8bab8b"
        },
        "item": {
          "id": "dde57635-1d95-4cb2-8e9a-399bd3149e55",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a545cdda-0860-41da-99c8-b4e22258b241",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40be9345-6d9a-4510-a57f-72088e44a7eb",
        "cursor": {
          "ref": "d8331683-b4db-495c-9c84-27bd127eca79",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "38d22b67-69bb-407d-a699-858bff016022"
        },
        "item": {
          "id": "40be9345-6d9a-4510-a57f-72088e44a7eb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "dad7cfb9-20c1-4d06-b29c-0a2b1ae8985c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 471,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651083aa-25c5-4ef4-b8b1-915ddfa421f9",
        "cursor": {
          "ref": "b2c633e2-74ad-4557-bde7-88cad95c703f",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a98211d1-d58e-442f-ada2-8a811788063a"
        },
        "item": {
          "id": "651083aa-25c5-4ef4-b8b1-915ddfa421f9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9406eb11-7dfd-42d9-be26-31e76264a24f",
          "status": "Created",
          "code": 201,
          "responseTime": 3755,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "55ee1b46-375c-4244-a4f0-5cbcdbbce3e1",
        "cursor": {
          "ref": "da0e0a90-8a46-43dc-9df9-68a9be0146ad",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1c389a15-1e7f-4bb5-bf68-1aa4c04f0040"
        },
        "item": {
          "id": "55ee1b46-375c-4244-a4f0-5cbcdbbce3e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cb6bef9a-4ca5-44ce-82e5-9e4473e7a3fd",
          "status": "Created",
          "code": 201,
          "responseTime": 3642,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "a465a38b-9a82-41c9-897a-a7ba2f64503c",
        "cursor": {
          "ref": "5c14989b-f614-4a0f-9238-d2a83658afdf",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01935d5a-d3fa-456c-8706-0f41267091e9"
        },
        "item": {
          "id": "a465a38b-9a82-41c9-897a-a7ba2f64503c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7854e9a2-ec0f-48a9-9e52-bf26b296fd5b",
          "status": "Created",
          "code": 201,
          "responseTime": 3517,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "1b4250c9-16c8-493c-91d4-6b8eccf67839",
        "cursor": {
          "ref": "d32b3b77-3e4d-4a97-bb23-eac51df8038c",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cbec1d08-2013-4056-88bf-e0e2a94186e2"
        },
        "item": {
          "id": "1b4250c9-16c8-493c-91d4-6b8eccf67839",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0650930-57c5-488d-877f-e9d49d2fab03",
          "status": "Created",
          "code": 201,
          "responseTime": 3490,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "2a35c343-9cb4-4c21-8ab7-41d69bb2e04e",
        "cursor": {
          "ref": "2ed268d3-96df-499c-a384-7de3447cba89",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a91dd6b8-469d-4114-be66-20ec44f0ce08"
        },
        "item": {
          "id": "2a35c343-9cb4-4c21-8ab7-41d69bb2e04e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c1e04724-22b4-4a52-a453-a74ffd94650b",
          "status": "Created",
          "code": 201,
          "responseTime": 4421,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "c3424cbf-5b0e-4db1-abe8-6fdab5e0fc5f",
        "cursor": {
          "ref": "fbfc082a-d4e0-4098-8fb1-362f56af2bc2",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "be8e276d-f12d-4518-a6f3-96614309fb19"
        },
        "item": {
          "id": "c3424cbf-5b0e-4db1-abe8-6fdab5e0fc5f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8bf1898-bb73-4558-ad1c-691ff1ab77fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3424cbf-5b0e-4db1-abe8-6fdab5e0fc5f",
        "cursor": {
          "ref": "fbfc082a-d4e0-4098-8fb1-362f56af2bc2",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "be8e276d-f12d-4518-a6f3-96614309fb19"
        },
        "item": {
          "id": "c3424cbf-5b0e-4db1-abe8-6fdab5e0fc5f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8bf1898-bb73-4558-ad1c-691ff1ab77fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138d9893-3f17-497e-acac-7ab93a7fdec2",
        "cursor": {
          "ref": "7499f4ca-eb68-436d-9fb3-9cf0802a3afc",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1b4f8438-8e55-46ed-944b-00e7e0ae98b2"
        },
        "item": {
          "id": "138d9893-3f17-497e-acac-7ab93a7fdec2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8750eab-6878-42ca-a6a3-e2eb256f32a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e556be-1a0f-478b-94b7-6204b707af76",
        "cursor": {
          "ref": "98cf3a32-b0e3-4b60-9391-2f91481a4c32",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "79d6c4aa-d385-4976-9f87-f25905850c18"
        },
        "item": {
          "id": "31e556be-1a0f-478b-94b7-6204b707af76",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "846717a6-5bf7-45a7-8307-f23be2b33a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a1d26e-f754-4604-8ef8-e9b25bc41313",
        "cursor": {
          "ref": "64078b3a-fe5a-4088-ace0-7644ab1c95ed",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "30d02bee-78eb-4158-b8c0-de1edfc24db3"
        },
        "item": {
          "id": "50a1d26e-f754-4604-8ef8-e9b25bc41313",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "55490d28-e3e7-431a-9a5e-9f78f9d0482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19f7fb0-1fc3-45c2-9c30-a1620a5dcc5d",
        "cursor": {
          "ref": "b80b87b4-480e-43d9-a410-a1abdb81739a",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d5b90582-13b3-41d7-a836-e3a210ac9d1a"
        },
        "item": {
          "id": "d19f7fb0-1fc3-45c2-9c30-a1620a5dcc5d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86b2665e-c502-4f0e-9ad1-edca9170619a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13944da1-1c3b-4816-a8b5-5dbfe2e866dc",
        "cursor": {
          "ref": "0933a86e-af03-4456-b3b2-f72d3f8315bd",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "563fb71d-2edb-4023-83f6-0957889173bc"
        },
        "item": {
          "id": "13944da1-1c3b-4816-a8b5-5dbfe2e866dc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4cd24ba7-4604-4617-84af-82dd6c918793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f30430e-08d4-4242-adfb-0c4c36016c9a",
        "cursor": {
          "ref": "b5b9659b-0a22-4433-9de2-a09006c33dc7",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "508470a4-2c68-4c29-85fd-daf90967bfa2"
        },
        "item": {
          "id": "0f30430e-08d4-4242-adfb-0c4c36016c9a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b0907801-0879-4fa4-abc8-cbe25962cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d3d907-646d-44ce-b4c8-4a6a9ed588b9",
        "cursor": {
          "ref": "747955fd-8e31-45b4-87bb-8a83e7deb2d1",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5b1c27f8-0649-455d-b4e8-15fb8116b235"
        },
        "item": {
          "id": "b6d3d907-646d-44ce-b4c8-4a6a9ed588b9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de6d685f-b914-499b-9fb7-ee7ece578e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1216b9-4d0f-4fa5-b9d4-53b2c7447787",
        "cursor": {
          "ref": "11c963c4-9381-490f-8d4d-6a9da9ab615b",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1423b13e-0fa9-4e48-93fb-4be50c12b81a"
        },
        "item": {
          "id": "5c1216b9-4d0f-4fa5-b9d4-53b2c7447787",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "67a32fea-9ecf-42c1-a847-ccd505db867c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f79bf01-2262-4ca4-b868-58f4b9ceb2b5",
        "cursor": {
          "ref": "09025bbb-217a-459b-b67b-f3add1d213a2",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "04c4272c-2d16-40f5-9177-11b44deedf83"
        },
        "item": {
          "id": "0f79bf01-2262-4ca4-b868-58f4b9ceb2b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c21fd813-1c47-411f-8040-c74dca081f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded5e15-940c-4a9d-9b4d-3f6367b01b56",
        "cursor": {
          "ref": "39e695d2-278f-4f87-acb4-9aa799d618de",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eacf07f9-5214-4fc1-896e-0d43fb10d40d"
        },
        "item": {
          "id": "8ded5e15-940c-4a9d-9b4d-3f6367b01b56",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa78380b-2369-4623-a3ed-abc65718fd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ab910-a4e5-41e8-abbc-418a896df3f4",
        "cursor": {
          "ref": "3b6a8f37-d8b3-49c2-bdf2-23f28043c7b7",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "656cc3b9-0e46-4bbb-875a-5b9301c3d93d"
        },
        "item": {
          "id": "f36ab910-a4e5-41e8-abbc-418a896df3f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "349380b6-4d8b-431a-bd37-adebaecd9a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8daa57-3927-4a14-aa33-8180ed818184",
        "cursor": {
          "ref": "8b746a81-1188-4342-aeb3-a397ca741eda",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0c62927-ede1-4e03-bb20-292c8ccb9154"
        },
        "item": {
          "id": "ad8daa57-3927-4a14-aa33-8180ed818184",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88568591-d447-4be0-9138-930ebc6bcf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c15b29e-e4ad-425c-89db-f3f8cedcb89f",
        "cursor": {
          "ref": "d0d4fde2-32b8-4bee-94c2-94f247c5ff6b",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "62722b21-695a-4432-b048-d2f1983bae7e"
        },
        "item": {
          "id": "4c15b29e-e4ad-425c-89db-f3f8cedcb89f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7da91a9-2286-4c03-bb95-c92c7a6da9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513f2ff-8e2d-40be-99d0-c1f1860dcb01",
        "cursor": {
          "ref": "66c1a7e8-e8d8-4aca-9f5c-e81d9810ee1f",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "564a0729-4035-4cb4-9a1c-eac8a54ca991"
        },
        "item": {
          "id": "2513f2ff-8e2d-40be-99d0-c1f1860dcb01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3aad7ec0-906d-4d67-92e8-9537628c4bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84507d2b-5a00-4498-98a9-f1cf00e47a37",
        "cursor": {
          "ref": "11b35838-460f-495d-8723-0ed77ba5bf95",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a6d8ac81-6eec-4494-9eb0-d351fdab65d0"
        },
        "item": {
          "id": "84507d2b-5a00-4498-98a9-f1cf00e47a37",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c42c29ad-903d-4f7e-9102-58453c796f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f755f8f-da10-4d91-b964-a34e8a536987",
        "cursor": {
          "ref": "949a7c5c-5d98-43c5-ad56-01c2dd15412c",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6c3d875a-fea7-42a0-9295-fb957fb29b34"
        },
        "item": {
          "id": "2f755f8f-da10-4d91-b964-a34e8a536987",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8aa3f1b2-1544-4a3f-a1e0-36ab4b58a61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79745ac7-a799-4764-a2f7-c74b20615abc",
        "cursor": {
          "ref": "7c3f2a5d-ad9a-4ef7-8537-f444beb9d7b8",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a3aca6c-8aab-4539-913d-0726258d7515"
        },
        "item": {
          "id": "79745ac7-a799-4764-a2f7-c74b20615abc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bc1f02df-5b82-41e2-a3eb-64f38a2cb281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc055ee5-d256-4661-b137-5c5b99d15eb6",
        "cursor": {
          "ref": "1a59aa62-3925-48e1-890e-a4c81bf0cff1",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a26542a-259f-41d3-9ef1-d5c59db50f9b"
        },
        "item": {
          "id": "cc055ee5-d256-4661-b137-5c5b99d15eb6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ae37d4c7-2ffc-4557-ad0d-79b27036094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005a5388-0e3b-4952-adc5-5a6b4befbd76",
        "cursor": {
          "ref": "fabda309-22af-41f6-aa62-75b685473a77",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "beac8f60-3d54-42c3-8ce5-ac160861fd2b"
        },
        "item": {
          "id": "005a5388-0e3b-4952-adc5-5a6b4befbd76",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e359c3f-f82c-4781-b2b6-9af4c5f41666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de8fa33-e8a9-44ba-b44c-e348639d03c8",
        "cursor": {
          "ref": "8bd2dc58-c271-4647-af6a-1ded09f985e0",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7437fd20-98e2-43b6-b79e-5363cbbf3f8b"
        },
        "item": {
          "id": "1de8fa33-e8a9-44ba-b44c-e348639d03c8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f06df169-7df1-49d8-9f06-4c3b301f6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a6280c-bc05-4e36-a485-21a80974aada",
        "cursor": {
          "ref": "e21575ec-849b-4d86-a1da-2cc96c048e58",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9ab8b4f5-31ac-4f72-9f88-1b866eecd41b"
        },
        "item": {
          "id": "16a6280c-bc05-4e36-a485-21a80974aada",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bfe247ed-deee-4b95-b391-ab5d765825e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4961243a-e497-45aa-ac57-bedbf8d25bdd",
        "cursor": {
          "ref": "3423ec29-db58-427f-a5ce-3fe248195da1",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7604fc0d-2575-479a-898b-20280df44e59"
        },
        "item": {
          "id": "4961243a-e497-45aa-ac57-bedbf8d25bdd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0637b7bd-3916-4ac0-b232-e65a0d8dbe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d2b585-8c76-45cc-a3d1-6c60fce06354",
        "cursor": {
          "ref": "26e69e48-8965-41f2-b9b2-a79f19a6d1f2",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "81f62055-63d5-421c-890c-5ac2a042c151"
        },
        "item": {
          "id": "89d2b585-8c76-45cc-a3d1-6c60fce06354",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b1aadf4-fe7d-4b5c-8a1a-1c7d19b549ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f91ab-18a1-41fe-8f76-0cc1cb0330be",
        "cursor": {
          "ref": "fefa6ec9-fab9-4cff-917c-484aab2045d9",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ae065d9-8bd0-4a7e-b875-b5bdd2448405"
        },
        "item": {
          "id": "8a1f91ab-18a1-41fe-8f76-0cc1cb0330be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e20cfe88-4362-4c71-92d8-959f2578b9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36fc913-dea4-4a09-a840-aa5836f62c9f",
        "cursor": {
          "ref": "f6b09f24-d56e-4198-95ac-0f5ba86d65ac",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df717eb4-8a65-419e-9cf9-0618f1baa6cd"
        },
        "item": {
          "id": "d36fc913-dea4-4a09-a840-aa5836f62c9f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7f5edfde-6179-45f3-bff5-d5675d86d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd574a17-893c-4e80-b400-c44348684bf2",
        "cursor": {
          "ref": "47fba4b9-cd4f-4744-86db-e9db00bcf85b",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "43807e78-0ecf-4c93-bb8e-af054c95b08d"
        },
        "item": {
          "id": "dd574a17-893c-4e80-b400-c44348684bf2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f56579d-008d-48e2-92dd-49c9d1078256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c28157a-2d46-4bac-ac6a-81c73cafd749",
        "cursor": {
          "ref": "1d8ca392-3afd-4324-9954-333adffdf2b4",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4fe67777-b2ed-45f8-8578-377e8fe66418"
        },
        "item": {
          "id": "8c28157a-2d46-4bac-ac6a-81c73cafd749",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "23ec44da-a6b7-4161-b35b-aaed8eccebc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78283ba-4183-48a0-a466-888e768125c6",
        "cursor": {
          "ref": "5f20f6cf-c3b0-4b0a-a36c-84a9e03b8d26",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9864db53-d9f0-4903-8b5c-b002160e20be"
        },
        "item": {
          "id": "d78283ba-4183-48a0-a466-888e768125c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "95fd9a9b-4b5d-4183-bc4b-f20451474945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42843d2d-4f87-46a5-baa8-9dd7ffd3f001",
        "cursor": {
          "ref": "f964521e-7956-4efc-9b83-b135f6c0151d",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c377ae10-1aac-4b1c-a430-63b5d55b2f35"
        },
        "item": {
          "id": "42843d2d-4f87-46a5-baa8-9dd7ffd3f001",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d919c241-e74f-460e-9544-b295b70ddb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd7d248-773b-412b-b2e9-86b275913bfd",
        "cursor": {
          "ref": "c7afd716-c622-42b5-afd9-fd367518fcf6",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2119c41f-ac40-4517-ae20-aa9cf8243078"
        },
        "item": {
          "id": "9bd7d248-773b-412b-b2e9-86b275913bfd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91e8d190-59c7-47da-82aa-109714d7bff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e21dab-fb81-4928-b250-0278e2b87635",
        "cursor": {
          "ref": "c0fc26dd-331f-4176-9c01-60604b45397c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f664b08d-a772-4517-aaeb-6dfcf1d9288a"
        },
        "item": {
          "id": "c2e21dab-fb81-4928-b250-0278e2b87635",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4745207b-436f-4cea-94d5-172741559b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5561809e-df22-4414-8ec9-71c17fa07299",
        "cursor": {
          "ref": "98355d26-f3a3-4589-8be3-3b6e61076149",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b93f9a1e-049f-43a0-b0a7-c1aa7d22515e"
        },
        "item": {
          "id": "5561809e-df22-4414-8ec9-71c17fa07299",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e3a1fe22-dffa-4c15-abb7-9ef6248f00c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd13a283-75e7-45f0-b61e-622e82dbe081",
        "cursor": {
          "ref": "011f4ef8-0bcf-40f4-b44a-539086d87ffe",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "11e22b18-538a-486c-a5ac-59a46724c9b7"
        },
        "item": {
          "id": "bd13a283-75e7-45f0-b61e-622e82dbe081",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "96b7ca28-ca5a-42d4-9405-351a21790bf8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 453,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b13535-306d-43c7-a72d-f974fb91e35b",
        "cursor": {
          "ref": "cd19d00f-e3ec-48ae-93fb-122c9aba6f55",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1c5686e-dd3d-4402-a2ac-b13d063530c9"
        },
        "item": {
          "id": "36b13535-306d-43c7-a72d-f974fb91e35b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "92f7d5e3-a737-4ecf-b7f3-a6f889b3f1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b13535-306d-43c7-a72d-f974fb91e35b",
        "cursor": {
          "ref": "cd19d00f-e3ec-48ae-93fb-122c9aba6f55",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1c5686e-dd3d-4402-a2ac-b13d063530c9"
        },
        "item": {
          "id": "36b13535-306d-43c7-a72d-f974fb91e35b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "92f7d5e3-a737-4ecf-b7f3-a6f889b3f1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dff3bd-5114-4ec7-9b55-e7301c289f95",
        "cursor": {
          "ref": "421d546d-0ec3-4618-8600-fc0396cbee46",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8ee9e027-e293-4e54-a2c3-9ce9726788d6"
        },
        "item": {
          "id": "43dff3bd-5114-4ec7-9b55-e7301c289f95",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bb7701e9-e7eb-4390-8993-269ddeebc6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5c3b18-43c5-434f-a447-305e4d26752a",
        "cursor": {
          "ref": "911f1170-7161-47c9-812c-20eeb7ab325f",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4583e32a-3f13-49f1-97a0-abdeec3b1aaa"
        },
        "item": {
          "id": "2a5c3b18-43c5-434f-a447-305e4d26752a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "37ea42a0-6791-4f90-bbc3-25d3f20ec770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a79d87-1c2e-4ef4-96e5-6073dd360538",
        "cursor": {
          "ref": "ff71393c-36cd-482d-b95a-0696cb9c5bb9",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "44cd590a-82b4-43a1-9264-e1a6acdb20ba"
        },
        "item": {
          "id": "24a79d87-1c2e-4ef4-96e5-6073dd360538",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dece4d11-a520-4c1c-8ca1-cf2046ed1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c129cf63-d81f-44e7-a4ef-045a5db8f6d6",
        "cursor": {
          "ref": "9a35b7db-9c33-4c27-b560-ad7735219235",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55dc6d2b-96ce-4a7d-8e14-5234984a868d"
        },
        "item": {
          "id": "c129cf63-d81f-44e7-a4ef-045a5db8f6d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ad4dcf4e-6046-4cc8-ae0c-90177eb24d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef6c777-a893-4986-92e5-4027f78589ec",
        "cursor": {
          "ref": "7cd84ccb-238e-4c94-a909-c694ee8489c4",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "952cea94-cdbf-4427-ba99-f21858d3a267"
        },
        "item": {
          "id": "5ef6c777-a893-4986-92e5-4027f78589ec",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "67c8c27d-2094-43d2-8836-71799f3634fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecab521b-099c-4102-8467-6286d5b8447f",
        "cursor": {
          "ref": "e5214b6a-088a-4899-b3c8-9d15e5054ea2",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "842786a8-5a68-43e7-b5f3-522f55a5c857"
        },
        "item": {
          "id": "ecab521b-099c-4102-8467-6286d5b8447f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71537e01-cf03-4528-9cbb-a95cac0b5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6217b59-21a6-47aa-84e6-76c9891ae499",
        "cursor": {
          "ref": "a8792316-8d82-436c-a7a7-f4d6fe0758e9",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f48ee9f4-9fcc-4d54-bcfd-f8ba43faa1f1"
        },
        "item": {
          "id": "e6217b59-21a6-47aa-84e6-76c9891ae499",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5d594aee-6dd3-4b93-bbdf-4762bb17c5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993b8f8f-551d-4225-b12b-b26c4b40575a",
        "cursor": {
          "ref": "78dc8ccd-a01d-4ec6-be4c-59cdb7f5098f",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "db6c8b56-af3c-4333-8b08-2e7ffe86c85f"
        },
        "item": {
          "id": "993b8f8f-551d-4225-b12b-b26c4b40575a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc04114c-74c2-4def-b327-d5170675957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bbeb60-d981-44d9-bdab-d07fd1ef3120",
        "cursor": {
          "ref": "346bd1d2-5f90-4d52-95db-141a048285c0",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ae4bcfc0-cfad-4ccf-b3ca-b33478a5d435"
        },
        "item": {
          "id": "85bbeb60-d981-44d9-bdab-d07fd1ef3120",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dd350ab5-dede-41da-866e-d90dc546fd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20762641-98b7-4c88-ac5b-3b281abb9050",
        "cursor": {
          "ref": "ad458a25-9045-4187-9217-12aaaf6ecc5b",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d11175bb-da2d-4f5b-9f26-059e2dd10e6c"
        },
        "item": {
          "id": "20762641-98b7-4c88-ac5b-3b281abb9050",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "05176b1c-3181-48d3-8cdf-8cbb992755f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936c3b2b-e625-43b3-9387-77ea0f4bc799",
        "cursor": {
          "ref": "64cbd020-3b66-45b7-a312-9c4b7e6ee129",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cfbbbfb3-f89e-43ed-9b6d-098cf92ea7aa"
        },
        "item": {
          "id": "936c3b2b-e625-43b3-9387-77ea0f4bc799",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "65d08a58-e5f1-420e-8bcc-b4de8635a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a34ec-47c1-475e-b913-d6873ec3f857",
        "cursor": {
          "ref": "aba42661-c6eb-4ec0-9141-9390acdbafc0",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "201e3380-3741-453f-b93d-6c71524709eb"
        },
        "item": {
          "id": "1a0a34ec-47c1-475e-b913-d6873ec3f857",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "91723357-b69f-41cb-88c0-f9d8005692cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21ed213-79ac-47fe-bfa2-1d4c713270bf",
        "cursor": {
          "ref": "ab8a758f-f935-4cb7-9404-f53720a8e0a1",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7384540f-9f8b-492a-bde8-e52f16ea22dd"
        },
        "item": {
          "id": "f21ed213-79ac-47fe-bfa2-1d4c713270bf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5b7c2b3a-1247-44ef-997f-7de665d3a651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08703d14-076e-45ba-9661-4f8dbd6d8d3d",
        "cursor": {
          "ref": "353b806d-c9cd-4f55-876b-2e4ef468321a",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0baa1bb3-2acb-4a31-80ad-b550a47e7b6c"
        },
        "item": {
          "id": "08703d14-076e-45ba-9661-4f8dbd6d8d3d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "09856eb2-a488-4f76-8441-a401a5ef5631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ea1b9e-8d04-47fe-a5d7-4b3bc64787f4",
        "cursor": {
          "ref": "9ee5f748-b041-4737-870a-60721186b3e9",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "98cef740-d8ea-4650-a478-4f6dc8748eca"
        },
        "item": {
          "id": "d5ea1b9e-8d04-47fe-a5d7-4b3bc64787f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "244bea75-1642-4363-ade0-f3b3b9b35594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e719e48c-8f36-4018-84d2-f9cdfb436a56",
        "cursor": {
          "ref": "6f6c7453-23f6-4b40-829b-872c2eab170c",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "635c103c-d638-4fc1-ad3d-1c91a39a4125"
        },
        "item": {
          "id": "e719e48c-8f36-4018-84d2-f9cdfb436a56",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ace54291-3b39-4caa-81eb-54c9b44dd150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c67b310-9257-4d64-a2b7-7dfd9199f853",
        "cursor": {
          "ref": "7b16ac6a-26f5-41bd-9ab8-f476028fa666",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "65138b7f-fd66-488c-8205-9f163e7276a0"
        },
        "item": {
          "id": "7c67b310-9257-4d64-a2b7-7dfd9199f853",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "bb53a50e-1cb3-4a49-8fa1-7d33448559c7",
          "status": "OK",
          "code": 200,
          "responseTime": 3326,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "4d4a95c5-96f3-4aaf-9dc6-f37320c631b9",
        "cursor": {
          "ref": "b96602c4-72b2-4cda-b1e0-300d8bcfd4cd",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fabea74d-c715-4941-96d7-0c1a5924c3b4"
        },
        "item": {
          "id": "4d4a95c5-96f3-4aaf-9dc6-f37320c631b9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "472bc08c-0aa3-4f8b-a50d-475f78d4a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52327baa-587c-43a9-a3fa-1c34dd86ac18",
        "cursor": {
          "ref": "b5ba770a-a4e0-4332-9f7a-97eafb26dd77",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "286ad72b-02f4-49f3-9f7a-5d4092c2f99f"
        },
        "item": {
          "id": "52327baa-587c-43a9-a3fa-1c34dd86ac18",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f553c2af-8805-4e9f-8d61-bcfcab65e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f75a2-3839-43d8-bc1e-3eadf2205914",
        "cursor": {
          "ref": "befbb673-3bf1-4296-8fbc-94a59e5f2ef6",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "505411d0-bc4b-4043-884e-c2711f8895b8"
        },
        "item": {
          "id": "8f1f75a2-3839-43d8-bc1e-3eadf2205914",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "174f9103-271d-4826-9f5e-00d14915d4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad7cbed-4f55-4bc0-b60e-bf84461b99f8",
        "cursor": {
          "ref": "8995bb7a-b4f4-446b-9951-a96cb78e2b4c",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d301ec6-2c0f-48b8-9580-e0203ffeb15a"
        },
        "item": {
          "id": "5ad7cbed-4f55-4bc0-b60e-bf84461b99f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8867fadb-03cd-4175-a7da-53a850b49b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed67e55-c2ae-4a8c-89f7-d3479d84d159",
        "cursor": {
          "ref": "c673ec6d-47d6-407b-baa8-507ace23c0db",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "651c0ab1-5fe2-42bb-beaf-c8ccf5e69168"
        },
        "item": {
          "id": "eed67e55-c2ae-4a8c-89f7-d3479d84d159",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0c13b5fe-780a-4dea-b1fa-140244785828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9b0287-2a4c-4b9e-8788-071074839977",
        "cursor": {
          "ref": "4e0b06ac-cfef-4976-aa31-ee21328ee47e",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e45d218e-0439-4d99-aafe-4238baff096f"
        },
        "item": {
          "id": "aa9b0287-2a4c-4b9e-8788-071074839977",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2aa793ff-fb84-40b4-b0b9-5c6cd65185e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69af5784-c0dd-4ef1-ae0a-8886ae0b0a5b",
        "cursor": {
          "ref": "c1e4de46-d279-43ac-acd2-0a4d42be5fdc",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0e027dc0-535f-498d-9057-663e8fbff51c"
        },
        "item": {
          "id": "69af5784-c0dd-4ef1-ae0a-8886ae0b0a5b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e8975bcb-016a-437f-b66f-1ec1ad964e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b9e6d-5e3a-4b3f-ae9e-9e1ae5f8ba28",
        "cursor": {
          "ref": "0ba815eb-5399-445b-be27-163d26a03179",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d67ae01-7417-49ce-8b4f-0a5d36bfb421"
        },
        "item": {
          "id": "6e4b9e6d-5e3a-4b3f-ae9e-9e1ae5f8ba28",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "67cee1c2-4617-45ff-a0b4-ef9c3f95aa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173baf0-aee6-48c0-9aa2-25b8f0d9e37f",
        "cursor": {
          "ref": "a4044d86-665e-4147-b5a4-b91126cbccc8",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e7a855a3-f313-48f7-ac97-8eb9d83fbf5a"
        },
        "item": {
          "id": "d173baf0-aee6-48c0-9aa2-25b8f0d9e37f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7184c35-ac29-449d-9f98-ea90c765142a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd8c500-641f-4556-9d05-01adac24d872",
        "cursor": {
          "ref": "5589a6cb-ef4f-49ed-976a-873718112611",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fded98eb-35da-4755-b3a5-ccf071f74faa"
        },
        "item": {
          "id": "1fd8c500-641f-4556-9d05-01adac24d872",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d6e338de-cf4b-4a7b-a756-93d8f9d4bb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c85acc7-9ab4-4e96-a99a-10f6463d6c51",
        "cursor": {
          "ref": "ebca2617-5318-4a24-a9b2-ad89a03f2a41",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5d6c0d0-e4ce-491c-b1d0-91668ed37588"
        },
        "item": {
          "id": "2c85acc7-9ab4-4e96-a99a-10f6463d6c51",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6da92c43-c577-46b3-80d7-6695c05ffef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c051c858-d7d3-4d9d-83d5-c287171ec6b8",
        "cursor": {
          "ref": "6221795d-eed4-4121-8e18-50c1cc541307",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e0ba9d01-cfbe-479c-8fe5-13f445d37b0c"
        },
        "item": {
          "id": "c051c858-d7d3-4d9d-83d5-c287171ec6b8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "52f5b4be-8f1f-4612-b8cd-84901e1ab873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015c5dd9-9bb1-4662-9e8e-cd2e358ff082",
        "cursor": {
          "ref": "211e004f-46d6-45d6-9245-43d31e7fb220",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d06e0ba-9820-402a-8168-384ab8d313be"
        },
        "item": {
          "id": "015c5dd9-9bb1-4662-9e8e-cd2e358ff082",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a208dcd-995e-46f7-8e7d-98dfdfcd814e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57440eb-b644-465a-8437-951f0986506b",
        "cursor": {
          "ref": "f9167fea-a8be-4e67-8694-4efa6ac281a4",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa43be74-c83d-4b18-a1e1-75447ecbbaea"
        },
        "item": {
          "id": "d57440eb-b644-465a-8437-951f0986506b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "08cca238-44fb-42b1-bdd5-e769b1d67846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e84c8-2dc7-4dec-b188-a822d0e08a2d",
        "cursor": {
          "ref": "5c98d7c0-506c-47c6-8bbc-67fd5ddf6886",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2920e8b2-88ea-44f5-acc7-54fab3399658"
        },
        "item": {
          "id": "ba9e84c8-2dc7-4dec-b188-a822d0e08a2d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6cff6407-ac81-4634-8ef3-ff3129c833fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b30f66-1e4e-4846-a0e7-4b1cf7e670d7",
        "cursor": {
          "ref": "3841cc79-2e98-4b64-ac4c-453a4790fe7d",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0709091d-33dc-44e6-92ca-9fdfc45ac695"
        },
        "item": {
          "id": "34b30f66-1e4e-4846-a0e7-4b1cf7e670d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2ce587b9-4ae7-4da1-b2ad-7f09f7ddd242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0a8f9-7a64-4050-b87f-b06f7373d1bb",
        "cursor": {
          "ref": "21b882b3-4a4e-4a72-92b8-3d94d646991d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15e8afc2-4ab5-4fe2-a51f-d52cfe7b8046"
        },
        "item": {
          "id": "48f0a8f9-7a64-4050-b87f-b06f7373d1bb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "55b32c77-59e8-4d68-b42a-7535a12b00a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc828fb-d7ef-4ee5-a0f2-34fc93a86c44",
        "cursor": {
          "ref": "76d69a53-c558-4001-b583-aebf00f0b542",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "44d65d3b-9d98-422f-b907-0181429c9552"
        },
        "item": {
          "id": "6cc828fb-d7ef-4ee5-a0f2-34fc93a86c44",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6fbb2ae5-36f1-49f6-a35b-c6942fa08fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c2234e-0bed-446d-848d-84f30ea9a43e",
        "cursor": {
          "ref": "fda00e6b-ff28-4ff2-b13f-14de4e0a5eda",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e96f3ed-51a6-4908-b6cf-364e454605fb"
        },
        "item": {
          "id": "d4c2234e-0bed-446d-848d-84f30ea9a43e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cfab8319-661e-4687-ad2b-0cf52dbf661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0f30c8-7b7a-4938-baf7-ccbb42a54da0",
        "cursor": {
          "ref": "52afa2c7-f565-4d63-b7bc-d207b9586070",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f50b021e-9b62-44fe-8211-d621bb300a2a"
        },
        "item": {
          "id": "0b0f30c8-7b7a-4938-baf7-ccbb42a54da0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3fc902b7-1209-4944-98a2-8a352c8b43ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1624f90-e870-4a8a-a44a-df9b1fbe987a",
        "cursor": {
          "ref": "bbc8c338-58c9-4969-a09b-2a9329a33e36",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ed77f44c-d57a-46db-9c9a-c132f7e086d1"
        },
        "item": {
          "id": "d1624f90-e870-4a8a-a44a-df9b1fbe987a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2970788b-c7d1-4ee6-b20f-753388cdd3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449b09e3-27e8-4a9b-89b3-ab019efa862d",
        "cursor": {
          "ref": "2cc7ed3e-2e7c-4645-aefc-066ed9031de6",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a683a102-c143-4bc3-aa8d-f9d5b7e479e6"
        },
        "item": {
          "id": "449b09e3-27e8-4a9b-89b3-ab019efa862d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "133ba25c-1970-4cd2-ab22-1ef2dc1cd7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2a1316-f7d2-4897-bee8-1d8bf69d8c02",
        "cursor": {
          "ref": "eb1eb16e-dd09-4213-ba2b-af101d4ebea7",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b8369bb5-47f6-4d1f-b809-1b18e76b021e"
        },
        "item": {
          "id": "2d2a1316-f7d2-4897-bee8-1d8bf69d8c02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "931f4d0a-248c-4f54-b1d5-9482ae649fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8320fc82-f81c-40f0-96f8-57a167b9c742",
        "cursor": {
          "ref": "d61d77cf-4822-4784-a267-fe18c0d933d0",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1b9e9e71-fe72-4263-b1b2-1532cf5ca928"
        },
        "item": {
          "id": "8320fc82-f81c-40f0-96f8-57a167b9c742",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dbbacdad-1779-46dc-827e-a17d2ac19a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77140d0b-2f56-4c44-8ffe-e5dc7e620054",
        "cursor": {
          "ref": "37eb0feb-0277-4121-b102-b45fdc0d40de",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c0656d55-da36-41cf-be96-c557007a8822"
        },
        "item": {
          "id": "77140d0b-2f56-4c44-8ffe-e5dc7e620054",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "31dee2fe-a021-4d35-818a-92d30e6a6cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3e69d-d892-4ff0-baea-51fbfa9e12d7",
        "cursor": {
          "ref": "1c94756f-589c-45c0-933d-a17b95569cae",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b4634dfa-d323-4013-af40-008de90587f4"
        },
        "item": {
          "id": "0da3e69d-d892-4ff0-baea-51fbfa9e12d7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0285118b-37eb-4ccb-aaab-61c1f890f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf9d76-3ded-4a51-9541-71d507e2de49",
        "cursor": {
          "ref": "05a38621-3849-47bd-b6af-267a1e90abd4",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d0db03d-9094-4734-8253-2fc9e1c179fd"
        },
        "item": {
          "id": "a4bf9d76-3ded-4a51-9541-71d507e2de49",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3f94f067-ff09-4c95-bbb6-5ce041cbb06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f599ab2a-2cdd-449c-9d4e-798158a093b0",
        "cursor": {
          "ref": "a4daa0d1-c1b4-4208-861f-3dacd3bd5e44",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e4340e6-96d3-4c48-b6a2-a6be90fa13d1"
        },
        "item": {
          "id": "f599ab2a-2cdd-449c-9d4e-798158a093b0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5afff01f-7046-4583-b136-7e8d3c8b0f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e403f9-40d0-4477-bb71-2c1e82e479e0",
        "cursor": {
          "ref": "26b683cf-a9e7-41c7-be5e-3812a0a34d18",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3c6930b5-245f-4642-9d18-cdea959c1a5b"
        },
        "item": {
          "id": "81e403f9-40d0-4477-bb71-2c1e82e479e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9d4038a8-5fd1-4e50-aa6e-68859959a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f02ef29-de2c-49d9-81a3-787f2aea0e2f",
        "cursor": {
          "ref": "4781a218-63b9-44ce-adb8-cad9bef8c1ce",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c3d3374-2c8d-4ca9-b62b-be7a01136422"
        },
        "item": {
          "id": "2f02ef29-de2c-49d9-81a3-787f2aea0e2f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85f2e804-7b43-43be-bb2e-292c48da65ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d2c32-b392-4dbe-9c91-5ea03caf4c44",
        "cursor": {
          "ref": "086bda5a-a078-46ee-94cf-6ac9152f414e",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1be603e6-ff7d-4196-855d-16a730ef3cfc"
        },
        "item": {
          "id": "693d2c32-b392-4dbe-9c91-5ea03caf4c44",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dc2399f9-6dfc-49d8-a51f-b372fee37e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96805bfd-4f49-44a5-aaa9-43f31cfc2d18",
        "cursor": {
          "ref": "71979dcb-afdd-4a06-93a8-558234003b47",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "24cf94d8-4f45-45ce-81da-ef396726fb86"
        },
        "item": {
          "id": "96805bfd-4f49-44a5-aaa9-43f31cfc2d18",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "328b774e-1d06-4e08-837e-f4c4a968539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222580e4-041c-40a6-8481-a74522dfaef8",
        "cursor": {
          "ref": "024dd66e-3167-41da-8282-3261990eae1d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c08efefb-c74c-4522-9bc1-193e494b4d1b"
        },
        "item": {
          "id": "222580e4-041c-40a6-8481-a74522dfaef8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "82aa3b24-eaa9-4b0b-94a1-4fca6a1ac3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2a33ac-4091-4e03-922c-f0f12c7f2a8a",
        "cursor": {
          "ref": "ac5a9018-60a8-4a6f-a94d-1c8ec021e7a7",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "17eb5bda-dcb7-4a3e-a8a6-5f54694e2b7d"
        },
        "item": {
          "id": "6f2a33ac-4091-4e03-922c-f0f12c7f2a8a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "19925a0d-f11e-4fdd-bf8e-fe371db37f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d57e904-4a12-4817-8337-989aa16df487",
        "cursor": {
          "ref": "533fee1c-351c-4501-91ca-61266eefb8ad",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df8c4b70-d970-484b-85b1-dbb1111b8ca7"
        },
        "item": {
          "id": "6d57e904-4a12-4817-8337-989aa16df487",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42375715-4831-4169-8163-8b4b2a47ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e275881-9f1c-4c39-babb-6c0e71098374",
        "cursor": {
          "ref": "3af6ad6b-6064-4d1b-951d-e21860f5b670",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6afe87be-3aac-4b19-ac95-346d1852d474"
        },
        "item": {
          "id": "4e275881-9f1c-4c39-babb-6c0e71098374",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "02a769b2-0aa7-49d2-9aa7-3e77d199dc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd02059-61d5-4d26-98d4-ec3d8c35dcac",
        "cursor": {
          "ref": "452f8f04-fa26-4113-86d6-a3749cc9b6ca",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbeb3387-bab5-4168-8796-6465e8793ea7"
        },
        "item": {
          "id": "5bd02059-61d5-4d26-98d4-ec3d8c35dcac",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "63384ca3-f782-4c4a-b846-39001af0deb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c40ba76-c739-4dc6-a51e-2d742767aa87",
        "cursor": {
          "ref": "69049e4d-2860-42c7-8bcd-64556fd3ff7e",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5e5934c0-e29a-498d-a856-d672c4ad8ff8"
        },
        "item": {
          "id": "7c40ba76-c739-4dc6-a51e-2d742767aa87",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a845f4be-53c6-4b67-b554-71589f8d51e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a156b4c-fd23-45f2-8660-bfa62f382a54",
        "cursor": {
          "ref": "ee860244-1bec-43e3-9aa9-b08887866d31",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51683194-39a1-434a-8a33-cddd48742c64"
        },
        "item": {
          "id": "2a156b4c-fd23-45f2-8660-bfa62f382a54",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "886d4c3e-7a71-44e9-89a1-7692d3c14fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101d9fa-929a-43e7-8450-6db0f70e60a1",
        "cursor": {
          "ref": "8f314d63-fb34-4076-abdc-2e39690dc9c3",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a957fd5-8ee8-4cb6-8d97-0ffbe4e48da7"
        },
        "item": {
          "id": "9101d9fa-929a-43e7-8450-6db0f70e60a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d5abe681-5861-425d-a054-09dc44606675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64c4544-66bd-4552-b0e6-b513afb78b85",
        "cursor": {
          "ref": "ecf99320-3541-4839-9895-1419e9de11ce",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "61c9b02e-f8c6-43d6-88be-9e1355aca83f"
        },
        "item": {
          "id": "f64c4544-66bd-4552-b0e6-b513afb78b85",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "800cafb3-26bf-4d5f-9f63-65122c8c41e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d5ca40-b5ec-454d-a6f4-bbc20d37ef31",
        "cursor": {
          "ref": "ffd98e01-12f6-43a7-917b-97821e5852c3",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee6c4273-e557-42cc-8a37-0cf31e767742"
        },
        "item": {
          "id": "27d5ca40-b5ec-454d-a6f4-bbc20d37ef31",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4ab0a9e-1d83-410f-a9d6-f7b06c326d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f301eb9-927e-430b-83d3-954b910050d6",
        "cursor": {
          "ref": "b95b33b0-f0cd-4d42-8c34-d907212b1515",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "10b631a7-fbb1-4162-8df9-b606cdae098c"
        },
        "item": {
          "id": "2f301eb9-927e-430b-83d3-954b910050d6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cf86b120-b8b3-4727-abc0-35a86036c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e790dc-68ba-4603-aa52-dcdcd959a9fc",
        "cursor": {
          "ref": "54d63aec-ce8b-4997-84d5-dd08a39bb6f4",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e8e7c36c-0479-4331-a49e-52c0ba356eb0"
        },
        "item": {
          "id": "36e790dc-68ba-4603-aa52-dcdcd959a9fc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2e1d019-c559-4ec7-a0a1-5133a92846da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1af940-ee68-4745-b13e-cc92da17b032",
        "cursor": {
          "ref": "4ff36a32-fa91-473b-8a00-3c46a4246f3b",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "49ebcf9a-8c64-44f9-b071-dc93d929392b"
        },
        "item": {
          "id": "1d1af940-ee68-4745-b13e-cc92da17b032",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "14ff8880-6169-44c5-81bb-13e6847510d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8018eb-a633-4532-ae9b-ebc017437c50",
        "cursor": {
          "ref": "c125ae62-0f42-4bd4-a2c9-7a5dca18362f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "713e20f3-ba0b-4048-a2e0-a57e2d5408d4"
        },
        "item": {
          "id": "9e8018eb-a633-4532-ae9b-ebc017437c50",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5676523d-9ad3-483e-a997-b4505d156a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7ffb3a-1b1c-4fb7-b816-def0917159ca",
        "cursor": {
          "ref": "fbb52915-546e-4f07-a195-0a013d857651",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6466c832-8e6e-46af-9662-e4f5607bf0ed"
        },
        "item": {
          "id": "4f7ffb3a-1b1c-4fb7-b816-def0917159ca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4aaf4b7f-5f74-4c43-a45f-bed5ad969ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346d557b-21e6-4fb7-80f1-c7f543175477",
        "cursor": {
          "ref": "9e7cfe18-fac2-4f3b-b6da-c1b6c493fa42",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "805ad50f-240d-4583-abd8-f85f7416bed6"
        },
        "item": {
          "id": "346d557b-21e6-4fb7-80f1-c7f543175477",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "20ee7a4a-0a02-476b-84ef-1f1faaea51c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa662f72-ee14-40bb-b12c-81a6417ed56a",
        "cursor": {
          "ref": "c242fe18-092c-409a-8571-2f504f65cd6f",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2cc06720-2ea9-429a-b0ad-0fdfdbd37f07"
        },
        "item": {
          "id": "aa662f72-ee14-40bb-b12c-81a6417ed56a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5dfaa752-5c0f-41a7-9f9f-f874fd47d5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1474e5e4-beed-4f59-9f2f-120d3fe76299",
        "cursor": {
          "ref": "f9235a02-8fbd-4a9c-add6-93f7df3d88ba",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ad97e21-d032-45e9-a78d-b103494ec609"
        },
        "item": {
          "id": "1474e5e4-beed-4f59-9f2f-120d3fe76299",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "05afa811-9465-4942-a875-7f11e3bbab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a621ca0-8474-437b-b6ec-1865147b5918",
        "cursor": {
          "ref": "86513c06-19ba-483a-a1e9-f22899149924",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e3386d7b-bade-4669-afba-91d2966a64c7"
        },
        "item": {
          "id": "3a621ca0-8474-437b-b6ec-1865147b5918",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1e55fbe0-2e82-4e74-ba7b-440fb25099cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffc55ff-24a9-4dcb-94fb-6c5ae5383e9b",
        "cursor": {
          "ref": "ed15fac0-813b-4599-a992-a72e7caa8768",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "00b1d8cc-baf0-411c-ac0d-5f5482915654"
        },
        "item": {
          "id": "7ffc55ff-24a9-4dcb-94fb-6c5ae5383e9b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a504ddb6-7fae-43ab-9f45-9e0322268544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d690c8-1d15-4a57-9e73-7074ccef9be3",
        "cursor": {
          "ref": "e8793e15-dd71-4c9c-abfd-d169503bc41a",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "02d817be-450d-476c-969c-0d2a6bb1d8e9"
        },
        "item": {
          "id": "42d690c8-1d15-4a57-9e73-7074ccef9be3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c1ba7aa9-fe7c-42a4-b126-3df7cd6cd8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccbe3d7-8e95-49fb-a446-2f82622d9b93",
        "cursor": {
          "ref": "1e71aa0d-2b6b-4f53-8bbf-918ee1f3aea7",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "309a6853-34a0-4adc-9204-0ce36a561f23"
        },
        "item": {
          "id": "fccbe3d7-8e95-49fb-a446-2f82622d9b93",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "650ba6a5-da14-4253-a4f4-c8830efe491a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63433a32-4d19-4add-924d-8788e55ad655",
        "cursor": {
          "ref": "b10442cc-a49c-4c77-8758-62cfe7241be8",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86367993-d6c6-4e74-a5cf-727fc000330f"
        },
        "item": {
          "id": "63433a32-4d19-4add-924d-8788e55ad655",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a4200b20-1ae5-4783-9a98-5672bbafe6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e35399-3c7d-4c29-9de5-5229e246708f",
        "cursor": {
          "ref": "44a48b7c-330b-4f0f-b72c-e200b6583ee8",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "183e7284-7b03-4ec7-b382-b1b18ace6ddd"
        },
        "item": {
          "id": "84e35399-3c7d-4c29-9de5-5229e246708f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e48a73a-3023-42e2-9308-2f9cc0a06e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a949b2c-a785-48b6-b082-03f5eb125cda",
        "cursor": {
          "ref": "8abc19d5-97ea-4c30-ba25-ff9d2e0e7109",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9e1cfead-747d-491c-9c45-5fb7995ebbc2"
        },
        "item": {
          "id": "6a949b2c-a785-48b6-b082-03f5eb125cda",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6ed95d70-7e57-43ca-97fa-5be493b4cf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba317cde-835f-41e4-9d26-df2619473cfb",
        "cursor": {
          "ref": "247452a5-2c60-4120-9634-d179c10a098e",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "87784225-981a-4c65-938f-4a6646eeca3c"
        },
        "item": {
          "id": "ba317cde-835f-41e4-9d26-df2619473cfb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ee41790-3caa-4ff5-bd1b-f5ce9a4c10d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22437e71-3303-4e9e-b720-6a2f8ed73d21",
        "cursor": {
          "ref": "55b12a6e-a0f5-47ee-a5d7-a30197a1d364",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a04a2c3-c09d-417f-a70a-de960e406eb6"
        },
        "item": {
          "id": "22437e71-3303-4e9e-b720-6a2f8ed73d21",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b318c536-e63c-4b3c-ad41-8007cc718061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345aa723-308e-4b72-96e6-d3c22d355b0b",
        "cursor": {
          "ref": "15537b94-520f-4e56-9a65-fbcbf48c3466",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5a42cf39-6ba9-4348-8b92-ea6cb74cc102"
        },
        "item": {
          "id": "345aa723-308e-4b72-96e6-d3c22d355b0b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d792b84d-ac3c-4017-8a93-75be106ba275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc57824f-6b2f-4ba4-b949-fd0ebc03e18e",
        "cursor": {
          "ref": "28415c2f-0914-4aec-b1d6-09979a3a5881",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "96311d56-6b42-4d10-a4ae-8891f4f9b854"
        },
        "item": {
          "id": "bc57824f-6b2f-4ba4-b949-fd0ebc03e18e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7dddf846-fa63-4d71-b94c-76bd66cbdf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a25427d-7c49-4c15-8b9c-f654be1a5fb9",
        "cursor": {
          "ref": "5f3d98ea-fd6e-4c27-8e2f-f7c4b8fb30bb",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a9b17633-7054-4d11-b4e2-5004092d21f1"
        },
        "item": {
          "id": "9a25427d-7c49-4c15-8b9c-f654be1a5fb9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "73c5d3ae-bb4c-445f-b2f7-85017611c026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c3bde0-2be8-432b-8e6e-749ca2179e23",
        "cursor": {
          "ref": "f7203761-c066-4473-bae6-e5d57d17c651",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "afdc87e3-b93d-41b7-9f06-c9a59933527f"
        },
        "item": {
          "id": "d7c3bde0-2be8-432b-8e6e-749ca2179e23",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fee939b6-c0c0-4c43-adfc-af476193ce6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e491925d-2a94-4df5-96ea-dcac1839f139",
        "cursor": {
          "ref": "17b3aa9b-dadf-4b23-8591-361224fd2f72",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d612b18c-4d01-4cdb-8e88-9e058f8f8917"
        },
        "item": {
          "id": "e491925d-2a94-4df5-96ea-dcac1839f139",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc5fae8b-e926-4540-973e-471291e22725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afb7806-07f4-4e91-8564-294de647a083",
        "cursor": {
          "ref": "db9d253e-9abd-4f74-9c36-45b5b07f9219",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dab1eafc-029b-46dc-adf3-5870bc98b844"
        },
        "item": {
          "id": "8afb7806-07f4-4e91-8564-294de647a083",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb26d1c0-9263-4799-b42d-93745a1b1efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79110722-3506-4341-8dcf-da89bdd1a19a",
        "cursor": {
          "ref": "bf667d2e-02ae-45d6-a9cf-c4d91da50a1d",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d420998d-2e65-4cf3-aab2-af820422cf22"
        },
        "item": {
          "id": "79110722-3506-4341-8dcf-da89bdd1a19a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aade9148-dbb6-428d-9d81-b7afd991e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99077432-6465-4827-90d8-18e271f2d6b8",
        "cursor": {
          "ref": "520b257c-55fe-4496-bbd3-887a9a2c2feb",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0a8065d5-601a-4f6f-9637-7a177cf04df3"
        },
        "item": {
          "id": "99077432-6465-4827-90d8-18e271f2d6b8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fa1a4a52-1f07-4381-8206-231af1dc2b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175a6613-28ae-4cc6-b721-11d76836e562",
        "cursor": {
          "ref": "ecdc1481-dcf9-48e9-a2d9-31349ce87600",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8a9821f-29e0-4219-8fee-a6fa4bea6158"
        },
        "item": {
          "id": "175a6613-28ae-4cc6-b721-11d76836e562",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9d00918f-d884-44e8-b64a-d66ba096b304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b1004-8937-41e8-8b30-5548b7ce23d9",
        "cursor": {
          "ref": "b4986538-113a-4cac-82a1-7cb5ef96e157",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0ca2a17-fb22-414a-bdc9-1f6140b7f03b"
        },
        "item": {
          "id": "921b1004-8937-41e8-8b30-5548b7ce23d9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "de310dab-f6c8-4614-8235-de9bd8671854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5fcdcc-5a57-4ed8-97d0-3129a3fca6d9",
        "cursor": {
          "ref": "a93eea6d-61f3-46f4-a9c2-5ff2729943bb",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2a103b45-33d6-4f60-ab73-47b399045444"
        },
        "item": {
          "id": "2f5fcdcc-5a57-4ed8-97d0-3129a3fca6d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "42e700ec-a67d-480a-a51a-af18bec54d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4ecd2-de55-440c-83c8-e8180473ea79",
        "cursor": {
          "ref": "c2efdf03-6dad-46e4-85df-1649ba75455b",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "886d5fb0-946a-4e76-940e-a7cc2d1935e1"
        },
        "item": {
          "id": "86e4ecd2-de55-440c-83c8-e8180473ea79",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "99fd8c4c-6bb4-438c-b864-fde8776f3ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53155db-e38b-4c9d-b9a5-d8dcc7a5356c",
        "cursor": {
          "ref": "e8014d77-99d4-4c89-bc00-459f28a32db5",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "68b0236f-668d-4d28-a567-18b85e90c648"
        },
        "item": {
          "id": "e53155db-e38b-4c9d-b9a5-d8dcc7a5356c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f504eb3-aea8-4214-a8bf-09ee3df79ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eb4905-1494-4463-8427-221e59595459",
        "cursor": {
          "ref": "93cdd924-3b24-4857-8ce4-689a489c92f2",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b6cb5332-a0ca-4212-8a5f-922cd99b9444"
        },
        "item": {
          "id": "68eb4905-1494-4463-8427-221e59595459",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c64ab279-b775-44a8-bf4c-d913fea98205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c974a4d4-f5a5-4844-acb1-4c6458b7bc12",
        "cursor": {
          "ref": "0edbb324-8642-40e3-b585-e1190fb4b3d4",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2ed6e36a-961b-4907-a5c5-ca89717a87a9"
        },
        "item": {
          "id": "c974a4d4-f5a5-4844-acb1-4c6458b7bc12",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24861875-6bf5-4700-b3b3-5894bfc9363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9bd653-6832-4daf-85b4-52d4de0c4e3f",
        "cursor": {
          "ref": "07c92bb0-0579-41d9-81b6-fcd35e1b4006",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b9adcba-ca92-4c64-9f52-88edf56924f7"
        },
        "item": {
          "id": "6c9bd653-6832-4daf-85b4-52d4de0c4e3f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f7f8634c-ded2-427c-91db-8f168a4eb640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dfee98-04b3-4615-a547-43b3b470559d",
        "cursor": {
          "ref": "bb887e7f-d290-4eb0-8eae-546536993905",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "921b3c15-ff4f-40bf-825f-281eb3642faa"
        },
        "item": {
          "id": "71dfee98-04b3-4615-a547-43b3b470559d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "260421f7-eb80-40c5-896d-0212a03ac752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc0c998-1e9d-4e01-bc13-39c8c8c86342",
        "cursor": {
          "ref": "b2e96132-1580-4df0-8392-dc27e812eb5b",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e688b9a0-2ad9-4759-bfdb-9e3c6d93db94"
        },
        "item": {
          "id": "0cc0c998-1e9d-4e01-bc13-39c8c8c86342",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2409c871-6c87-4b40-885c-6b0c1abbc79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb10e69-3899-4ad3-9c3b-f12185ef7f03",
        "cursor": {
          "ref": "1c4e45a9-8c50-49c2-b545-1bae3a669abb",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "664d2623-8da0-4b77-a0e7-907e56a3e475"
        },
        "item": {
          "id": "8cb10e69-3899-4ad3-9c3b-f12185ef7f03",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1267265b-5087-49f6-9a0b-9ba603328166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc76d7c-f9c7-4c57-9dff-9908460e6eb7",
        "cursor": {
          "ref": "e12e7050-46ca-49e2-9e88-7c4810429703",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5984c21e-a518-4150-8e1c-2280c9171afc"
        },
        "item": {
          "id": "fdc76d7c-f9c7-4c57-9dff-9908460e6eb7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0ad5f35-cf96-4e3f-a2a3-ec3c21ca9989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3269100d-d02f-47ac-988a-dbdd9b8719c6",
        "cursor": {
          "ref": "86fd2be7-b3c2-47c1-a631-78bffa4670bc",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "162f1f4a-fd0f-4b99-ad80-d0fd33ebd834"
        },
        "item": {
          "id": "3269100d-d02f-47ac-988a-dbdd9b8719c6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "33deb83f-2e86-4f50-8e62-cdd7958a1711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf89e02-7dd0-4349-a5fa-52f90c4b1b99",
        "cursor": {
          "ref": "e72705c1-bfe9-4c76-bc5c-15680a53a7c6",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1deb2706-a0f6-4750-bfce-c638cec38ef3"
        },
        "item": {
          "id": "1cf89e02-7dd0-4349-a5fa-52f90c4b1b99",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ef0427f8-0a83-4e9a-abab-81eb2ca49660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3341f18a-96ce-46af-a981-7df8bc77fcbd",
        "cursor": {
          "ref": "3258070d-bc90-41ec-afb9-9285b8939f36",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "93920c78-1e24-4b30-b860-bb0c5ff21967"
        },
        "item": {
          "id": "3341f18a-96ce-46af-a981-7df8bc77fcbd",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "66d6d125-f61d-4390-946a-e754031c5791",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 279,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c94b49-a378-4153-a58a-15373fb173fb",
        "cursor": {
          "ref": "943896ab-493c-427d-997d-60ef6434cb7b",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cd5e24dd-d2d8-442f-ab6c-26382dd41915"
        },
        "item": {
          "id": "21c94b49-a378-4153-a58a-15373fb173fb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "baf8680d-129d-45fa-88f8-59b243c248b4",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c07bdc4-592b-4dcc-b4c6-193ae1a67445",
        "cursor": {
          "ref": "47d8161d-3adc-4856-9f23-59fd188bcc66",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1308bc99-b71b-4984-b9a0-710efad01ce6"
        },
        "item": {
          "id": "5c07bdc4-592b-4dcc-b4c6-193ae1a67445",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d45db312-90ae-4590-b2dc-435f61bbe6e3",
          "status": "OK",
          "code": 200,
          "responseTime": 3244,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a992b82-4436-4659-980b-64ad5aedf760",
        "cursor": {
          "ref": "8b32201c-c941-4610-9a72-07a9be93e6b7",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4a718cf0-9568-4fbe-9c70-bc8b09b7c122"
        },
        "item": {
          "id": "5a992b82-4436-4659-980b-64ad5aedf760",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c95ae25d-db08-4cdf-8ecb-e187916730e2",
          "status": "OK",
          "code": 200,
          "responseTime": 3031,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
        "cursor": {
          "ref": "da2dce50-bba2-4585-b5f6-9ed7018b4ebc",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86a58751-9857-4582-b514-e1f9cec48145"
        },
        "item": {
          "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38429155-0363-4f0a-b6fd-d25a6820999c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
        "cursor": {
          "ref": "da2dce50-bba2-4585-b5f6-9ed7018b4ebc",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86a58751-9857-4582-b514-e1f9cec48145"
        },
        "item": {
          "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38429155-0363-4f0a-b6fd-d25a6820999c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
        "cursor": {
          "ref": "da2dce50-bba2-4585-b5f6-9ed7018b4ebc",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86a58751-9857-4582-b514-e1f9cec48145"
        },
        "item": {
          "id": "7ea5eb95-77d5-472a-96eb-749c633b8442",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38429155-0363-4f0a-b6fd-d25a6820999c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132df761-026b-434b-8872-e0594b03d148",
        "cursor": {
          "ref": "9b49f6e3-c855-4d43-b1ee-1bf02546235c",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "09b5eba6-536d-4444-aaff-6bfe49454248"
        },
        "item": {
          "id": "132df761-026b-434b-8872-e0594b03d148",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "41e75601-4130-4270-8be3-b2a2771efea7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 241,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c672981-c0fd-45e7-8d36-d492b0ddc69e",
        "cursor": {
          "ref": "8ffda9f4-bd19-4b5b-9b04-9c92528f8de4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d21c7fd5-8ddf-4e53-a1dc-ec9940d79ad2"
        },
        "item": {
          "id": "3c672981-c0fd-45e7-8d36-d492b0ddc69e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e073152e-86d3-443b-b331-e7187f8715bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c672981-c0fd-45e7-8d36-d492b0ddc69e",
        "cursor": {
          "ref": "8ffda9f4-bd19-4b5b-9b04-9c92528f8de4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d21c7fd5-8ddf-4e53-a1dc-ec9940d79ad2"
        },
        "item": {
          "id": "3c672981-c0fd-45e7-8d36-d492b0ddc69e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e073152e-86d3-443b-b331-e7187f8715bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a772d-534c-4e28-ac58-6e4cf5250823",
        "cursor": {
          "ref": "f7718b93-7ced-409c-b490-df62711a6d0b",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d5e791ad-8526-4d82-b1c0-d9c1abc4719f"
        },
        "item": {
          "id": "571a772d-534c-4e28-ac58-6e4cf5250823",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5d52651d-e549-42bf-860c-59cb1b48323e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce0067-e805-4fcc-9df7-0fa30104ae48",
        "cursor": {
          "ref": "5bb75727-bee3-4452-83a3-ee6eb2f530d3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6d7ccbd8-a2a2-4227-8ebf-e958cb42f462"
        },
        "item": {
          "id": "50ce0067-e805-4fcc-9df7-0fa30104ae48",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9eb35024-6b47-4e62-93c1-035774cde643",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce0067-e805-4fcc-9df7-0fa30104ae48",
        "cursor": {
          "ref": "5bb75727-bee3-4452-83a3-ee6eb2f530d3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6d7ccbd8-a2a2-4227-8ebf-e958cb42f462"
        },
        "item": {
          "id": "50ce0067-e805-4fcc-9df7-0fa30104ae48",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9eb35024-6b47-4e62-93c1-035774cde643",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36ddae0-f472-4efd-be8c-0f334c8bf011",
        "cursor": {
          "ref": "28c5150f-19be-40bb-98cd-7e5c099fe642",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "65a95186-3a89-43fc-a018-95b689a28850"
        },
        "item": {
          "id": "d36ddae0-f472-4efd-be8c-0f334c8bf011",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e30211f6-4116-46a9-9596-69b1b10cdb7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 484,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}