{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9b932aff-7207-419b-8331-88f7e6ea65bb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8e686854-883e-4acf-b648-1fa1b96749c6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7395d16b-d436-4629-9dca-1c416b3e8ddb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ae7745a-65e2-44c3-8f10-aaa5c63aa944"
                }
              }
            ]
          },
          {
            "id": "77129809-002a-40e5-a73e-ebcb279fcc95",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7da3cc7c-e344-47c0-8885-cb61bbcfbda9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e2dcf021-4d0b-49ad-8403-eb2ee1e34518"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7c893f6a-55bc-4680-8cee-76f2c1001447",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f08b1771-2b45-4049-a1ee-96292e12cc53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e50fbf75-1acd-4aee-b7d9-594f5984e216",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fb0a083-9f85-4f97-861f-16904fd082cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2584aee2-c825-414f-8304-403e0fbae400"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee0d00fa-2024-4ae7-ad8c-4769eb73c732",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56ceedae-4f43-43f4-a3dd-c2e9f30cbf85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "359ab34f-af49-4b25-9656-0d19f376ab38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e33a1a7-f89b-4cec-9641-1f2d8ae00173"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad51b547-148b-41ce-9d77-7880da1abaef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d347e4dc-cdba-4cbe-aa99-bfbc32ff48c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b7f3baf-aa0f-4ca5-a9a8-ecd377805ea0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a661538e-0dd0-45c3-97b6-82d0f0ae62cf"
            }
          }
        ]
      },
      {
        "id": "bc733bf4-841e-4baa-87d7-89099bc29617",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e7784c98-5564-4126-88e4-323014b90997",
            "name": "Negative Testing",
            "item": [
              {
                "id": "833067ef-74b2-4944-a8d3-60173b33dcb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "981f9bd5-dc20-4ca4-9c06-03ccfff4675a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06b6684-4b07-49c2-a4be-0df30312b34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "675f7199-a454-4817-ab8f-1d99c36e0037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b7782e-442a-45c0-b23c-e0e0aff33a1b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b886a44-0512-445e-a0f8-75e4d1c63acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac47cfe1-01e0-4a4e-ac6d-3b398b5efed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5844b552-78e3-4d90-8cde-8d771a7f3a85",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e38bfa-8417-4bec-a5ee-f399f397c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "624dbc6b-e580-467c-9545-656394c9b7f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1dc36d4-92ea-4554-9f86-50836ac4c989",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89535649-85ac-4382-a209-ecbca2bb0f29",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c354d641-94fd-4c7a-93ab-8e0c53e69059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20756c61-6558-4be9-b99f-af336d1a4563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bde0d6-03f7-40cb-8fb3-0875b14c1a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bc2947-0ddd-4b0b-8f22-649451907976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3cbfeb-5dec-4994-ad66-ad15519100d1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c5d4e2-7b2e-47a1-8b56-6b2fbed3aa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c0d0cb3-c5e1-4b8f-9408-1f68d71337d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef97debf-9a0e-4a8d-abf8-ba399feb37e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "933397f7-effb-409b-8d96-5c151cf28a90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1c75bf2-2bfc-4993-abe3-3e8c71e37bd9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da417123-81cf-41ee-bb90-e7e575683d1e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2655e29f-3bc6-491a-a052-f46dd70fdbe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc0a81d3-9ea7-4a4a-b05f-f66491b7b7fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccf6ed91-7d11-48c3-a6c1-3a5a4374c98d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "bb9a059f-6438-4629-a31a-a896530f33a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fa40f15-abb0-45ed-ab84-f06d12cd8c71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fd9713d-9b25-49a6-ad59-daae997c9a00"
            }
          }
        ]
      },
      {
        "id": "8fd4f2bf-8667-427a-87dd-1159ada9bc6e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e427cce3-4ef6-4599-90ab-318c766ad4e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07378bdc-3190-4c04-8de8-dd7f67d1163f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9fb69fe-f899-4117-91bb-41644290dee5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4f56ac-ca5b-478b-8b3c-47405ded677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dab6bf0-25d7-4031-815b-016cc190a802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d783967-4352-49e0-a2c2-846810cff676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bc2f832-d52a-4c26-b2ac-722dafa3fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b04ff9-5f72-4b35-9647-35bcc3aea957",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f587b8bb-ce7b-4014-b542-c8f5daeedc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1de9f5-d038-4b70-b771-a5b3b10f74c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1793e5e9-0ece-490a-b21e-3a305355df54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21ff197f-f9fc-4a34-8447-890ea677e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2639fc77-a56b-41c4-a696-aedb84784423",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d85d5e3-e0ad-457b-a775-22a10a0afd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3aa686-7400-4c0b-a582-715dddc29d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f9ef1e-c405-473f-956e-87a3118be769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "839923f5-d57d-4c77-8689-7af8e453d0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48fae7d-3756-4892-a5ee-2b3b10f22dd3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f152892d-e509-482e-9294-913d10631371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb249cb-baf8-4534-b723-dbb347b635f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba5571e-a03a-4b6f-9ad3-a3a64ad7052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b575508d-d1d0-4580-a396-82ceb21b7a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dc4ef5-7db2-4ce7-b485-ddf4722e08ca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbe3166-b8f2-4c15-93bb-5fc3d35f19fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780bdef1-e0db-426a-9bc3-cbbc417162a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7746826-8161-465a-9a70-0e20f0be3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ef6ef40-d07b-41ef-8188-6d981f152951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13e626a-d8b4-48a5-bb20-9b923a5d42c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddd6c7d-d4a2-4b27-8852-2e1ffcc71a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16d7218-0795-4dd4-bcb4-e147c6438eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900328af-e49f-4650-b9fa-8b108d29e9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7bc7164-ec83-4195-ba72-24fa80482e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50abb38c-1e23-41c3-a5e3-863a5b6796df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58814c6-280d-4513-83cd-e2c9732fbaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6374603-3f60-4ba7-bfb4-b0541a3cac26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f42cc10-7bd4-4972-b977-39cd7c190a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "599d9aa5-b7c8-4545-b164-2210833a5ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657ac8e3-b8f5-49b3-8374-6b92604042f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853f19ab-153b-43e0-b8e4-e9a08349f79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcaff92-6587-4f4d-943e-7f7991aeed3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f08047-5173-41eb-b6ae-93b1d552ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98bc6352-1206-4ccd-816c-834ae6e49bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d36d78-85b6-4d2b-99d7-c4d4d8041b2a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f88594-d4fd-45cd-a5ca-6e08c2c8d135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d375975-19a2-4f8d-87e4-faa3126d2984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71117c19-2a2d-4441-a08d-c946b65a1348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ca83deb-4700-4604-a557-ecc11d72828d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3686c8-f855-47f3-8f40-046aeea38228",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5264dc4a-679f-4763-b7b9-ffa547620c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71952606-1009-436c-bb8c-9cedf530a6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf58807-0635-4ae7-a4e1-f4cdc35c7d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504a0866-ef16-40fa-bf83-a755864b3326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333b2a7b-da43-4188-81d1-58f0a93a693c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f1ce1d-df30-480e-ae5f-2758ce0c4bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cd7f4b-911f-412b-b5ef-c03af918350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21e5a8-5de8-4fd2-98ac-4b1306372798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9944e0f0-2d09-4b07-b97c-b4f1602768c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf5a8b3-a927-4364-ac2c-72c41bced182",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec313114-4544-4b6e-8edb-29dba38a21e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76300e6c-125f-4441-9608-2169c719b860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a167e716-d7d9-40fe-a94b-ef3a26ac7272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "237361fd-fc60-4a4d-8744-b9ce553b4838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a762d87-00fe-4476-a57c-2ad8a38af53f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dc495d-976a-4195-b413-db6e491e2098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8b557d-a427-480a-8a33-0929a3077645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac413fa-9a87-4dbf-ab07-582b346eb1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ed9b19c-f12a-45a3-ad82-d3916ed6e77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a004d0-b98a-4f05-a06a-69e4b706ba72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63198449-639e-4f0a-9dc7-09e1f395dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f49cbc2-e00c-4acc-9fd4-9520fd60d2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e20ea9d-def7-4222-ba5a-218e8ea6519b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a8f844-b051-4f26-b42c-db1eb89f6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4589a7b-6a00-41f2-8cc3-103425d16588",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3125c38b-a9f4-406a-a170-892477138e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6c1cd1-6bb2-417e-8aba-ef14d61e6345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439b4254-5e2c-4696-8dba-d5afdc2b9c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d00926c-5a91-4e62-9dc4-fd210b5ad598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11997ffd-e5bb-4338-8392-40578b76e506",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94009ad8-9c0b-4463-837f-c2eafecaf283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5722fe5d-6bc8-46c6-8a9c-dae3b6c6fd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e55d9-c923-41ce-b333-80ac0f510b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34346027-5f7c-4f80-9b54-83e0b92ed99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0b1d05-d4c6-4661-9a44-492058c4ef23",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7673c49-10f2-41b4-abeb-49fd4d28923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294699fa-6e8d-4ee5-8b83-2783dcb5fc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba2f678-b2ec-437a-9583-1ed42d59cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb674297-09ff-4424-a77f-490e50c9f51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4305b15c-a64a-4461-b8c7-2167961f8b4d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d84e6fa-c763-41ba-aa95-36853319da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b44ffed-7101-44c9-9701-d776fcf33751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1f1163-484e-49b8-b514-a1e28f6cb15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db355e4-695a-4354-8152-dd4e37988b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9a9b4d-245a-4cee-a1ec-960ecde4d90a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a02ca0-6646-44c8-9e98-7e4fd9122079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab45dba2-2756-489b-b92f-1ff7717a1abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6879d5-686b-4668-8346-f369de9b6f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90814e5-3f66-40cd-b212-24865ee06eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65004d4a-bda0-41bc-8ea4-6b04fd0c03a2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cd65ef-0c27-4d23-8142-2cd0b9b83600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e183ae-e07b-47d3-9a21-961005e71080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b4013-aa7c-4765-ab1a-ee533290b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ded20c8-c045-43a8-9334-ba7c15503831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11231048-7b70-4a4c-8ab8-3a1cb6f51cfb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaed0a6-e0aa-464b-9b78-a9f85993aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61c08f5-7f9e-441d-888f-be2144a86ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92076f1a-4b59-456d-a413-1c3898955bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37baafa-4930-4ca0-a29d-251ea508dd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08448a7c-0bad-4ca5-95cd-876a2e4ad21b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad2fa64-6eab-4461-964a-400c926bcc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa0936-d6c4-4723-8ab6-dd30d183cb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177d2f17-1c7c-4008-b615-b9ab31318a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "383c52ba-a97c-4ae2-807c-5fbb1e260bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4636fae4-d15c-453d-9370-37d25de7621b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65719b1-c29b-41c1-9e95-07d271ed73bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b67e909-8fb6-4f68-91fb-2dad1c89a6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6926d0a0-e13f-486d-acd1-a2057460229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5df6139-8f6b-4168-a6d6-47f4628cedd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47e5c26-c014-4df8-a27d-9329853fc976",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53e0c9-cdc3-425e-be7c-9539d9f23213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07994288-10c3-4cae-8005-ff44c219e4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee42d9c-755a-4141-bc63-def8c8a574e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ded48d-fc63-42d1-bd35-9e62dacb1377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca15f2-655e-427e-a3a0-a4fe771ffc1b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080636a-cd20-4949-87fa-8db507d05cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26330d3-5439-450b-832a-5663d49b8571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2599f664-5d27-4f42-a26f-e10b6506aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8000f2d1-cab3-4259-87bd-638de3b0c721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d697b3c0-ed1a-4344-aded-30c53f8f3e7c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9d8cd6-82de-4737-92e3-e7703112c29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7d8053-7911-430a-8386-b39ec0a603d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa0f2d7-26b5-4659-ba78-583e180ca303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbc83c2-5bec-4a28-8b01-29ce5840efaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5b8f67-f357-418d-bee5-b8cfb700f1cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f56fb5a-b697-4b4f-83de-002889984aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbb527c-0edb-4522-b3ac-995dbb8c4e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3a43ed-32ce-4d76-9e4b-df5f7562ccb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a0cfcf-2508-48f9-819a-4ef23e68a4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4574d0-e936-43e7-baae-f61d2d883409",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a50f49-c93a-49ce-b9fe-1b5df1910201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874709b2-1e53-4873-a148-a5350d724c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69785a44-020d-4ce1-99d5-70fb213079b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2a004b-7d6b-42e9-b32b-75315459091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f8ffbe-2647-4439-80fa-0e6584dd8bb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41043d5-6147-4882-8c55-e87f51cf5167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25296d9-c717-442e-ae4c-bc2701149e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48095cc-b567-4762-8a54-d66a8cb5dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00826769-c374-431d-9d7a-048e1ea1a849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020fa75c-38a6-44a6-8af6-9c02934e0b1e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbdb150-4b52-4edc-bfa9-9bfbbf1e8a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139c0850-b974-47e5-a52f-401b4953eb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa18e0a-18a5-4bb2-8ef6-a800414f09c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "197f31f3-5e39-4850-81b3-4e06ee1babc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5140abbc-4ec2-482d-8e60-5fad0b061026",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4412d4-0d39-4afc-b4b3-e16739114a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9699fe54-1ade-40be-8dc7-476ebf35e85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcab2204-9611-47c6-a07e-ed2719dcaf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "168fb23f-2292-45fd-9a20-c09335276554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5a66a7-85ac-4c5c-8f55-2ff568fa2ac1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc4d2d-e9e9-4ffe-b91f-9ae27b1cd7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0436288-7940-4d4e-94a3-ea0cb21f548d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f66ed1-5eb7-4b2a-a820-13982e78b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50d7a72-0d5f-4a38-a688-68b62a6c4555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c45138e-048c-4a10-884d-1b7b0d3990f7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d904d0-15e0-4d86-a035-4a56f1fc21d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0e6544-d247-44ed-84c1-74a3dad14b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbb70b4-61dd-4810-927e-74a1a2c848a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b95b86-7f4b-4eef-8371-bd05809a6091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e7c66b-0c79-49e4-8cc6-ae3d6fd8157b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab08ad-8e41-43d2-9027-eae4288f24b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e48913a-2e51-48f5-a90b-b25e33f6caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cf73f9-58c0-45b9-b6d0-2cb4b07cf8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4ba688-8c56-470b-ab71-2149eb4364ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba165e16-662b-413f-9a09-da56af136c57",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17154c8-4f96-439b-b53e-3fa9f6a70e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0d088a-b48d-4d66-a03d-0cb32bb37e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76d5b4-917e-40c7-b195-9b3bd9d14d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc68008-2ec4-40c2-b214-b1e6a1a1583b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195d569-244d-4f69-aa50-7b6cdb28190e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c3d220-9423-46d0-8094-09f85e5d6cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4a1e694-81a6-4799-b9b3-1065bb100a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35486bd3-b041-4a2c-bcb9-f2198dac5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d01ade2b-0b23-47c6-8e35-c755f053d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c57431-97e8-4409-bcd8-c64bb013693e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc66fd7a-7381-4f4f-b845-391a8a22a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab2686c-c4c9-4f00-b0dc-13b911c3fa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc301d-c65f-43b4-869e-1808278157db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6defe6-74a3-4f69-95ea-26474e1da0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2409994-8ff3-452a-a78a-bcfbbb56c1bf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc5224c-c889-41d2-9d92-c073ea72ac87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef781401-c573-455b-a53f-36c14605cafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82e1eac-3f0f-499c-8f5d-7a313978e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef307e5-c46b-4004-bcee-2f687d5edc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab61fd6-155d-4e02-a13c-a9d88ba4b7d3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f2498-e639-434c-9921-669ad977d5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f1eea4-77f5-4d5b-922d-8a7df41ca42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0c48b0-0cae-4832-ab96-2ce57a2f338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdfccb0-eeef-46e4-a98c-edef00c5d779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1d2ccf-cbef-47d8-ad83-fe7013d896a9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6830ad-3ff6-4a92-a2f6-525b51b3ec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d493bc-693c-4556-80a8-561a3e42e2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa190a0-2317-424f-b9ed-deaff5fa5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8de668-8b12-4435-a45d-421fef0c0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444ddb01-42f2-4783-988a-b543b127538e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991360b6-ee3a-4db8-bdec-f57f330cc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc8552f-24c4-41e4-bad5-28e353c1adce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc767c1b-e31f-4796-93f9-4596f153670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d60df62-3d3f-4393-8808-cf331d1ce469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ff87f-4bf8-4e91-ba12-051af4c612b5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8eb4e2-c2ad-4b98-ac9b-58c3fa546e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2022c9c6-0d61-48dd-8b67-d2b6bf2d3e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d6d954-f3a9-4486-a8a3-8077bea8b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9933031b-5ca5-4a68-b759-dd9f113343f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11013a56-c209-4f40-81e9-f20fa30859fc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac47e690-3ae9-4214-9275-28607dc2431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc358c77-1da7-4837-91a9-7999c3198125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1eff1a-b1da-45d8-8e36-3b352f18d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5917098d-b956-4e52-b5b8-0f9a9608a925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c936de4-85c5-4468-817d-d88e6f9d8eaa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e20f0e2-72f6-4ce2-ab8e-be2bb57cecbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631fe270-b9ff-4536-b951-0bd82581da7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0764422a-23f6-4d57-a599-da7d1917dfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "394a09ba-ae20-4636-91f2-9aa8d8ff591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ffcec9-30f0-4691-b0ba-0afb53892523",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7617026-949c-46f6-b733-d4acef09407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b85ec96-373c-4f46-a604-c66c46e9b8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed884c1b-0bf8-4eeb-bdeb-c65a80ee47c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4319c610-ebe5-4782-b4f3-a362ba9e8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2540e510-bfae-4576-a73d-311dded3f023",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2221e9-ab87-4762-8fbd-70f15f32ea34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cd0291-c134-4be8-8435-98cd218578ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce558d3f-4ec2-473a-9c5a-909a8c4dd035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a77b381-1b4d-44d6-aef9-62aee05a8656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aca4cd-8b26-46d9-81be-49cc76c54dfe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5ff8ec-9552-42dc-ac4b-8b8f5772deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73899cb-52da-4eb4-8f12-4147bb43becb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5f63c-9b88-4bf9-a48a-dd30359ea2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5278b015-300e-4d9f-a1ad-a9c3d16f6330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea1ac8-1605-4a53-8db5-aa628339aeb8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce34b8e-bccb-4dcf-9fab-a3d5e553db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af661748-e054-465d-a696-b6983fb44375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c5d0e8-a77a-4dfd-86e9-8f20c0a5d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8406278-72d1-47ae-bf04-d6aae6c95935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad9552c-3a92-4152-b29c-6e4864bb5280",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434042b5-404d-4df3-b465-1cfcc361ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b12b403-ea82-4eb3-844a-f6884c5b4dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b4710a-94cb-4ef7-a8f3-c85336940128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdff2e26-5b4b-4091-a64a-82e501c058a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a815047-a5cf-467c-882a-fc63a9c386af",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d9fa10-bd67-4c6e-adbd-0b4e84fefe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2466e2d-6a12-46f5-b2f2-0fc54c1b6b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2f5873-3f0f-42ef-8aeb-20fbc3d5fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "012e5860-baf8-441a-8a4a-be9dc6d8efd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf97af-8d2e-4a91-bf21-7bfa72b2b7d9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf0196-f29a-45dc-a829-c4a0787c60bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902b5d59-f2df-4391-b54f-e8f8d14aa3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9c0963-e788-4803-bc3f-e03c9578646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1425c82e-d11a-45c9-a085-ed696a2ed705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ed9ed-4c88-49d7-92fe-44e4bd63bdee",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85934abb-c92c-468c-bac4-4ebdb9088605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3f3dfc-a903-4d26-a0ff-6ac9204d2f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0dbbcf-8c36-49ea-811b-594d169e8aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a23e7f-833a-4444-98a3-c3a32d195004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293d377-83ce-42de-a3fd-5005b4611b9b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1037f476-72cb-408b-a753-90b8277eacb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e08e4a5-1153-4ec4-bceb-62db54407312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497eed28-6556-4502-97c0-97270ace6b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1145ff-0226-4255-b4f4-97622a3df252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdddf6a-e979-46e4-84af-014c9d3c2417",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f17e17-1443-4f04-b3c3-9978d4520ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd058b14-ac7c-45e8-912b-0d8d84e151ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9952f9-af75-4a29-ad0e-6cd71fcdd897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b85c61-6a94-4a20-8fb1-7bc44cd56753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b0fff-4754-4983-8862-445c183cc4f4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdce96b-6f6c-4817-a9f3-15a10d2fd339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deae785-ffd6-4833-ae29-21e9dfd8fcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a957914-16ae-48d7-a515-18c36219ac48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84e0c13-769e-4fa7-b08d-3057e93dbc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dbb9fc-bb59-4569-83d3-d6c29809786c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd97e07c-812f-43cf-867c-bba35528dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06146e18-6c47-4700-bf6c-33aaf7ac04a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7e73f1-6013-4d3d-bc1e-4300f3b67e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "129d65e9-cc6d-4be7-98da-e86ea06cba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591aee67-0643-47e5-9ccb-b80d8c9b2ae0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95add92-d1d7-4e57-b4f7-58a3ce9e54ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bc09cc-6c6d-4e97-9397-959c021a5e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bf7880-4d66-4bcb-bde8-4af95e6bf03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6899e8-576d-42bd-ad5f-0309b38aae04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1dbbbc-4459-4d35-ab84-d58a006d0f36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f604cfb9-f307-4675-9adc-1bb414b6547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a4dc9e-9a7f-4e83-8646-52b6292dd6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab73949-b42b-4051-8d35-448d5dd2fb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f66304a7-f89f-452b-bfb4-99029b5b44e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e61348-1a62-4588-a678-e36a2818fe8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234b92f1-a8e3-4717-854b-ec6687bdce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5735f4-af1d-403d-906e-aa3475f9bb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e98cfe-81a8-4367-ab60-7dd60ef00b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37713ef1-4244-456c-a72d-549d81e490f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b841a1d-86db-4f2a-b8ba-3fca10261748",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278db449-fc8b-4fae-9b56-e832cd43beec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cfade6-d6c0-44df-b4ea-7aa0981d67be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8ef04e-10dd-4ce8-ac47-a5a63a4b7b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc65856c-0bbf-43f1-93bb-c007176b3a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c71380-86b3-47b9-8485-9c449485e06a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f364f50f-90a6-4a8d-b4ea-069d9d52cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746f5e37-c73f-4840-936a-47a9055757fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092ea4ef-0cb4-429c-b70c-7c4d7ef1b2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7ece8b-29c2-4554-96b0-51f73f40a2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914de4d4-578b-4d4e-8652-84d30167c6c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e1d5ff-00a9-4fe5-a93b-07d1fc3682f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8a5812-902f-42e3-aad6-8e75a10de5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0c4bf7-a239-4922-a14f-a335a565ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0141e83-10e5-486a-9889-766118e5e721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7507d1e-2df4-40c9-87bc-83030cdbff26",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03abe5d-e07b-48b6-b523-87bc2f7fd6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcb8b62-119b-464a-8d72-539b8e23be7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb377287-2121-49c8-9150-de4ab35addbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9894ff2a-562d-419f-9aba-d44d60352aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd86c98-0af4-4924-8c9c-fdc0e7676da5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3502186-54e9-487d-8ba2-8fbcd8fe128d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9633ef15-8f41-4e22-98c0-bb60cec9da7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92addb95-2dad-4b53-ac55-1314ea024fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8c1ee7-eadb-4916-94ee-84568f451769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0064db90-aad1-4be7-9454-d72938c404f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c48bf45-8e88-4f17-ab37-94f07bcb72db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f62bb9f-2747-4005-8008-09e376e79bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2096e0-c6c0-47db-aca4-2f93b0a8e81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba333061-da25-4059-8758-e78b68b5a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b8a6ee-da2c-452c-97d7-87e9267426cd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e607347-1ea1-4cdc-beae-fd3bf7f1a31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b81c80-940f-471d-a4c3-cc53737476f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb77d6eb-b1e5-4274-b841-97f016506175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c40b2d-8bba-4e95-aec9-38ef87f81073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85741916-f1ac-4d18-84aa-7463c913ffd6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254bc3e1-349d-4bd9-852c-308e35be75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d718cd-ced4-41f0-8a2e-7c6acf1ff6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f466c3b8-f828-4d73-ab49-f71eab154a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "315f2546-7ca3-4635-9773-c50565177c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fc471f-cd6d-4cec-bd61-50ccb8e17725",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebd9926-3967-490e-a0c4-dd3f087787f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fc4f91-bbde-4b40-b21c-d747a951b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd77519-45b3-44a2-8eca-0f272192eb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c94a09-b13e-4628-8a03-173cf5192132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5097871e-751a-4ec9-89f2-80e492a2869a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4844cc9b-6e54-4384-887b-87c773805739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3d9e8a-ba0d-4ce0-81ed-7b9df40f26ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333f0ffe-a304-497c-9a26-c2a88f949830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d51ea3d-6120-41b1-9c46-5b4c1eae2b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d540178c-b34e-494b-93c1-be6cc0dc2c72",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b2829f-aea5-4fdf-a38e-aad6a612b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefeba4e-f8a8-4c9e-bb6c-79e953b3a24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25b51fa-be74-44bb-902d-da89abc23267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aabaf56e-ea61-4681-9a5a-de51f4ba7062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c40a17-e1c6-4dc4-bdae-a89474503a3d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb96946-fd8c-44e5-9358-268d2d42469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85b11ab-8b2c-45c0-b427-d933bdc183b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85133bb2-1c0d-4c14-a275-4e7d1d0d9661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e5d66f-6b43-4da0-8930-23d420187c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2571d763-1d30-4f12-bbe7-b74d1a107961",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7fd5d7-c666-41de-bc5f-01ce1e779cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f145c62a-9a65-4af5-b45d-daf70eabeccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58e3983-9712-4ba9-88f5-f2c0d6db28a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33f30ec-9c4d-4f00-9efb-f88e460dadc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c762a76-1d5b-4172-a6c8-2ef80789d20e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecfc0d9-f4bf-480b-a9ba-da50357ba965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065847fc-f953-41cd-b937-a64dcde572be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609cfda3-5405-4101-aafe-5bb07315debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86f29915-04e1-436d-85d3-86965ec0e9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab843fc2-5280-497a-9394-5ecb1bc2b841",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd5a1e7-034e-4404-bf9c-fcf454cc6835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2399fb-ee3a-443e-9858-452f7e98f65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91155667-03ca-4ac3-9fc2-b6315a624ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8d0ff8-da9e-4f2e-997d-0db02e93875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c22a6f6-ca26-4e0f-b767-cd43ce593577",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d1d471-9f1b-48ed-9b2b-d025adbc4093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bfc9fb-178d-400d-a43c-f8c769b12567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40afa04d-9d5c-4806-a8dc-b0f1b32f7233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18037655-1eeb-4004-b333-97741b5a6914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871616e4-e956-48b1-b69d-88be404caeab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eb60ef-525e-4383-81cd-f9c226c09239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b79515-1ccf-4a0b-82f1-b0a0248b9dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f899b0-f8a6-4a2f-beba-e4b29829f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd45c9f6-69a3-409a-bec8-9fe5985e28ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247d1e6-03aa-4857-8a65-7f51126e87fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b6c0a0-0673-4fd7-a283-7c4d5d01fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1ca53f-d7ab-4484-8d4f-beb219035c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20787cdf-9fd8-4566-a2aa-af1a19df4984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c88f9a-57a0-4306-bf26-6150297a39c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a8f442-edc9-49ad-ada2-26e461368d84",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b351388a-4535-402f-bb0c-143ddc775fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca70612-dfa8-4231-8cb9-f8595f49e91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ffe5b-858a-4d10-acd7-f881e9856816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc551b7a-09d9-4354-ae60-c0c470ad3760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b00b350-121e-474f-9e07-e578c2b7ed79",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2450eb8-60e0-40f9-883a-885bd08a5e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58db98c7-be73-47c3-87d2-5c604f1516f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46da0933-78e7-4c85-8e4a-43fed3e8b8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "746dd844-8625-45e9-850c-a7ac5e2dca3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c27d64e-335d-44f4-af72-d8bd6859c63d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e91562-0be9-4f39-84b7-b44994691ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f903d0-ce48-4a54-b5f5-561501a1230d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bedddfe-944d-40ad-b783-5e09c95ccf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34dbc699-ba7e-4fbd-9a63-c052eb46a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a63686-11bc-429c-b877-156f49cdba3f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa2417d-bf11-4dda-8699-6376e27c429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f832aeff-0fa7-487e-92ec-f69986b93958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bddd05-1312-426c-a5db-54fa031c0760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9da76fd-556e-4917-b41d-520b5da9f3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7df30-0588-41cb-9045-889240d2b108",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f171e1b5-4bd2-45e9-b76f-d3b37799e0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ad7f2d-99b7-48c5-8d6f-d23443982482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561b43f7-8ae0-4390-a8bd-92a5d67db0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb8c41f-b6e0-4bab-a31e-98e76e859533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5215e4-848e-4133-a91b-1b31eb3c384a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d744e554-ec75-4ea5-9a51-3ee5e539e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f0db05-9a01-4636-b927-2003adc4dab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7e1aea-c4a1-4d37-9c81-1c4e858091af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b87e8ab-7c74-463b-b73c-be76917d6eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a689628e-7748-4b79-8fca-47b94e4bbc18",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf07e1cb-0f7e-4bbc-9dbf-91e7dd7ae3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0400fc0-d5d4-48d0-a304-223554bbc152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26399a82-1c1c-452f-b827-df38572ee57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8e9690-aae0-43d7-b3c6-f2050b223f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174fccd7-7210-4978-a6cb-9bc1a6bf15c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8557cf9f-b7ce-420e-8f0d-57e3b6f3a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234cbe56-005a-4b9c-8ff9-c3853f7d9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd96f3a-fea7-4783-83da-eaeeedaa0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16529f77-3140-48b4-9c07-a8a77dbc8c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a5139a-ed3b-492b-9963-a7dd7f06bce8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6b76c-d835-46ee-8cad-a3490c99664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d17857-b4d6-4b02-95be-11d8d7b22aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879603cc-4710-4925-96aa-2a2bb66f7419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d83b73-8e72-42c8-b8b7-0a9492d4b9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b16d03-955a-4d68-a2cb-9a80721a0754",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca598ba-dce4-451d-a88f-7eba9849fe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1317368-9999-4e81-8e5d-3e6b408ed7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf68dc9b-f99a-448b-b50b-5ad2893a3168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "321e14d2-7091-4b5d-b150-5c765e3bd70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba6c1f0-0d94-4886-855b-4e92cd126fae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7628fc3-633a-4ef2-8651-9a8f4fb45d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5239d024-8e8f-403a-ae72-ddeb2b505bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78212380-5c79-4439-b10a-4e4c7a71eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af80ba2-cd0c-4013-bfcf-9d077a146071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf7cf2a-13c2-4a64-b4b2-bcbe6c89ebd6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101f6190-870e-45a2-bf4d-9ff21ad39e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec3ab26-3ece-40d3-ae1f-b587f8ef9526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27495c33-3aa4-43f1-b5b9-45fde10f052e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f660f1-82a3-45f9-b990-4b9cba01ca10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be412150-ee42-416b-a921-0f43c200a32b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c3e4f8-db5f-47cd-90ec-014efcddb2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659c7f66-2d2b-41c1-a07b-6481e0ed8725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c154f1a9-8f40-4f20-8654-cf4677b2c095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b93cc1-15e8-422e-982b-79ed82d9e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2aa3f7-ae7c-4fb0-b24f-15d161ce4aa8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd41f3e0-bfbc-4254-93ea-69403b97f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72362f6f-fe90-44c5-8beb-fe7097501c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d0f931-3636-47b0-b405-c90eb55de95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0de695-0ec0-4076-9c04-0ff41835cf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcc8f02-7c75-4ec9-8e97-2ede8b862969",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef67fba-929b-43b9-aff9-01b61e9b4a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55db48c1-595f-41c0-84d3-e8da8adc9355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f289b5a-3f86-4d5b-a440-8239ab10d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8d9f90-047c-4f3c-b1f1-114636d1148a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab33570b-9643-4d3b-9338-908894ffc3ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a5441d5-354b-4c97-8b0d-969d24bf3cc9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1630529-cfd2-4a0a-8b49-b1ae202486a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a2fab23-69a2-49c7-a005-a62272c77285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64bcd4b-d982-4e8c-8ac7-8245f89d7462",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b5823097-d83e-4c41-a20a-cf6cedb27cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cda92e-cdda-4954-9e7e-6cf1d1cb778a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4122f78-7b5d-49cc-9197-f880a090ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "873649f5-fd3d-44b2-ac28-af6af2a10e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470591ff-c2be-4745-b8a0-f2d12fd4a20f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5567f8ed-81d2-48a7-a5a0-3f3629d22682"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6fb60d-efba-405e-b3d2-ef7337000974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dad086e-fccb-4c87-aaa9-70b041b68ee8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7454ea4e-2e61-4c13-8378-baf65d122de0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1362d67-5b82-4069-9c92-f51e5fe6e069"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14fb2879-a9c5-4e44-9d59-03a7e82a2dce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfa1f1b0-c39c-49f7-931e-c372ba00d8fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e532a2e7-72ef-4336-9b76-dd479b8762d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c51df08-ea2b-4ba8-99d4-988ff5a72a85"
                }
              }
            ]
          },
          {
            "id": "14d17df4-3fd1-4e54-b277-f4e28de330f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6482a0b1-0ba9-4ce5-98a4-a35ede57eddc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c8e096-3273-4d71-8c48-cf93706e036c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2570f2f5-80f4-42cc-b2c5-dd728b9109ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b158c38c-068c-498f-b23b-bcae6c3cb2b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc3ea68e-aae1-45f2-a205-9a80b07e982a"
                    }
                  }
                ]
              },
              {
                "id": "6845f18a-55dc-423b-931c-f73a3beeb120",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c30e1d8-9c8b-4b61-ae77-2ab3e8867f6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee4b3907-d563-40a4-b2c8-20b13521a1c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aca0dfc-41c6-44ed-afbb-5ed9c4053c57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d2ea7e7-9676-426c-b2fe-d17216e5f663"
                    }
                  }
                ]
              },
              {
                "id": "fa1e336f-bbb4-47b0-a7b7-d65d8b4f8b3f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6017796-69b9-44e1-b1ab-45dad8d75f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae919fa3-e5d5-452f-ac4e-312cea6d73f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a041eafa-64d7-4536-a581-b10cf8b9e4ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb523788-ddf9-4439-9f80-112259a1dfc6"
                    }
                  }
                ]
              },
              {
                "id": "28dfe1f3-4158-4a88-93de-75ded721b92a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24804f5d-5c76-4a97-a74c-5b9e55654893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cea9282-1dbc-4f3c-80d3-a9a11903a346"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86444755-4ed3-4778-9708-6ba042d8915a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c46466d-1571-4507-943c-84453ff075d1"
                    }
                  }
                ]
              },
              {
                "id": "c3deca98-408b-4680-aacb-5e87f06f4a26",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc8d01ac-ded4-45b0-924a-1150c1dcbd55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcf133d1-d154-44b5-b77d-f21c91688481"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b523bfc-a402-443e-95b3-558ec32bd3fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cbf2075b-ccd6-4459-8468-59bde183610f"
                    }
                  }
                ]
              },
              {
                "id": "55d856ee-7a63-471c-9a1a-19506e55f7f5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f252650-15c7-4983-baee-5469ba941837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61c7fab2-8070-4b5a-8242-e2c8cff2676d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081628b4-649c-4cbc-a718-5f5c96e4afb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "daeb2263-f1a5-487b-8c6b-579ecc5f1c80"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3cff415-7872-4d08-915b-a02bbbb1336f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fcf0d95-f4d8-47c9-8d60-e83360e37b21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0345d83-614b-4e3e-9953-fc4d71096133",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a79fdb4-c95b-422c-b7b8-9b8140f4b46a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0116839-073f-4057-9986-7f0da220ff70",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8bcd4c8-47f4-4e89-a395-f898644162e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c99d3d71-222e-40d9-a6ac-b93f07a29702",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d1329d0-8abf-45b5-8ec8-b18574bd369c"
            }
          }
        ]
      },
      {
        "id": "acfda2c4-115b-4ee5-9123-1c38d321d166",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4715ea7d-70e3-4b46-ace4-8e471f039f76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82082bf0-f972-4908-a93e-2de9799822a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f209bed-51e8-4323-914a-83463f939181",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e9e93-ac12-4cb8-a57d-7dcb6df2cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae89c8ab-5f5e-4a79-a8c2-53fb38603146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b50cdc-a147-48e9-a1b7-528ea7cc1b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83501f7-19ad-4957-a9e8-7f14924898a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e115d5ad-40ce-46a0-8144-40f31b0c51c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066ca0d0-0d5e-4196-8077-256db5b5d1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33043155-24a6-4b4b-b3d3-25f4baf93e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9e0cd7-9a75-47af-9555-0d8015285120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "531b0cc4-f58e-48e9-9803-cc3221988e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005e1267-f55d-4389-a07a-27c31c2b0761",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af24e1dc-5c54-49ce-8469-414f3c31a25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc6f3fb-3e64-4656-9d4f-3ab4b41fe823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97de828b-9ab6-4c6c-9952-f942ead8d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0898d6f7-6832-418f-bcbc-97c7017fb880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed801e1-18e8-4271-990e-dcabc0fb8f39",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5cd127-a177-4cb1-93e5-78f5834c59f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ae72a7-9a37-4c62-aef6-06197f757758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa13406-790c-4c71-a2e0-85aaf34ef398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01967d0-9da7-4fb7-9e23-6fb765facd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850f0673-5372-444b-8762-fcc45078717d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7589d-f3b7-4bbc-abcb-30829eb2059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7120bf95-bd3f-4938-a94d-f1cf1ececacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637c215-4642-4a6b-bab4-4797085ead23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ac7f49-5a5a-4b8d-82f0-6960e43d666c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ebd282-1b57-4e67-85c6-7e32a8ba5faa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08330f9-0147-4bfe-9e55-8600f969cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce4990b-65ae-4370-9b45-075c85d34260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee0082-7c11-4645-a496-2bf2693cd217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7c3fa8-650e-4662-98cd-e1a300fdffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16317100-bc02-47fa-8fe6-fa42d6539846",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9412edff-6019-4ed2-bbbf-e2348effc116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f6947c-6246-4f96-88c4-c1fd26c92bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e940e3-dfa5-44a3-ab81-3809a7817cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb33d30-df01-40cd-a106-2c1123223b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2d14a2-4aae-4f00-bb3d-2f03e4503464",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27518365-d986-4795-a408-a55d249c283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a02593f-566f-4f0b-8d25-820ca916eb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b56f0-7e4a-4d2f-9f6e-ee352b464242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd6c3c4-5208-47d4-ac9d-88f80ade563c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80731585-7b7f-4285-ad4d-5d0512b0642b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cfe66b-c449-4c87-b01f-cf36451e8f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e0b582-5b0b-49d5-9756-19171cdbb413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54be6a65-ce16-4996-8096-727b22d267b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06503d4c-8c29-48bb-8b95-a6040eb76435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48c7641-b1ac-4836-a3ca-c94e9046305b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56698f74-2b4b-47b2-8ace-be84adb3dfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc08074b-08a4-48d7-affd-9fec219b3874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52360d7-49d9-4291-a65a-4ca5b0fbe387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "440d1f71-39a2-4e81-933a-c96ea9a4e679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef594d53-2f8d-4120-bafe-5eee2e81cc00",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424ab5c0-967f-4198-8437-61fc3ac3743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483e8c05-a2f9-42a5-b302-21339fc117ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8018f25-3a52-4830-942a-5e4e9ed486ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3b70856a-a3ea-4d04-9051-e0a425ca45e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5965df4-bf8c-4e68-b25c-adcb37fb5edb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dec5401-8637-46e3-a78d-ab48ef045dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3e542b-fe2c-4d31-9c20-9e3c2129fa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ea7fbf-faf4-445f-8310-23bb55461257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6aca399e-7f97-4e8d-b94a-10c9612e4969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7696698-f778-4d19-ac34-21d17fe6119c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be512e0-09ba-4600-9f31-8f7f7663b488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6980f8cf-67ab-4264-9f78-29df81171c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07264c74-89be-48db-afe5-a044df60d8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb5412-2b79-435d-a354-47833c5e1f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb89c15-1142-406a-9ca8-88347271ad84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021443c-7bfb-4d4d-b299-465452bf3012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3e0005-3716-4481-9c69-7fbcc844c7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6f67b-cce9-449a-8583-803f5277e6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33dd9653-7497-4cc4-bc98-f499d650acf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908be3e2-67b1-4e85-a949-7d2bc01f2e82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf324b6-a6f1-4ce9-8dd1-8ba833f743ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2ca530-5bee-46a5-9d28-32c88f4be532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b14787-ae82-4006-a226-0371d7d41448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a899d1-e179-4d4e-bb9d-bda48cb85413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d4d31-2dca-458f-a7f9-3a9170c07692",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c6cbf-2038-49e7-970e-52ff12b38518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2128c6-4451-45d9-9caa-addfaf13fc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8df24e7-5b6e-43c7-82de-a10f12479ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "410daf10-fcb5-411e-8b87-48563f4c0519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f0aa05-0a91-4c93-bd96-29ae81e76f65",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0db8b3-ac8b-46e8-b054-d2e4a2f6990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f929b9-dd1c-4524-b0f4-cd122667bf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3df2c42-606c-47b7-9763-eb5aa43d016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d9ef46-de84-47dd-9b38-014fe43d2372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a7300-6cf9-4d91-be8f-e7ae803856e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353a3ed4-b97b-4046-a25a-ce9220c52fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b365c90f-1443-4f85-8c0a-db9b32be4a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be68000f-5d30-460f-abf1-18807011f836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10bca36c-5126-4dcb-b1a0-22d4c2be1024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c072e371-8f47-4799-a449-88c3fb777652",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d7b545-1902-4af4-8607-bd7a8f27c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c19c64c-7981-4daa-9a1b-f4b0ba79abfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac0a61-98ff-4bd7-ae45-44f2ce2fa3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae3dc35-130f-467e-9d73-80029089b0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ca8b2-4fd8-445f-a9d8-6dcb73fd036e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28316c0-dfa0-4793-bed9-17e8884dde79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22297aa1-c9a1-4ca3-912e-919811311cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7eb845-f197-4283-af6d-459ccee5ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad20100f-8355-4ebb-a320-458ef86d0872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff90276-7dae-4a4c-8e71-2cbdd596a508",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171b3fcc-e0fa-4181-b852-dcd4e484d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6539fe-9d4c-4154-833b-7e1ffc9e9dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf98e0c2-6edb-4332-9ee3-35c0a06527e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98dc8db2-8216-4195-a703-67afd6ce86ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0877d7d-b4da-4c37-a127-2262c25d2e47",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90e5ca-cea7-4fd0-9d61-8af33c883b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc19d10b-5411-4427-bcc8-c4dbd1e97c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0f21f3-7cb6-4e75-a9f5-6afd38d1753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6070aad6-4bf8-4cca-9555-c9ecaf771939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12153a6c-a887-4544-8da9-0d54ac1e1287",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490fb53a-e166-490c-bb22-6d75fe471dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c290ce-a785-4ff5-ab01-5014b258b3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e8cc3d-92cc-49d0-bade-c634c5ea99fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845aaf7f-062b-44bd-a990-25cbbf311a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f14aa01-47bd-4ae3-9596-8ff4e8ede749",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3358c356-65f7-48c4-b4ac-0e75ecb15b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d80630-3904-42eb-a7ff-84a1060844c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0f9a38-9904-4d6d-927e-ee279d37de6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde3921a-ca31-4e5f-ac0d-fdd97e302a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9ed730-d454-457c-8da9-8bdef4388d88",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2122a67-2c35-4257-a635-ab40efc60b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ae6b48-a6cf-46c6-9251-8a41eb98a746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cb01e2-e11d-4882-bb70-e1f894fba502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea85dd35-b92a-4024-b6f4-fdf8b07d8825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbcee0e-9a35-4bdb-a458-309dbcdba0c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685fde78-9173-4262-854d-f35392e508ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec7316c-9702-40cf-b7d6-b4909cd97edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab571f6-26f0-4c42-a52e-553187f8ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1c9734-8207-4011-bf2e-f89bae082f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0d4852-445d-4280-85af-631b981ceb7b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8f1f0d-16d1-41f8-9470-1ef0694e6fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237d29cf-d556-45f3-918e-b42fe6523a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d305b-dbea-4736-a7e1-c1c4a621daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a58a974-02d4-4858-88ce-1bb89203aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d913ac6c-9303-4969-b5d8-95f020811965",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e577b-5ba4-4912-aa17-ce79e6817899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906d8eef-379b-4b5b-9909-4e7fa75b864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ad09e3-a6b3-463b-9c4d-846b59ce363f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b75111-d266-41b2-a2eb-52c852eb7a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09558807-affb-43e3-8ecb-c38cf2dbcc22",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2ce31e-aadd-41a8-955b-6f0b256207dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cab5971-8033-4b66-b4aa-5c431917b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1307c32b-e262-4f4d-802e-6a7ebddebdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f915705d-7534-406b-b19a-989e8ec2bccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb78f0e-4056-4ec4-a3ba-a169bf57c529",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa2802-3452-4c5b-8f04-66c530becedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d5e83d-af34-4434-9df5-cb1853889c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021778cd-3f96-4cdb-84c0-71b0f8a26696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd69ad20-982d-4ae1-960a-517460c7f503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a1a06b-5b8a-47a2-8ce1-2092d0a2d892",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80614d3-5fd7-426e-98bb-1930b3d80314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dbbf56-cb24-4aa9-9823-972bdd659d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c338de7-bc99-4aa7-bb9a-76583ac81999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23719a41-82d3-4bd6-b9ce-9e4f686896d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2e8452-36e4-424a-8099-018b2182a9e9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc97986-90c0-44b2-871c-17cc0e8d85e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7638d03-d5f6-4387-89d2-c526b449ae17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea8f7c9-d423-4a3b-a62c-abfdb22f8a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee5b624-4913-4062-ac0d-a55c3e317879"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d1e1477-ee58-408d-8492-902f0d57a262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1131a3b1-e1ca-4b20-85e3-056f36d7ada2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a091f2-7c95-4d78-9241-72963403a3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aee8f29-c50c-46a9-b651-15284fdd8b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a512a1d5-52a3-40ec-a8fd-7f9bb760227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5825de6-5618-45cd-9692-845770699234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb1e356-0eda-48a2-9659-a58a7b8d0180",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91a4f4d-050f-4a3a-9342-176492a89d7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ed0bc3eb-ca9f-4353-8857-6fe316486cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887ee571-b6ab-4686-bc39-c2370117e1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b49c9a42-7152-47be-9d7d-f94f62bab116"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26272ef4-8498-4083-8554-83488424d8ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcb84ffe-9422-4090-beca-ef1949bd5280"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4278e314-a785-4e62-a2b7-cfafe71938fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e022bb6a-7e5c-45a4-911a-4ba13fb8ceb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "410b91ab-be4f-416b-b440-42090e27f242",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9bd280f-a767-4952-ba4c-8ebec51e2172"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d58a5af0-abf4-452b-8a33-89a78c6d1f66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb2f1112-4d01-42f7-86f3-ea4ca4c16839"
            }
          }
        ]
      },
      {
        "id": "9add5a6e-e27e-4c17-af09-c49a166200f3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aa88d2cd-0bfd-4339-a9aa-ac479e216452",
            "name": "Negative Testing",
            "item": [
              {
                "id": "004ec8a7-c715-4879-acbd-55f12e1312ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "22b39292-cc09-4953-8f27-c486bdb05e27",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd9eba-1aec-4168-9807-27d9f391f80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3158b244-ccb1-4cdb-aa61-186de2f78470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a72fd-e894-461b-9d25-e525c5c0720e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe733d-4b61-44b3-841b-9cf5f324fd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f4175c-2f2f-467c-91c1-67071de9be43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e438448-dae6-49ac-8f04-b13c2d9217af",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ec2b79-882e-4508-8d59-0997608eaef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a80d5b-a614-4a4c-9a0f-0c2d10760842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39aa95a-ae0c-4077-a4fe-080e161f2718",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e870f29b-db4c-4acb-b722-1cc476f27895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b640428f-4ec1-4d72-ada9-642a70207da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8601ef9a-a24f-4a22-8c69-6aa40ff99158",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0029606e-1ab2-49b2-9495-2a531a4f6dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f0b1b5-ecac-4052-aa2d-d7c358bb06e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07da1112-283f-4e82-8cdb-0575bd184f95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ab6b3-c764-4d7f-891a-bda4a4dd9072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c814b1de-2693-442a-a545-3abd9b13855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59136af0-b960-41fb-9655-a80b50f5795a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22feaca4-c198-4ad5-829d-5f348d0979bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2baca8-a275-41e2-a61f-ea87a660ecec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d0a03e-ff5a-4992-a8b4-13525d497523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade49b71-3566-41d7-acff-ff5fd3beb215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b928b1f-9c32-4e0c-b930-34a109570e8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b4d04a-8dd2-43f6-a863-937472ba4d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566bb3b5-9e0a-46cc-955a-9fd47dd3d5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ce8d12-ffd1-4ca0-9bd0-2f949b83eda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326caa13-4245-4e49-8552-7619e4938f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc4181-2234-4b36-bb22-da174d278a68",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6019e37d-9d8f-465a-81cd-163d5b8fe8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f166fa5-dd25-4d41-b8b0-ed398fdb23d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c0675-fbc8-49e1-9c7d-ce8ce963463c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7510f869-54fa-46e9-9ff8-be6d5d0ebd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ed327a-8e20-4b5f-94d8-612f836cb8cf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aea468-c959-4c42-b0a3-06c766065449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79321d6b-0532-410e-8780-f98ec506f112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a30f3c-85d3-472c-8694-b14c788abdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c62c4f-c1fa-48f6-905d-379260d2aa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ada7489-223b-4ac1-98c9-a4df3332d3c7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a725e5-b791-40da-967a-4de623646ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0205c78a-0fbc-4ae8-86c5-7edfefd3d1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0facbc-9ca3-433c-b3dd-330dc9ecbdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90551628-1aa6-4ca3-a229-00784b5c0201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d668d9-86c1-426e-a63e-3664aa477b3f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb833a19-558f-44de-9d2e-d4495fde4bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56b64e2-1850-4b6b-93cd-682a5c019069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067eb4b6-6a77-49a8-b0f4-47fb220cff84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04863d68-0085-471d-afe8-1769ee9063e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dbd0b4-1118-44ab-ace3-917da3d131c7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af67ad88-f6bc-4cfc-a3ec-52d96499ad49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4addeb-cca7-49e9-ab05-72deb0217bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e84c6bb-0fd5-4b65-a9a7-4fa18160fa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab61c118-d74f-4638-8465-3a6fd3e29779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d4923b-9a2e-4433-b9ad-c41266883990",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df93364-4ef3-443a-9236-1d1cf1e12361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfa02fe-dbeb-411a-af17-a78aafca6d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b62b153-c6b5-4c15-8159-50fcb261643e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b153f644-34f6-46cb-beab-415c15dcf767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6470135-36af-4def-b33d-b18dcaf63d56",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaca6c0-edfc-4896-962c-1e33f3cc09e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4951485b-9a6d-4062-91b1-33ed61536522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e718a-234d-4505-b924-2952496150cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d0eaa1-e716-4dd4-b5f2-7feff4d2c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f391d22-754e-4dd3-acfe-8738c4438a04",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164c93ec-d242-4359-9813-b5335273ec49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ee6018-b607-4842-aeeb-a0c8dc2175b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378e20ef-e6fe-4454-bf8e-2f411d80460b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de0090d-9400-4ac2-b2fc-1fcb8fcf01b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1dc947-f15e-44b7-8a73-0edfcfba3009",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b177a-de1b-486b-ab94-d5a92e0fcf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8b42f2-8bba-44f4-8dda-f3e8bdcb2dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8a3d08-6600-48a1-96d4-cb22a171655d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1063e1-0470-4b65-bfa6-21cba6d8dda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caa6605-57ea-4418-a542-0ad85319c667",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f5b57-5c3f-484f-a1ba-221980ea4850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146961e2-ac17-45a9-a1a5-3d5110e005a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2feb1eb-3233-436e-bbe9-6058c884f47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bfa842-6707-459f-aa8f-7ded140a9db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779d6820-8ea0-457c-b5bb-06485becbee7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42621b6d-f16e-437c-9974-d8de7af5bdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9ae1f3-97a4-43a9-a713-ee6381c83a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651d5884-1c5b-4850-9149-4b59103e82d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e417586-282c-401e-b15d-0d4be96f21c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2ba047-8f13-427f-9b29-78463d34f909",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd70a38-9d95-4e3f-b587-6e89e8958868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ca6287-d693-4ec7-9e1a-0a799de9d37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe94b32-e784-44f1-8712-f2eaccdfbe93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b829961f-58ae-4433-bfee-2b71e032fbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ead6f6-7f68-4d22-a5c8-cbccdb0aaf27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f65059a-dd9d-474a-90b7-a37f6dc5d070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496ed598-bda7-4386-b6d6-255e1d1a85d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af1ba7-9d2f-4653-881c-0d26986d4c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e043606-0959-47c5-b501-63df176f9ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d410909-c752-44b2-9239-0bd5fdbb884c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224a77a1-5533-4a68-84f4-414c21e8f04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7947f9b-c706-439e-a018-71e97640ff86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a3a7d6-06ff-4f05-9e2c-d0ee4a6627e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51580169-f74e-4f23-a303-d725101077e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd51728-2010-4afc-9203-8ba1f06e513a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317bcaac-9e62-4324-acaa-b80e8127204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2221c41b-eaf5-4777-9f92-8a90e399cb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03d58c3-dd80-477f-9f36-433e6ffae4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bab587-ceb6-4296-b93b-0fe7457d198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10683abd-bada-4ca2-9b23-cf9a5698f77d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba000f82-d874-4218-b69e-06bd091daaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95562ce4-2f8f-453e-a23e-86051572bcdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1334642-4698-40f2-b2ef-50cc0bde3ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aaf2ce-3ff3-4f1b-8b5e-74c15290c93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afa424b-c603-42ed-b535-9169b7cc126c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fdb81c-b839-46fc-93f2-9a95d9aef159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f064d638-019c-444d-98c9-b908f071fd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5954e3-c1cc-4423-9f91-e3079980ce48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7150758f-1221-438e-87de-5b88930cbf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa97a8a-433c-4e95-9d87-0f35879bbc32",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfe03fa-c681-4fe5-8570-fe390cf6750a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09106e6-da04-4bc2-b335-ef51253474fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38840340-91ac-42f8-bf40-21f2c42627e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7223903a-d0ac-4952-a9b5-f5744db5d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b950c4-c291-4a87-ac76-9d2a87086f86",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8513568-fe9f-47a4-864f-52a3f40667ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3375abd6-7f3a-4708-b2f9-1b9358b05432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4649511d-e036-462f-aa67-b6125ba2a35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a7d7c5-5d59-41e5-ace9-a42bf3bd6f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6417f607-9462-435d-926e-ada7e96267a2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a8328d-1a5a-4414-b63c-a687b5106e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659d3091-bb06-4247-ba05-76ade5a23208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f40710-7802-4909-a4d9-fcd9142ff6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9137294-f699-4a3a-baad-84cf835c0429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4270b14-d481-457f-b887-d37be79b2375",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bcbd0b-5e88-4310-af84-0fc789b6bb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d5a4d8-82be-4fde-a012-279742452868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f351e0a4-695f-4f3f-ad90-3cdd39b3dd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6769f4-f4da-440a-9e6f-80b7191290e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8702a938-6b01-4864-8651-e222a493f6b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12035170-1256-43b8-a1c6-8a9c22f48f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84b0d61-bc14-46b7-8fd2-92e265f7e9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d21de32-8cee-4ab0-bf15-c9637473e280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f901b161-94e3-41e6-98d5-b47416973b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf81c5d-b54c-4434-8763-996584767857",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b773f3-a77e-4342-8390-9123fab47dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15d6f4d-663f-4d09-a2f6-cc7062597421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfdb0cd-4822-4284-870a-c872bbec2cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be15f26d-82cd-4837-a0b1-05c25d275d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead9c3e5-0987-46d2-9fd1-b614c5f52948",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc76c5b-31b4-4aa6-809f-fbfff40f36cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31ca816-f383-4f05-876f-23837690248c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ed1cd-5166-4bc1-a284-9ebcb76e6519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1876762e-7842-4f84-95fb-16b7d6897f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d6dbd3-ece9-42f7-85e7-dfdd02e56e23",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1138da8-395f-4efd-9cb1-70bec6acf78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a246dcf-21af-4131-88db-34e011368f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abce0264-6df2-40c5-aa3b-e7d1a6e36e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e73093c-c414-4a14-810a-443ec4645a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fd7057-d021-49de-9c5b-578ae693b6a2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc13988d-3854-4d38-b205-4b02dc789b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b41233-3e90-4d52-b8fa-e1aa8563d2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071095dc-3726-4084-a91e-365524680565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e643a0-eb6e-4535-a209-df07a1a75629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c693bc-d236-43db-a9bd-2ddd4e73d3a9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858806a1-61ac-4e76-926c-d518c87a66a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e876044c-ba18-4b6f-a03f-3450bcd37eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9685e4e-b4f2-4d65-9787-bf15de20f627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b80c24-6661-4a72-bb94-b69f4a43d62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af7e05c-1544-4c8d-ae59-bfc6a931de8d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81c127-c315-4b25-8f77-d63d57f5e195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805050ca-c3a5-454c-9fea-d29f799b613a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ca1ea2-cfb5-4dde-962c-3ab5b013d6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7df2224-e321-49a8-b754-06fe73fc4c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e2fd45-67da-46ea-8ea5-fb58a9f89b35",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df66175d-3c14-491d-8061-2c1802a088f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515f7de8-b8c8-4989-8d0a-ea45e5c0055c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18a020-9478-4a0e-8d86-14d68ec0cd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53cd6b9-6b51-4ae5-8c90-ea921f83e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21daa886-d677-435d-a977-cddab3d23ced",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed3fa2-b072-4700-a43b-b7340c19b671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cabcf1-ec71-4c44-bf3b-e8a0ec2cc39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed206c3b-51d3-4868-bcc9-d07cec4ce25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f616c6-ce48-4565-9daa-5bd6af4923f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91352fe-7016-4dd9-a777-e356f0355451",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8737dfb4-fd1b-4e09-a2df-6d2bd2499b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fdfc4a-5f9b-457a-85c1-c2f88e88a927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff92770-5be3-4ec8-99f8-83899a24103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892b1334-6e35-4210-8709-704a33d864af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632c1142-8b4b-44f2-9751-2ed1b391591a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe49bd4-94e4-402c-8ee9-89493065afbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63342747-b263-46ef-ae44-ec536b6ddbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff87b1b8-9391-447d-b088-544163e30b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fdaeec-ca8e-4fdc-82b7-e402f38bfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0c83e3-bc80-4028-aedc-bd7b06826f06",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e18a2-0547-4b39-9aac-ad6ce46a8d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc5fb06-398c-49c7-93a0-99da3c51233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b0d37b-956c-412e-b29f-01b83646fc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8685f684-6b5a-4184-9ec9-0b2385543866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53f961e-d8b2-4e04-aee6-6c30a52a0c50",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb831834-83fa-4ccf-826e-0a52f5a4f30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a04c7ae-4a66-49b9-9c50-ee5c1405e0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4795ca7e-9a73-41c2-89bd-dd27da68e24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7503b4-0940-4751-ad48-60bc5d2ac4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e093842-e161-49c5-ab4c-b182951cde92",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3475a6-6696-4abc-ac19-d1ca8ec5523e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24a0024-8561-4c9e-9b43-d695f75f2287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae88688-1ef8-427d-85d7-79d098b82660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c21f2ea-c600-41b2-91ed-8518f6150751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46166b3d-364e-48ab-84c8-f69b26d45a0a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66019f45-dc6d-49cc-9b30-71e097c2c19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab2d5eb-198c-4ebf-b3fc-792edd614d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2009f07d-364f-4190-8f1c-6f79970ab8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cde296e-3453-4e80-923a-8fed9737350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3cc6b-0542-4089-8dab-0ec5aac45ce2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0072fb-21b2-437a-aa1f-7b82d9064c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90b9a98-7f7c-495f-a0a7-cdc181dbded9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc819f1-fa4e-4128-94fa-7a2e01a24495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf5ee88-37c6-453b-b6b4-289e2bb6bada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83184e59-bd4f-4a07-b663-f8ff6f479dfa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6832f5-b5a1-4f51-90f8-2b517b1a8504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db2e3ff-4848-49e5-88a0-0478596c285c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9f6d91-e02f-4975-9690-4d6eb62f26f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b27b91-8510-4b97-be63-69f4e2714c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13648590-17f7-4653-a28f-2337a42e4f9d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82570328-9c25-41e9-bd3f-c89e8ebc2a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dfbfca-8ba9-4e0e-8536-9595b9260b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f91936-ed3a-4e15-8b36-13661e67d18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b260c15-bdf7-4527-a9fd-869e032e26ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2466d1-46e2-421f-bb4a-da5e7b229a0a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f46b6e-d840-4c18-8a30-9a05ea0028e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886d74d5-9351-49f4-8b9b-d96e8e6a13a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03d47f7-b732-4df9-9146-82a4bfc88179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dda7273-67eb-4cb3-b039-60e5b141adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c92837f-b42a-4c5f-a868-d80547844dd9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ddd7d7-ef32-4828-b91b-295c08515c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03355d05-a195-413a-8f8c-fb1ef6601e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17d88bc-7f1f-4e78-aa50-985bb06aaef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3734bd-ad94-456c-ad48-2579ff7febc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdd7018-96f8-48fc-be28-289de56f26af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc79d16c-a34d-4b8d-a2b2-c5c9ea06add8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b6a5a-0f51-4b02-a6da-3a182d408249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e48091-2b0e-4b84-b716-a72c3d618198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed64b08-9135-47c8-8544-4733db0089c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce51000-5238-49b4-bcb0-5a11420fb8df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2025b223-5d1b-41d3-9e3b-2cb6a2bb3efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7682eeb0-3c0f-4294-9853-70d997d1a1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23efcacb-534f-40bb-942e-99dc4f35b208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d5fbc0-78e3-4d17-bdd5-3b26cc8b94bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97b6433-fd5f-439a-a30f-13e8ec9888c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f97fb60-b597-4b8f-870b-e047de262a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89fd4f6-647f-4d09-bcb3-2d2400bb0e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23835f92-671b-45dc-acf0-631411d377e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fa1dc1-71b7-4987-a559-35b15bb5a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea67ee3-5a4b-49a9-87e9-abb010532b45",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe61bca-d525-47ab-8756-45a0e309adcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8a800c-d414-4def-b0c2-fee5767949e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49041522-627c-42fd-81d4-efc7d423133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befa6f4a-c983-445a-ab1d-8178d1b73b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f0fdb4-ab7f-4345-b831-d027538015b5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f494d5ea-e945-48cb-ac0e-d4c9e5a571f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2b1710-6079-449c-952f-1a48e9c8b40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07050af3-574d-4f0b-882f-5e77e602c955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df60aa56-d313-4236-bf58-82180ec639e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7a4af2-13ba-4d04-875e-b0395dee3cfd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4ceb40-30f1-4b04-9764-6ea5802ce796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44819b5-73dd-490c-b17c-72179f100ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4413ccea-698f-40b0-bb28-fed07e0afbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f978a9f3-7c08-46c6-9ecb-1dfe18fad0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2de424-2d13-42e3-808c-7b7a51efeca7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb403c6-1be1-4fe3-8816-e7870d7bcac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f7f1cf-7d19-4f32-af98-9d6a21858bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4bb059-66a9-4ac3-9846-a1de37322e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0816aa96-6ddb-4d46-a7ac-132e38c53942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f9241-643a-4859-8e69-4ddea9e1286c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8b992a-4feb-436f-99a9-3aa5b1c80f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7cc04a-32d1-40cc-a4d3-ed8a23b8503f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4be58-da58-4349-ac58-eae44950f1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4118d69-21b8-489b-92a7-05ac96240034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a873c5-570f-4431-870d-8a0fbc8e99bd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f560e996-b13e-4f52-b707-d15fbf06e6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1419ea3d-d555-41a7-bb35-ce9015f3f96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305cb975-abbd-4804-b82b-fa4a7ee1ea31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b20071-af11-47ef-80b9-9f96cb83c51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0d301-589c-49a8-bf5d-01053887bb88",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e4115-a800-45d1-8822-ad982cf003bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62bf4d8-efa9-4f87-b080-76b9c64c2c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a27011-2943-4368-8f24-1ef8dac578f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69b79ad-e3fd-4716-b534-e08b04ee8f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ae3aa-1112-41ee-ae07-05af14549943",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88204a87-7a0e-4503-a3af-2a134a5044d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8dfa44-2063-4792-a78a-50bcbe39e6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa39006-a0cc-459f-9430-437c2fd3e270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d57a42-423c-4b4e-8c8a-f033154134ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb8824f-8933-40c8-824c-98e7ce8ef189",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c8855-fb90-4be1-bf43-5f5c279be7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5840404a-48c0-4c21-acbf-2ecb45813d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49042923-fcb7-4dee-bab0-35aeac2ae1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a299c953-9bb7-4b7e-93fe-b06dfc8d9d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a914f0-fd1b-4a32-bf16-23ae37a09146",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b1a022-f0a4-44f0-811e-b2bee78ec9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdc0f3a-848a-444a-b445-e1c1372566cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe84bd7-bb89-4996-b263-4462f2f7fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72830ded-3066-4a95-b4bd-e1033fa169c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1eb04c-4397-4bd6-b35b-dbf9e2eac1d9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1198b2-8a06-46d2-a995-79d630a30c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2170e01-5e17-4eeb-bcc0-fdcda7c5015e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3790c88-07c4-4af7-8045-87098b3aabd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33482fc-53b8-4027-bbb4-21b1538d9b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f645dc6a-18f7-411c-aaa5-a00969b7d415",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce2f56-608d-4146-9b09-bda3cb283767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc8da68-c303-4c65-8b0b-91f6bd17f547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2ebac8-6738-4b91-bc26-d6d0ea84246a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764490cf-3ab4-45bc-ab75-88eaa2d193bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121f5099-d972-4e6a-a702-48b7cf595764",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70677bd8-c991-43af-aecd-b1f63b82bab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255c1c74-2d5f-4608-b7c0-26b835511cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c13d71-551f-460b-9140-e11fa3a3210f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefd1695-ce2f-4ac6-b09f-79aaedb44482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9340f197-228f-4e09-94ac-4bba2f77ac04",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894391f5-2ce1-4804-8b25-fa1759c47905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a913b191-a685-4503-a567-c1e176c247af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b4642f-6d52-4621-b87d-43054e2ba09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32efed2f-1f2c-4ad4-b545-c8cb6eceacd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0f79fd-e286-46a4-8d60-0696da8f00b0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c242dc2d-0306-4ebf-9eab-a902b927d192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f903c2ea-7117-4cec-80bc-9b34c11a0ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df3eb4e-7ae4-447c-bd0a-c70fb6ca08bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9975286-d014-4f44-9486-dfb73e664cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd4543-47c8-4eee-843e-05cae55af3a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f607339a-eac0-468f-b5bf-c91f1dbda5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91d8f5f-72fa-41fd-be15-d0b6d89a328b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8966b899-7dc4-407b-b667-b85f2c2d04fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2124442f-4667-46b1-ba52-8a6ea38c2b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aeb1e5-e51e-4a43-84f5-3cea666ab51b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715c8428-522b-45fb-83c6-f037e2a224db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814e3026-bfcf-462d-9e8e-a63187597669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a32c65-4d52-4db9-bdaf-1833dbc461ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b655a63c-725a-4385-9b01-2c4a3b3b124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398ca42-5948-49a2-b771-8bd810055a00",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d209bb0-9fbd-4aa4-b5e6-5475c9e5d68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e37d5a9-b866-4911-a79f-160fc56bcabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5e409a-f74c-41f2-a80f-0dc0b670ebd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2595fb4e-529e-41ba-a27b-4e8a05080258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a49900-ecef-4765-84bc-5230f61b8deb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b837f2b3-691d-4ac9-8c7e-eb0abf92506f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36442f4-2be5-4641-b237-b8ef6fdb8091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4531d8e-5aba-4e1d-af93-e73fbf08d8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d796fdf-828d-430a-a1f9-6a19d4992034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0778fc-0a38-4cdf-804e-bc4aa7552edc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabdb8ba-1e77-445d-acb1-9d5585ec825a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953bc3e3-f6c1-4ef6-92bf-08606a5cc50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61621741-e5e9-453e-a225-072b076264ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf5003c-8b49-4653-95b2-a03bfd6ba183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6a50c-22a3-45e4-805c-77511ea72025",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e8a36-588d-4997-8f74-41999c460629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2d6699-c0f0-49ce-b90a-bf18ca8d3cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d527fd-1543-4be8-af11-b23d6198ed75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21e1ea9-b1f7-4d94-a543-639e7e684298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f12e22-e4cf-418f-95d4-9eba4bb9ac4e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269d4543-5171-4a09-8f97-ca040af17ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e28a06-f8d6-4277-9595-224e68fd0058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b747168c-9c4e-4f19-b272-063b4b728668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea5d0cb-a64d-4f7a-9ea8-472ee700150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c10a6-2865-4950-ba17-9c8945fa39ca",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c335f96-172d-45c3-800c-61106f342d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bba2d6f-11e6-4ed7-b8b5-b1ab40bd9921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7826755-2092-48b2-a9b5-e927be4230f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b56380-1c19-4f44-996a-7e4fad18b562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edfa128-0f60-4ae4-873a-d620acba3e1e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a2758c-3430-4304-81fd-d575579cc190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5667b9-32a0-4ba4-a76c-cf79fd0af99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb76f79-bd10-4f60-94a4-14a60e8fba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b71bd09-3c5b-452b-9c55-58d080eb212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d27c3b-e98d-422f-8bcb-9b44d96d6fc4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7060cfa-aa0a-4602-ac36-35b4cb536c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d70f80-be32-4bbd-91f2-6177374d4a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea1aacb-b7a0-42a7-b730-05ea8f0bf9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a876e3-c4e8-4c6c-abe3-5f94eb0efee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51de3949-9108-4069-bcf7-1f1dadc568b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1849457-360b-4a84-b4a9-cda74c65f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25a3f90-8bc6-4b97-86c6-5a9d388a2937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafd37e5-f2fe-4d58-aaaa-21e8d97b8a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d856444-f9e1-4d0d-8ef9-47a8b9198dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43daa6cd-3068-4afc-82d0-002c2f42cc99",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c11af4-48a2-4cbb-bf78-9e35fdf5fc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d081eb5c-aed2-49b4-8770-3227a67d19c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d5513f-d0fe-4451-9b00-6cf26cae7ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9661bf-66fb-4f01-9d30-48cb1ee54604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0257d9cd-34a5-4417-b595-e455f88ac8af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c977903-c88e-4a96-8323-120c40c0133b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55199c3a-5886-4eb9-950e-f755e349ea0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad3c47-afde-4501-aaac-eb00ee7dd015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729ad120-ca04-4757-844e-d806825ae1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb9b9f-a21a-446e-a54c-ada98b9725f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02335f9-f312-406e-b7fa-91809cba7a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844e314d-9173-4349-9496-7ce199fbcd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be69306e-8fb7-4182-aff0-c8c89f5eb9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9537e936-ef57-4368-821b-633595f3803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a889245-6a0e-44b3-9275-0c3cdde894c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8081e9d-6ed1-43b6-8521-2b9c61bad661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5babf988-583a-44d0-9df0-35f7a786fafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d19860-c3ad-403a-86f3-4c14d735e603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d238128d-4e90-4800-ac41-36cbacc86640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74d76d0-8cc9-4f1e-be79-6b54baf65cb8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c03ade-d3b9-42fe-a0dc-6de6bf9b906d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a65445-da5b-488d-b9ca-3ad629461115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ef2e2d-4b87-4a45-9eaa-3580e8da5aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79243b21-e2eb-448f-9b2e-f28551152298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433c862a-1b00-4974-9d92-bc3683a6197f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c858c2c-96f8-4fea-adfd-aee99eee145d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ddafe8-4d06-418b-b04c-dee784883e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc789ca0-2666-4f55-8154-94de28aef9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e03076b-a5f9-406a-bb0e-1de9a990f6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d4d33-fc37-4a4c-a105-34003430e217",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe1d704-a628-4b50-9719-28e1e8e3a23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c491b9a-8375-4c73-b27a-b2b94b1d6c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf1c72e-a6c5-4b09-b91a-6c1868f7e8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c71c21d-abaa-4ea4-a849-038080dae26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a44af3-56d3-4ece-bb35-251210c0342f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dd6c9c-d302-488a-b482-807924ec729a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977cf20c-9336-43f3-ac29-bd92efe4ab28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87904e-ac90-4141-80f1-2fb7d08dac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732d332a-098a-4e5d-bb8e-c3607f93bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29406be3-ae9a-42ad-a934-1a09ee7f332c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58292d02-0af3-40b4-9f0a-744601a47bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f205ac91-4137-4419-a494-76d4c8dbef18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4deb2e-230a-4cfb-8b77-3d01a623fc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab060a0-6cce-445c-9e10-11b928b97474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca2fb5d-1ebd-4a27-803e-bc95fa4630b5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b354ffa-0f77-4327-9f1e-9e5684f80b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e0b12a-6886-4c3a-a944-901f47b436c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c53099-dedb-4b2a-9196-b3b27bc7996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f1493b-5a5c-45ab-8bc4-b81ef5a22377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e2ab01-4337-4248-9cf0-c045f4eb0018",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc12fb6-791a-4b9b-84f0-306b775d10a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a6f28d-401d-4170-b63b-fe4771a1b335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71a87a2-8761-40c3-89e1-086d67e9c8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e33d2a-83ab-4923-88d7-55e4b598ac5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9da2c4-5e3a-4a80-9d7c-657588d4e574",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eb8d74-599f-4ce0-9e06-4eab4a08873e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68125924-7102-4346-b6a0-ea333c072d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d88fcea-41af-4c81-919e-e46c3d2dae33",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f841bc4-d8a5-4b56-8ad0-b77179ee062e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e4273-f592-4248-8ea8-f7b7b9f90b2f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a343941-c58b-4272-ad25-5679b29d40b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f60869-6402-4096-9f29-0502f602ba15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9ff62-c22b-4126-bdf0-2599aeeccbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9446b483-6387-4ec5-88c2-30bc6020a896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8df593-4ff6-4265-b0c6-63fc9a3f1d64",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb92d96-16a4-4569-8b33-4f7a21353813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e2e378-9301-438f-b727-2fb52498e689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e6f00b-29f1-4b38-97bb-0f25b2ccba35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ac174f-47cd-49ee-9af2-c14181da692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f04cef-6337-4efc-b2fd-1f9d4d624b3c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96421ae9-f9a6-497a-8660-3f7fa3983d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1abaf10a-c0bc-447f-8d99-a11cbb945902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf167ac5-6fad-416e-975e-6d2b07063811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f1f7a8-0c9e-4391-a7da-67e0ff0c084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b600b3ff-870e-4832-bbac-588278ee4d2e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c837eb-c793-4e26-b821-5afd2e024466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62833f6-4a22-4d19-bb86-1fe9965258de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8708e096-3c97-4364-8f90-57beda95b4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd340ee-3397-4818-80aa-b1717f4e3a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65c573d-431a-4668-8d54-43daa43630bb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca2483-ed2c-4bb5-8627-927449fa0e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d220a8d-04f0-42a8-a06e-c7bd903981fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b3e613-f9fd-4487-be0e-099737b0a255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35418310-dbc5-4688-916e-60f1a4edd8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85afb6c7-24e9-42fc-bd97-b66f04b52ed3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db810d64-6594-4734-b084-f6580867d95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421d61be-a85d-41ee-bdc6-8cc2ff152146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da84a1d-cbd6-41f4-bda5-542f9b19172e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65070833-3358-4bd6-b7af-eafdc032a9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e801f-e782-4336-aad8-e71354851302",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93af5b12-cdb1-4a1d-8bf4-d2369dfc824d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394381c6-f589-40ee-8b98-0cfbc1e9f695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65baf37-127b-4f28-9c4b-74d8c5f466fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33be476-e13f-4838-84b4-7ad3ac5ede38"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5eab316-4ac4-458a-8fb1-8ee38d3c400a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79be6124-1e71-4568-8ee2-2fe654c56ff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d21b1598-f981-4b10-80e7-496cfbf55b68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "457fa0ea-4676-423d-9e02-5ad495dda6da"
                    }
                  }
                ]
              },
              {
                "id": "32033ee8-4d7e-41f2-a953-8b77ba2e35e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bec5e23f-1438-4f18-90a1-bc322beaffa3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d371ad8-5aeb-4859-8fe3-ec3f30649488",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ccd9b8c1-4ad0-44d9-87de-532fb2b24313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00be3e0-3dd1-4c5a-aad9-692b72c4f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c0dcd47-dc48-430a-a035-379e4d5e0aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297b6139-d024-414c-878f-0a15f32486db",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96875879-781c-463c-bcf8-e01957e0e49c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18c7d635-15eb-479c-a952-cb757acb3552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2791c9-e9c2-46d6-aedb-d83017ab78a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2845c501-3e61-46f8-900b-2328dac4b92c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9cc7bdf-a243-44e5-8c7d-ce5925c34632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3d69757-130e-48ff-89d1-211556a4da61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46316d9e-ee0d-4e8f-b162-6fe7166919a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f501297e-f292-45d2-9d45-1f308e43188e"
                    }
                  }
                ]
              },
              {
                "id": "4ecbb091-9739-47cc-9296-9eac05d2c1b7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "50466bd5-cec1-418b-bc3b-8fe7d71b3115",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd7aa2-8d5d-4b96-b563-57d52bdd56f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8f62ca16-3611-4dd9-a791-53f3584d8b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a4745a-ff75-49bd-a81a-83490d925d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088a1b48-782f-46a5-a77f-54bdedaa846d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f23b0068-f829-4be2-bed2-000322a64cd0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d687e6d0-e4f8-4ed6-83ba-b4f7a27f1686",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "254479d4-6eb1-489f-838b-35cde681f0dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e571208-8056-436d-8555-6809754e33e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6f65398-94bb-425a-8435-682d718061cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91f2d243-64fe-4451-9d06-03fb5b5269cc"
                    }
                  }
                ]
              },
              {
                "id": "3eb1faff-6064-4f12-b8f8-d359afdc0a16",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53e661b0-8d2a-49f1-a05d-18e3d6d2829b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "200e282d-2e75-4044-8050-4b775eee19f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8443ba03-2a15-49d8-b1a1-a5c0fac74526",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8018a88-c0b2-435f-8fe2-316d9d2f902d"
                    }
                  }
                ]
              },
              {
                "id": "4c7650c4-8553-4efb-b7ee-07ce5894bc2d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7215c9f4-40ed-41b9-9efe-870ff6fdb928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0f71793b-f3c0-48b7-b2e8-54bd696d0874"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b905c4d-0b97-4d92-8caf-fc644df62fa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc1c8a5b-4ac1-46de-97b7-6f91c77488ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84b88cf0-7b77-4b7b-8810-e05c21cbf593",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a218eaf4-1b17-4df0-a0b5-7e6d4990465c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "482adc4e-4686-4616-a023-5b16d024f191",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f462823-686a-49ef-baaa-be73881c8025"
            }
          }
        ]
      },
      {
        "id": "6ce9d47d-15ed-4b9f-88ae-93c7c2af7bf6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cf3e43c3-86a7-49f3-a34c-b350763e0739",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b6d8deb-36ff-475e-9388-f9e1f63531bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ca9677-91c6-4235-b6ae-fcebf230179e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b842b4af-fc0e-4b59-992c-29e674381437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e145536-a302-4c02-bf8a-6c23bd6366f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db953a0b-f23b-4b0d-8ad3-089878144f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e69098-e375-4a16-8220-df0129863fc4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a25f40-caf5-463d-989d-569a57f52328",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e36ffeea-596b-4e1d-8c8d-e17d58784400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c1d4a4-19ac-420c-9e29-1aacdd12a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2c9c4f0-a8dc-4a82-910f-37e77b2501e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e072581-e68c-4a75-a56e-ec341e0dcc19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6309cf-b5e4-4432-bcbe-23e7970a4bc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ce2cc9e-1eb8-4e61-8a18-4e33f812b154",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19eb61fb-2b9f-4eaa-ab16-318765fc4926"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c538b3e-5d5a-4cc6-a97e-f49cb700da16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fe9fc16d-d5f3-4517-a794-ddc1ff549f65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5cd002c-42ef-49b5-859f-9d3e3be82343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52c846dd-d1d0-4d74-b031-e7d760b4f3cd"
            }
          }
        ]
      },
      {
        "id": "1c93cf9f-e5e9-4562-bf9e-670df196aca0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e958e832-30e2-4f3a-a31c-39cc37ca14bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd59fab6-4359-4b18-a9e1-8d6de18334df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40497b1f-a7d6-48f5-927c-36054f6f255e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c80c145-77dd-44ed-b561-cb0bccb42d92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9d34496-2501-480d-acae-214aae2a724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52fb9a9-d2f1-42ce-9974-e105f3ac5b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "871f5256-110c-4bf3-a058-6079311bcf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7425b579-7748-434c-984d-53f17cfeee5f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10d8c2f-d624-4d81-95b5-3aaf472ed749",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d774c1f4-4e8d-496f-adbb-f2e049cf36af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c091cdd-69bc-4a98-9b75-79720ae04013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94e990dc-e9d3-4ad2-a159-307a11810866"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4e42172-e8cf-473b-830d-2c591c3776b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bb75b6c-21d0-4f33-b074-23648f1fbada"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2325e2d7-e1b9-4054-9f52-e0e6911d2f60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3cf5ec1-6f61-444e-a67f-58d5335d9e09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad0486cd-929c-4a43-873b-67411a377f7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "219814d2-8baf-46c9-81cf-dc9af517c1ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b866305b-25a5-45b7-966f-6636b6b66242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9265bd0d-1190-4511-9524-783edd0a7d50"
            }
          }
        ]
      },
      {
        "id": "8e7e2593-a76e-4a04-8731-30080ad3c51f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a0af0d1c-446b-4462-916e-d2908e42f967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc00c41e-2e29-4e38-b133-6163c33405a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fa5b34d-040f-4fc6-8d6c-4c7744b586e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701318a4-1ec1-4fa0-80f2-83f697abf3ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2b47a567-b2f8-4b56-aad0-47b19a273410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa1916f-bd4c-4165-861c-05a0fd600f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b62c442e-486d-4abe-bd11-0a9a707748fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec7d23-38bb-40d7-81dc-5b6d10532c68",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12af1f23-6e31-4b90-bcf7-be6c234753e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "99f74383-aa86-464a-80e1-2eead96fabbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f7c6a-fdb1-42de-9b0c-6e1d47a2336e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1340f32-d40b-4d23-a0a3-6bfa60b73bf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7871200-4ad7-4b85-8bf5-031f33a48db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a053174-9e4d-46c7-a26c-00cb9bea566f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21504657-2966-4836-b7a3-2b03b4fa4d18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824daf53-068d-4af0-9f6a-2be7176d658a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2325db63-624d-41f0-9534-0dbbe43e63df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ca0b009-b035-40f8-b028-083a5d095d8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aabffaf-e3d8-4d7d-9241-1eab6445d107",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60860c27-9e59-4436-9617-26bae507a8ca"
            }
          }
        ]
      },
      {
        "id": "38b17353-ce22-4f71-9f48-56857f7a6015",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ac6c02-2be9-4880-9ca7-bc6f51939892",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aced6edf-7bd8-47f5-a985-c9542b55c9bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d085c48-52df-4758-bbea-f8a53b41cc19",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b748e58d-7c7b-4c76-8a4f-14cdf797c8e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "489d293f-79ac-492d-8e37-f1623240fad6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 516.5249042145589,
      "responseMin": 10,
      "responseMax": 3146,
      "responseSd": 393.11715805150595,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669682495282,
      "completed": 1669682640836
    },
    "executions": [
      {
        "id": "8e686854-883e-4acf-b648-1fa1b96749c6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c83a46b9-b509-4c86-a82e-4a2cd2bf1d6a",
          "httpRequestId": "4d13c3dd-be45-4c1d-8f51-04ce2dee1dca"
        },
        "item": {
          "id": "8e686854-883e-4acf-b648-1fa1b96749c6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ec12f2a-12c5-4f93-9c94-6418c0e40bfc",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "77129809-002a-40e5-a73e-ebcb279fcc95",
        "cursor": {
          "ref": "a8073f79-46a9-4307-b51c-b16efb74b2c2",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a4425b1d-ee45-4302-9405-a5089b754338"
        },
        "item": {
          "id": "77129809-002a-40e5-a73e-ebcb279fcc95",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a22b6c77-3e50-44a4-8e1e-c4976466631c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e50fbf75-1acd-4aee-b7d9-594f5984e216",
        "cursor": {
          "ref": "f771e333-0c53-4a39-8eef-29a5e91f1701",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "522aa395-0d47-4b23-9093-9dd28d5955cb"
        },
        "item": {
          "id": "e50fbf75-1acd-4aee-b7d9-594f5984e216",
          "name": "did_json"
        },
        "response": {
          "id": "bf43121f-ad8a-4a1d-ad8e-663b606a45a6",
          "status": "OK",
          "code": 200,
          "responseTime": 582,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f9bd5-dc20-4ca4-9c06-03ccfff4675a",
        "cursor": {
          "ref": "b3d20ee8-091c-4bc9-b41a-bde1d3ba27d4",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4050edf-eeff-4034-8fde-31926ffe7d64"
        },
        "item": {
          "id": "981f9bd5-dc20-4ca4-9c06-03ccfff4675a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf177408-92f8-4831-88cf-768880b0a319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f9bd5-dc20-4ca4-9c06-03ccfff4675a",
        "cursor": {
          "ref": "b3d20ee8-091c-4bc9-b41a-bde1d3ba27d4",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4050edf-eeff-4034-8fde-31926ffe7d64"
        },
        "item": {
          "id": "981f9bd5-dc20-4ca4-9c06-03ccfff4675a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf177408-92f8-4831-88cf-768880b0a319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b7782e-442a-45c0-b23c-e0e0aff33a1b",
        "cursor": {
          "ref": "089a0e90-e309-4fec-a9ed-475548664cb1",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0de4f53a-8654-46fa-a743-67a8e065f03a"
        },
        "item": {
          "id": "98b7782e-442a-45c0-b23c-e0e0aff33a1b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "26a13aa0-06ce-443a-8f5c-5617eca16ac5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 648,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844b552-78e3-4d90-8cde-8d771a7f3a85",
        "cursor": {
          "ref": "84550de8-d75d-43f7-868b-aaa04f35bd70",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a1dc4002-8a16-4c0a-995f-e7409babe98b"
        },
        "item": {
          "id": "5844b552-78e3-4d90-8cde-8d771a7f3a85",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "54e36528-aa15-468f-8d77-973b1149d808",
          "status": "Not Found",
          "code": 404,
          "responseTime": 490,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89535649-85ac-4382-a209-ecbca2bb0f29",
        "cursor": {
          "ref": "4310cfcd-f112-449b-9f7d-9c5d7158d286",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d5ac0e75-43dd-4895-890a-350bdfda0e0b"
        },
        "item": {
          "id": "89535649-85ac-4382-a209-ecbca2bb0f29",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8efcb2fe-c7b8-4187-b8ce-47ea60d3e85c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3cbfeb-5dec-4994-ad66-ad15519100d1",
        "cursor": {
          "ref": "91ec78dc-8063-40a1-90d7-226c3c2d239f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "553b1de6-9a72-4266-b047-eb0cf54a8c0f"
        },
        "item": {
          "id": "0d3cbfeb-5dec-4994-ad66-ad15519100d1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9fa930f2-9740-4631-9a0c-586679e42e71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3cbfeb-5dec-4994-ad66-ad15519100d1",
        "cursor": {
          "ref": "91ec78dc-8063-40a1-90d7-226c3c2d239f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "553b1de6-9a72-4266-b047-eb0cf54a8c0f"
        },
        "item": {
          "id": "0d3cbfeb-5dec-4994-ad66-ad15519100d1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9fa930f2-9740-4631-9a0c-586679e42e71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da417123-81cf-41ee-bb90-e7e575683d1e",
        "cursor": {
          "ref": "228484ef-a77e-4ad8-af39-8f6fdbb8122e",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "53b2ddb6-22dd-4403-b30d-b0fbcb552c7e"
        },
        "item": {
          "id": "da417123-81cf-41ee-bb90-e7e575683d1e",
          "name": "identifiers"
        },
        "response": {
          "id": "eafb0503-ae7c-4dee-9d36-785d378f7feb",
          "status": "OK",
          "code": 200,
          "responseTime": 776,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fb69fe-f899-4117-91bb-41644290dee5",
        "cursor": {
          "ref": "be76d19d-6048-4170-909d-0079ef0563db",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "67e982d7-957b-4c0a-b308-2363f158cb49"
        },
        "item": {
          "id": "d9fb69fe-f899-4117-91bb-41644290dee5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85715a32-7ce2-4cc8-b42d-c4cafe5bcd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fb69fe-f899-4117-91bb-41644290dee5",
        "cursor": {
          "ref": "be76d19d-6048-4170-909d-0079ef0563db",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "67e982d7-957b-4c0a-b308-2363f158cb49"
        },
        "item": {
          "id": "d9fb69fe-f899-4117-91bb-41644290dee5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85715a32-7ce2-4cc8-b42d-c4cafe5bcd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b04ff9-5f72-4b35-9647-35bcc3aea957",
        "cursor": {
          "ref": "03ec8ed9-bade-4047-a0ee-ba5512c4072b",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87b8a3ab-4564-4ff5-975e-2c91bed2438c"
        },
        "item": {
          "id": "b3b04ff9-5f72-4b35-9647-35bcc3aea957",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ded350b-9175-4014-85f7-20177c991f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2639fc77-a56b-41c4-a696-aedb84784423",
        "cursor": {
          "ref": "bb81a33a-5b28-44a5-bb5e-b61aa976f9f2",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c6c8c38f-5622-4a9e-8614-f17adefe2863"
        },
        "item": {
          "id": "2639fc77-a56b-41c4-a696-aedb84784423",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52bfe78e-fc27-4f6b-9359-54a56a33add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48fae7d-3756-4892-a5ee-2b3b10f22dd3",
        "cursor": {
          "ref": "f7a24348-d7c3-4604-8d92-eac8a598b5f8",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9bc07b35-c0af-4fe4-9f25-98c1b8a9dec4"
        },
        "item": {
          "id": "e48fae7d-3756-4892-a5ee-2b3b10f22dd3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eabb6b3f-f5ef-4bde-a22a-4698284519b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dc4ef5-7db2-4ce7-b485-ddf4722e08ca",
        "cursor": {
          "ref": "b7b1d4d6-6e63-407f-a8db-ee302f45211f",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3d5f4e9a-8f2e-46b2-97cc-2e3f206e48ad"
        },
        "item": {
          "id": "49dc4ef5-7db2-4ce7-b485-ddf4722e08ca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5ba4089b-337d-4791-b6ca-591dfe759c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13e626a-d8b4-48a5-bb20-9b923a5d42c6",
        "cursor": {
          "ref": "8ed30c48-0919-4024-9bc4-8a6e8e09c8b3",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "157635f9-4e8a-4162-a57e-36ed58d70b6f"
        },
        "item": {
          "id": "f13e626a-d8b4-48a5-bb20-9b923a5d42c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "169cb8ef-82c0-41dd-91a3-7647296965d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50abb38c-1e23-41c3-a5e3-863a5b6796df",
        "cursor": {
          "ref": "24fa38d1-99f2-48ec-9e28-c7b77ee883dc",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b18e50a-f7bd-45e3-bebd-86ba0a205beb"
        },
        "item": {
          "id": "50abb38c-1e23-41c3-a5e3-863a5b6796df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6166eb0c-cd4b-41ab-a86f-0a9cc163c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657ac8e3-b8f5-49b3-8374-6b92604042f3",
        "cursor": {
          "ref": "b25dce47-21ac-4d88-b8d4-908432e89bbf",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4bd2fc5f-a529-4110-95eb-b50757ab1d96"
        },
        "item": {
          "id": "657ac8e3-b8f5-49b3-8374-6b92604042f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "425d7616-72c2-4e76-aa23-1e1a9a4c3998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d36d78-85b6-4d2b-99d7-c4d4d8041b2a",
        "cursor": {
          "ref": "a07ff804-1efb-4ad3-9972-57a535774658",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b9c60242-5e96-4378-b1e9-9dc70689e492"
        },
        "item": {
          "id": "53d36d78-85b6-4d2b-99d7-c4d4d8041b2a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f959c577-78be-46a4-838e-98aca3e48103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3686c8-f855-47f3-8f40-046aeea38228",
        "cursor": {
          "ref": "1158afdd-72c0-4834-9244-ff1a4a381023",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd3760e3-1378-45ef-82e3-ba2b863ee2b3"
        },
        "item": {
          "id": "8d3686c8-f855-47f3-8f40-046aeea38228",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0c44101-9179-4fd7-b364-21161fa440fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333b2a7b-da43-4188-81d1-58f0a93a693c",
        "cursor": {
          "ref": "cdc39b11-dba3-4d61-864e-026c4b10788f",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8afeace5-5001-48c8-b9f2-264c5fa0232f"
        },
        "item": {
          "id": "333b2a7b-da43-4188-81d1-58f0a93a693c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "36363f5c-d594-4081-8aa7-c4d83abe5fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf5a8b3-a927-4364-ac2c-72c41bced182",
        "cursor": {
          "ref": "b518394d-6b0c-48f2-869b-cc2a33108984",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "90b9b9f0-b298-4866-83c0-0d21fb1c1f30"
        },
        "item": {
          "id": "daf5a8b3-a927-4364-ac2c-72c41bced182",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e23b43e9-8d6a-4410-8aa6-0ef126dc8d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a762d87-00fe-4476-a57c-2ad8a38af53f",
        "cursor": {
          "ref": "90c4787f-06c4-456e-aa4c-d1b932357f62",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5b632887-4eef-4ce8-bc9d-ac697bf93f0d"
        },
        "item": {
          "id": "0a762d87-00fe-4476-a57c-2ad8a38af53f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ddd1cee1-10bf-438f-85b7-6a30cfb58378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a004d0-b98a-4f05-a06a-69e4b706ba72",
        "cursor": {
          "ref": "d7e04681-4ba1-4d6d-a5c4-afb8a862c719",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ddc16539-a557-4491-8f43-1dadf5815e65"
        },
        "item": {
          "id": "59a004d0-b98a-4f05-a06a-69e4b706ba72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "59d54378-c045-4b40-a1ca-fbb76154596d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4589a7b-6a00-41f2-8cc3-103425d16588",
        "cursor": {
          "ref": "1d103e41-f025-46f9-90d6-782ce1ac71d1",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "260f61aa-00ca-45a4-84d6-35f14a98199e"
        },
        "item": {
          "id": "b4589a7b-6a00-41f2-8cc3-103425d16588",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "71e8e7ad-9f6a-4f25-8bd3-7e68b51c5f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11997ffd-e5bb-4338-8392-40578b76e506",
        "cursor": {
          "ref": "f48f9f84-a843-4184-9652-77d4af8b2cab",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a4e1c549-b827-43b7-bdf8-d849fcebd7ad"
        },
        "item": {
          "id": "11997ffd-e5bb-4338-8392-40578b76e506",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a2e73190-5417-4e6b-944b-c331f1d3f78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0b1d05-d4c6-4661-9a44-492058c4ef23",
        "cursor": {
          "ref": "144a1ba9-9936-43e4-83d7-68976c4f3c2e",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0caca2da-97b5-4083-9fa9-6ebe34c650dc"
        },
        "item": {
          "id": "3c0b1d05-d4c6-4661-9a44-492058c4ef23",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f240e7df-319c-4cd7-bf8a-5fb677aa53de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4305b15c-a64a-4461-b8c7-2167961f8b4d",
        "cursor": {
          "ref": "8cab792f-b3d8-4948-8394-38a144972762",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0db7957c-9c87-4d54-9a4c-b1135410a42f"
        },
        "item": {
          "id": "4305b15c-a64a-4461-b8c7-2167961f8b4d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a497b46b-fe4c-427f-976f-5d32adaab038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9a9b4d-245a-4cee-a1ec-960ecde4d90a",
        "cursor": {
          "ref": "385420b0-ea9b-4059-a2ae-df2e24bca07a",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bcd6beca-2e71-4d0f-9986-38d641c49899"
        },
        "item": {
          "id": "db9a9b4d-245a-4cee-a1ec-960ecde4d90a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "70553077-73d6-46ce-9f91-d5182c5dc662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65004d4a-bda0-41bc-8ea4-6b04fd0c03a2",
        "cursor": {
          "ref": "ee2987d5-4f87-43a0-8feb-970d6f5dd671",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2601d385-77a8-4c15-8a8a-1bd7354e1e18"
        },
        "item": {
          "id": "65004d4a-bda0-41bc-8ea4-6b04fd0c03a2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2849fd2b-78f7-4d7e-8a6e-e6f79d3b0631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11231048-7b70-4a4c-8ab8-3a1cb6f51cfb",
        "cursor": {
          "ref": "7cfee322-7c72-4a62-a674-13cf9e15f3fa",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c551e3d-2d77-421d-be24-b90e9fb0ce80"
        },
        "item": {
          "id": "11231048-7b70-4a4c-8ab8-3a1cb6f51cfb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "340f42e5-4846-439b-8dfd-16cc91531505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08448a7c-0bad-4ca5-95cd-876a2e4ad21b",
        "cursor": {
          "ref": "8aee9419-8dca-41ab-a85e-e41a8b16ee88",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fd50f6a2-ad8b-48f9-a443-2caf7cbc064f"
        },
        "item": {
          "id": "08448a7c-0bad-4ca5-95cd-876a2e4ad21b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a916c121-e4c1-4a92-81b2-60c2844b48d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4636fae4-d15c-453d-9370-37d25de7621b",
        "cursor": {
          "ref": "8f75d58e-89dd-42c7-9003-18e88ab49632",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "010cd75d-d881-4e97-9170-595f2ad624d7"
        },
        "item": {
          "id": "4636fae4-d15c-453d-9370-37d25de7621b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "48ff4262-c475-4de3-b252-708e1a88f3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47e5c26-c014-4df8-a27d-9329853fc976",
        "cursor": {
          "ref": "5b6162aa-1b80-499f-af41-7b2f1ce9cd43",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2e29c59-61fb-44c9-8596-62138214d3ed"
        },
        "item": {
          "id": "f47e5c26-c014-4df8-a27d-9329853fc976",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "567a25cc-99bb-4c25-b25c-4183eb60b0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca15f2-655e-427e-a3a0-a4fe771ffc1b",
        "cursor": {
          "ref": "56ef18d5-569d-432e-93a2-de7b2caac32b",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b615b893-cd79-44a0-ae04-1770899cb238"
        },
        "item": {
          "id": "00ca15f2-655e-427e-a3a0-a4fe771ffc1b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6ff5a9e-df68-4b5c-bfda-bb49d416740e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d697b3c0-ed1a-4344-aded-30c53f8f3e7c",
        "cursor": {
          "ref": "769817e1-526e-484c-92ae-8fb3dbb50fc8",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8414f18a-2d71-49d1-82ff-9216edb2d1d1"
        },
        "item": {
          "id": "d697b3c0-ed1a-4344-aded-30c53f8f3e7c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84c1159f-3cd4-474b-8a1f-ad3e71d673a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5b8f67-f357-418d-bee5-b8cfb700f1cc",
        "cursor": {
          "ref": "aac3308b-3f22-4f26-aa69-3ce37dfb5ecb",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7427a5a-a80a-4dd3-8098-40025895f87d"
        },
        "item": {
          "id": "fe5b8f67-f357-418d-bee5-b8cfb700f1cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8216da40-b4cf-4cd8-93b1-8999aa41eb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4574d0-e936-43e7-baae-f61d2d883409",
        "cursor": {
          "ref": "9f8d742b-6acc-414d-9c13-3685c59a4174",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "356c501a-1585-4865-a31f-735f36c9da38"
        },
        "item": {
          "id": "8a4574d0-e936-43e7-baae-f61d2d883409",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d242b8b0-30d3-48ee-8e04-098f270a07b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f8ffbe-2647-4439-80fa-0e6584dd8bb2",
        "cursor": {
          "ref": "c35db90b-72d1-45cb-8b75-ba1ca3cb2d4f",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bdd7c7d4-8c1a-4a31-afc1-dab8f3a8eebf"
        },
        "item": {
          "id": "a7f8ffbe-2647-4439-80fa-0e6584dd8bb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "919ddb30-1541-4d56-92b6-0cdec57c9873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020fa75c-38a6-44a6-8af6-9c02934e0b1e",
        "cursor": {
          "ref": "2c77f3d3-490c-4f10-8afa-46569797f75e",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d9e7503-e344-465b-9982-9cef170b3026"
        },
        "item": {
          "id": "020fa75c-38a6-44a6-8af6-9c02934e0b1e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3deb26d1-f034-4fc0-81bb-15cf0090a6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5140abbc-4ec2-482d-8e60-5fad0b061026",
        "cursor": {
          "ref": "ea0d49f1-baed-4bb9-aaeb-038c4c99c945",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ebb4c5d-c615-48b3-a56f-e7546ee1843e"
        },
        "item": {
          "id": "5140abbc-4ec2-482d-8e60-5fad0b061026",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a4dd4597-8d10-4575-aebc-8d0fa5a69b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5a66a7-85ac-4c5c-8f55-2ff568fa2ac1",
        "cursor": {
          "ref": "6c59d4e3-8e6f-4398-85ca-4cf3927f6aaf",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ad58ed2d-ce09-40ad-b1d0-fa82a99474fd"
        },
        "item": {
          "id": "4c5a66a7-85ac-4c5c-8f55-2ff568fa2ac1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a8ae5ff-76ea-4c12-9bf1-b96540709263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c45138e-048c-4a10-884d-1b7b0d3990f7",
        "cursor": {
          "ref": "1092d331-42b2-4bcc-8a0e-e432544f3864",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1dc3f39d-f7fd-4cf7-aab9-a2d29afbaabd"
        },
        "item": {
          "id": "2c45138e-048c-4a10-884d-1b7b0d3990f7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "660755f8-a2af-4d6f-bf87-362f5afda025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e7c66b-0c79-49e4-8cc6-ae3d6fd8157b",
        "cursor": {
          "ref": "9005269b-d402-40fd-9174-af5510aace1d",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ad23a82c-7a83-45c7-8295-78f065072718"
        },
        "item": {
          "id": "93e7c66b-0c79-49e4-8cc6-ae3d6fd8157b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4cdd223b-4bc0-4c14-a9d0-139dcfdd28c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba165e16-662b-413f-9a09-da56af136c57",
        "cursor": {
          "ref": "8cc5df39-faa4-4681-816b-7fecfa28ce2b",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c3cbd7b0-a1da-4096-86b7-3c3afaf085da"
        },
        "item": {
          "id": "ba165e16-662b-413f-9a09-da56af136c57",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ef2a4ef5-c9a4-4396-b80d-de925f12f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195d569-244d-4f69-aa50-7b6cdb28190e",
        "cursor": {
          "ref": "c03bd919-87b0-481c-b17e-e9ad32e766d8",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "76b0a033-3b7e-4df0-a9f3-3cebc0176366"
        },
        "item": {
          "id": "d195d569-244d-4f69-aa50-7b6cdb28190e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0b1ad22b-7556-4db7-aaab-d32fe5d182c7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 626,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c57431-97e8-4409-bcd8-c64bb013693e",
        "cursor": {
          "ref": "1e151f4a-3b41-4ac2-bf41-3d5f303dfeaf",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c76daf20-aeb4-4949-96b9-2734216efb8f"
        },
        "item": {
          "id": "37c57431-97e8-4409-bcd8-c64bb013693e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "663b5441-4346-4073-8abc-f35274af4d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2409994-8ff3-452a-a78a-bcfbbb56c1bf",
        "cursor": {
          "ref": "f2fafe17-dc7d-444f-b8b4-4d3f27891d17",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8dfa82c2-892f-4fba-9436-4333fc24de73"
        },
        "item": {
          "id": "d2409994-8ff3-452a-a78a-bcfbbb56c1bf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2f7eb355-5a45-41c3-a44e-f6bdafbe70a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab61fd6-155d-4e02-a13c-a9d88ba4b7d3",
        "cursor": {
          "ref": "e20eb9ad-cdb6-465d-8109-b5367f71c2dc",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7cdd77ab-14c7-4458-8cd6-2abf6198e571"
        },
        "item": {
          "id": "6ab61fd6-155d-4e02-a13c-a9d88ba4b7d3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c4a9fa1-86ce-43af-a596-f8925f5b9cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1d2ccf-cbef-47d8-ad83-fe7013d896a9",
        "cursor": {
          "ref": "368ad64b-4a00-4b04-aed2-70e47a38d6e6",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ef0e0824-d974-4055-b709-d685104932c4"
        },
        "item": {
          "id": "fe1d2ccf-cbef-47d8-ad83-fe7013d896a9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "18315ded-e3c4-441c-89c4-160b1e506810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444ddb01-42f2-4783-988a-b543b127538e",
        "cursor": {
          "ref": "171e9a0a-35b4-4643-ac1a-b5a1768272df",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "080cec65-71f6-4e04-a71d-95ae664aa65a"
        },
        "item": {
          "id": "444ddb01-42f2-4783-988a-b543b127538e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b031677b-0a8e-4d9a-874c-e1464ffc2218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ff87f-4bf8-4e91-ba12-051af4c612b5",
        "cursor": {
          "ref": "2c0dc6bb-e4a6-4c41-a996-2846dda54a6f",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "35e42970-8b4f-46dc-9dd5-d96f835f5cf0"
        },
        "item": {
          "id": "e27ff87f-4bf8-4e91-ba12-051af4c612b5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b6d18fa9-23a0-4282-844a-559904f4ca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11013a56-c209-4f40-81e9-f20fa30859fc",
        "cursor": {
          "ref": "9d69c73b-a250-4f13-bc89-941f2760c590",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dbb2f126-b626-4531-a3b7-912ff5cc5db4"
        },
        "item": {
          "id": "11013a56-c209-4f40-81e9-f20fa30859fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "15363e9c-665c-43cb-bcb6-ad82fb7142f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 960,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c936de4-85c5-4468-817d-d88e6f9d8eaa",
        "cursor": {
          "ref": "dcb60194-4262-4381-8d49-2662a95e217e",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a5d53d1b-2b81-4cd3-8295-1f6b0f6bf89a"
        },
        "item": {
          "id": "2c936de4-85c5-4468-817d-d88e6f9d8eaa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0f7b5367-e404-4f95-b396-9e1451357824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ffcec9-30f0-4691-b0ba-0afb53892523",
        "cursor": {
          "ref": "ee5688b5-7ff4-42bb-b638-09779744e08c",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9d95b2d-a750-423e-ba17-be4171758a4a"
        },
        "item": {
          "id": "84ffcec9-30f0-4691-b0ba-0afb53892523",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6118261e-e8bd-40d1-be63-594db006ddf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2540e510-bfae-4576-a73d-311dded3f023",
        "cursor": {
          "ref": "2d6a9bff-d5d9-4a7f-bb35-4961c65ea0fa",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1be71271-811c-460c-8712-db371fdce00f"
        },
        "item": {
          "id": "2540e510-bfae-4576-a73d-311dded3f023",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b381ebd1-e1f0-46ae-9d7c-1049a4915cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aca4cd-8b26-46d9-81be-49cc76c54dfe",
        "cursor": {
          "ref": "8b14f18e-7777-4f0d-abb8-b80e7fa05920",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c8bc279-5b29-4338-a956-d5ce1da98f5c"
        },
        "item": {
          "id": "07aca4cd-8b26-46d9-81be-49cc76c54dfe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "81bdd924-4eac-4590-b7e8-99a8f093097f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea1ac8-1605-4a53-8db5-aa628339aeb8",
        "cursor": {
          "ref": "06133b08-0ccd-402e-a1d0-32b54c03f2ef",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9740d8a-e786-4959-a796-02a1e99d8972"
        },
        "item": {
          "id": "15ea1ac8-1605-4a53-8db5-aa628339aeb8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4421c992-4905-47d2-a14e-068a900294f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad9552c-3a92-4152-b29c-6e4864bb5280",
        "cursor": {
          "ref": "fd160eca-60fb-4feb-a5b6-afbc0ce3a0aa",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7d870385-9823-4639-b2a5-01c9e7b4620b"
        },
        "item": {
          "id": "dad9552c-3a92-4152-b29c-6e4864bb5280",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d3d5d342-86d2-4652-82fd-7b8d1d165117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a815047-a5cf-467c-882a-fc63a9c386af",
        "cursor": {
          "ref": "f4b96655-6995-447f-aa7a-ceae74039380",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ddc9dc2b-22d3-43f2-96fa-5796681d6404"
        },
        "item": {
          "id": "6a815047-a5cf-467c-882a-fc63a9c386af",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "95856705-1c06-4560-b31a-8df299bfae16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf97af-8d2e-4a91-bf21-7bfa72b2b7d9",
        "cursor": {
          "ref": "7d8b5f4a-5b81-47a1-8962-eb87127a00f3",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b64955c9-870d-427b-8ed0-261b199fb5bd"
        },
        "item": {
          "id": "d3bf97af-8d2e-4a91-bf21-7bfa72b2b7d9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51b4f163-5477-4e64-a62a-06ae6333a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ed9ed-4c88-49d7-92fe-44e4bd63bdee",
        "cursor": {
          "ref": "aaa11c3e-7177-4430-9384-c46d4585c626",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b278406b-6f50-4847-8bfc-f890349f47d8"
        },
        "item": {
          "id": "198ed9ed-4c88-49d7-92fe-44e4bd63bdee",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "06d5af76-f986-48dc-a748-de050e42b559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293d377-83ce-42de-a3fd-5005b4611b9b",
        "cursor": {
          "ref": "de308688-7af4-4cba-b4f1-53fd62450d82",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f22bd8d-08ac-4dc8-94f6-9b5fe0e75a81"
        },
        "item": {
          "id": "a293d377-83ce-42de-a3fd-5005b4611b9b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "48385c05-375a-481d-9433-7bf46a4ced61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdddf6a-e979-46e4-84af-014c9d3c2417",
        "cursor": {
          "ref": "970034c8-7d5d-4ad3-a364-0198bbeff294",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d07359e9-f899-472b-b65e-6bb45161b5c5"
        },
        "item": {
          "id": "acdddf6a-e979-46e4-84af-014c9d3c2417",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4da2090a-84ea-4bf6-b473-8e2ef245b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b0fff-4754-4983-8862-445c183cc4f4",
        "cursor": {
          "ref": "24213abc-7ce0-4141-abf8-e8d81810c63c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d21567f3-bd92-4bf0-a1ec-b30bf8042095"
        },
        "item": {
          "id": "4b2b0fff-4754-4983-8862-445c183cc4f4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2466f3ad-395e-4751-b2ec-1d4f2d10c542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dbb9fc-bb59-4569-83d3-d6c29809786c",
        "cursor": {
          "ref": "db59181b-16ca-4d71-ac1a-588f68f9989a",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "439ec86b-5c65-4891-a884-032608401087"
        },
        "item": {
          "id": "41dbb9fc-bb59-4569-83d3-d6c29809786c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "96d9a9e1-ecc8-41b2-b5a6-0ca4c9171330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591aee67-0643-47e5-9ccb-b80d8c9b2ae0",
        "cursor": {
          "ref": "001a25e4-662d-46be-901f-bf163db411a3",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4f5adcf0-cb5a-41cc-8932-4de6463eb5c6"
        },
        "item": {
          "id": "591aee67-0643-47e5-9ccb-b80d8c9b2ae0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "08e6ea64-b49b-4e39-bbbd-3715dfa95054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1dbbbc-4459-4d35-ab84-d58a006d0f36",
        "cursor": {
          "ref": "b9ccc718-e7b4-499f-b275-a4a2736b5f23",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f0a20982-f8cf-47e9-9f00-673ace44ec70"
        },
        "item": {
          "id": "ac1dbbbc-4459-4d35-ab84-d58a006d0f36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f50cb239-e837-4ae2-bb7a-efa60aa912c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e61348-1a62-4588-a678-e36a2818fe8d",
        "cursor": {
          "ref": "ea186c0c-0b31-4a7e-b623-0c84e479258d",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16d22f82-3b8e-4d9e-b664-8796012f5f5b"
        },
        "item": {
          "id": "d3e61348-1a62-4588-a678-e36a2818fe8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "00b9188b-353b-45fa-a5ce-18786d0019f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b841a1d-86db-4f2a-b8ba-3fca10261748",
        "cursor": {
          "ref": "fb184f5c-5692-48e8-b539-a2cd666cbd6c",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ebd31fb2-d686-4797-a913-4f9cbfc4231d"
        },
        "item": {
          "id": "8b841a1d-86db-4f2a-b8ba-3fca10261748",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "44d5dfeb-fffd-46f3-b543-95e800a12236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c71380-86b3-47b9-8485-9c449485e06a",
        "cursor": {
          "ref": "470a6b34-8fa7-47cc-a8ac-3daa3c69682c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "133e5ebb-cb5d-4290-8746-65baeaf408f6"
        },
        "item": {
          "id": "56c71380-86b3-47b9-8485-9c449485e06a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "193c7b5b-27c5-4dd9-a2e8-bbc8d574570e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914de4d4-578b-4d4e-8652-84d30167c6c7",
        "cursor": {
          "ref": "4e81f1dd-a71d-431e-a277-ae869e156852",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92b2ce62-8b0b-4c2d-9d1b-1634c9239c3c"
        },
        "item": {
          "id": "914de4d4-578b-4d4e-8652-84d30167c6c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7cced7e0-db42-4e43-ab59-9a6d5f00f3f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2788,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "b7507d1e-2df4-40c9-87bc-83030cdbff26",
        "cursor": {
          "ref": "a8a2ee54-d6f7-414c-9105-5f826b0b5ee4",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8f0f200-1950-47ee-b615-c7ca0384ecf8"
        },
        "item": {
          "id": "b7507d1e-2df4-40c9-87bc-83030cdbff26",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e1daca52-80cb-466f-a2ca-ba2f7d813764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd86c98-0af4-4924-8c9c-fdc0e7676da5",
        "cursor": {
          "ref": "225a270f-282b-4d46-982d-b59c3b56f135",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "21c24176-b9d7-47da-a5e7-f3a7f3e153ce"
        },
        "item": {
          "id": "3fd86c98-0af4-4924-8c9c-fdc0e7676da5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14111911-916b-44fc-be11-281a52f7e051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0064db90-aad1-4be7-9454-d72938c404f9",
        "cursor": {
          "ref": "9ed22d50-8bfe-4cd4-9432-b447e334efd0",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e077779c-b689-4c1f-a6a2-b87df2f230b4"
        },
        "item": {
          "id": "0064db90-aad1-4be7-9454-d72938c404f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae025374-9e76-482d-8b76-12a55310e80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b8a6ee-da2c-452c-97d7-87e9267426cd",
        "cursor": {
          "ref": "800d21d6-0853-4111-9cfd-4833652bdd9f",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "205e5392-7c2a-414b-b5cd-5749e9f02b15"
        },
        "item": {
          "id": "76b8a6ee-da2c-452c-97d7-87e9267426cd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fc8c60a7-cca2-4ac4-867f-b2f73acc32bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85741916-f1ac-4d18-84aa-7463c913ffd6",
        "cursor": {
          "ref": "a76d8206-08a1-4950-8a9d-36285d3c6d5a",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a86e565f-f20e-4fea-8ecd-b811952a09e7"
        },
        "item": {
          "id": "85741916-f1ac-4d18-84aa-7463c913ffd6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1f4eede1-a1aa-4d9e-8a7b-d658c21e915b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fc471f-cd6d-4cec-bd61-50ccb8e17725",
        "cursor": {
          "ref": "8e2b5f57-894c-4e13-9a0a-c904d3d1af95",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f1d4512d-cdc9-4966-ac12-df3bb55afac5"
        },
        "item": {
          "id": "20fc471f-cd6d-4cec-bd61-50ccb8e17725",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bd91c8c8-bf94-4926-b62d-ce6f031f381c",
          "status": "Created",
          "code": 201,
          "responseTime": 2514,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "5097871e-751a-4ec9-89f2-80e492a2869a",
        "cursor": {
          "ref": "394d09a1-cd91-46a3-8367-d72cdb79f522",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "568872c8-4c5a-4a58-b476-8b691bedaa60"
        },
        "item": {
          "id": "5097871e-751a-4ec9-89f2-80e492a2869a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "248e2014-0d67-4f57-9360-e325e8838beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d540178c-b34e-494b-93c1-be6cc0dc2c72",
        "cursor": {
          "ref": "c20ee2bc-1637-49ba-a504-fa7365a24ddb",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d1d0b74-db55-4ee0-9e4e-7762baffdb45"
        },
        "item": {
          "id": "d540178c-b34e-494b-93c1-be6cc0dc2c72",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dc641b03-80ee-47d3-a5af-6adcc89d9f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c40a17-e1c6-4dc4-bdae-a89474503a3d",
        "cursor": {
          "ref": "d1767b1a-799e-48e0-9e0e-b89a6b875951",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9a8434c-b67d-42cc-9b1f-5264794c84dd"
        },
        "item": {
          "id": "e0c40a17-e1c6-4dc4-bdae-a89474503a3d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e60d5c48-67b3-48fd-8f38-7f7f1a65440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2571d763-1d30-4f12-bbe7-b74d1a107961",
        "cursor": {
          "ref": "d444d45c-cdd0-4226-b041-e3403f057b1f",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7eab25e3-bd51-44f6-828d-3580ff1a744c"
        },
        "item": {
          "id": "2571d763-1d30-4f12-bbe7-b74d1a107961",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f5f38e3d-0ae8-42cb-949e-3f95b85daf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c762a76-1d5b-4172-a6c8-2ef80789d20e",
        "cursor": {
          "ref": "c3d40cf0-4eb8-4332-b4ce-a9e387ea8935",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7fb60518-3563-41ce-ac24-a43e55df57a8"
        },
        "item": {
          "id": "8c762a76-1d5b-4172-a6c8-2ef80789d20e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "45b7768c-fd43-40a2-a63b-3e5307497d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab843fc2-5280-497a-9394-5ecb1bc2b841",
        "cursor": {
          "ref": "166d4120-5854-4439-aa11-81571b1231e8",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4c72670b-9fef-42e0-9f81-38ec587be295"
        },
        "item": {
          "id": "ab843fc2-5280-497a-9394-5ecb1bc2b841",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e42e3e9-69bb-4c33-81a1-ce69bb4e8f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c22a6f6-ca26-4e0f-b767-cd43ce593577",
        "cursor": {
          "ref": "94e47669-e89d-40e5-9c0e-d0f6059e1ba7",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c56ee55e-ad41-457b-a517-6812a2b48c4b"
        },
        "item": {
          "id": "3c22a6f6-ca26-4e0f-b767-cd43ce593577",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d3045fa6-8923-4f8e-b910-715913e12bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871616e4-e956-48b1-b69d-88be404caeab",
        "cursor": {
          "ref": "18a4cd43-eb20-4b6e-b461-67855a3b1f7a",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cf0a760d-951e-4ff3-b281-161b8aadae83"
        },
        "item": {
          "id": "871616e4-e956-48b1-b69d-88be404caeab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a6bc0d17-bff8-44f3-95d8-9fdec6c02568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247d1e6-03aa-4857-8a65-7f51126e87fc",
        "cursor": {
          "ref": "d76952e0-3125-44d3-86bf-60fdebc05529",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e360a56b-f805-4ae8-8b96-4bfa304c80c1"
        },
        "item": {
          "id": "9247d1e6-03aa-4857-8a65-7f51126e87fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "05b90e9b-3f3c-4896-ab0e-0eb747e3cfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a8f442-edc9-49ad-ada2-26e461368d84",
        "cursor": {
          "ref": "98fbe686-c604-476f-b78b-85bd0f68ab87",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "593f0887-5f86-494d-97c4-f39fb27b68e5"
        },
        "item": {
          "id": "93a8f442-edc9-49ad-ada2-26e461368d84",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c9b06528-27f6-419e-90aa-17be7c33c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b00b350-121e-474f-9e07-e578c2b7ed79",
        "cursor": {
          "ref": "5a2ba9a8-616e-47dd-aafa-1654f895e634",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "024fee03-dd7f-4877-a322-895362f7be7d"
        },
        "item": {
          "id": "9b00b350-121e-474f-9e07-e578c2b7ed79",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22b9440c-4402-4e9a-88e1-7d3d6de84c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c27d64e-335d-44f4-af72-d8bd6859c63d",
        "cursor": {
          "ref": "35bfa1a0-2c0e-4f05-a8d7-d7f38f4d76f5",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7571cea6-a336-4c81-ba7d-93322f4cb2a9"
        },
        "item": {
          "id": "8c27d64e-335d-44f4-af72-d8bd6859c63d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "40bbf16b-bceb-48ce-9873-d3b691d11544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a63686-11bc-429c-b877-156f49cdba3f",
        "cursor": {
          "ref": "88e9387d-9532-4488-8bfe-bdb56a49ebfb",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae986c3a-be3d-4a71-931b-c96e7f2f08a4"
        },
        "item": {
          "id": "a2a63686-11bc-429c-b877-156f49cdba3f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f838d30e-0122-4581-a08f-ff6809ee0e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7df30-0588-41cb-9045-889240d2b108",
        "cursor": {
          "ref": "35abc361-c534-4b46-af59-4ded6c424070",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "69e92153-fad7-4748-bdd1-d6897eca2c3e"
        },
        "item": {
          "id": "dcf7df30-0588-41cb-9045-889240d2b108",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fd15e13f-0133-4e82-827e-0d9cee4f5a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5215e4-848e-4133-a91b-1b31eb3c384a",
        "cursor": {
          "ref": "6fdea9d4-25cf-46d7-9a05-7293a4dbbae1",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "99b5f8ce-22d0-4db0-9962-2a44eeec10b3"
        },
        "item": {
          "id": "4c5215e4-848e-4133-a91b-1b31eb3c384a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38b4796d-5c9d-4456-985e-44237f23ec76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a689628e-7748-4b79-8fca-47b94e4bbc18",
        "cursor": {
          "ref": "6c08d7ac-c933-4319-86cb-b4eb07bc26f7",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ddfea9df-787b-4958-9c00-35b7ecb15724"
        },
        "item": {
          "id": "a689628e-7748-4b79-8fca-47b94e4bbc18",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "be082fe3-6c29-4928-9db6-060371a324a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174fccd7-7210-4978-a6cb-9bc1a6bf15c5",
        "cursor": {
          "ref": "1140658c-e2b3-4fd0-8656-559ddd0f1f22",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9aee102e-761b-45ef-b040-20f1df1103ba"
        },
        "item": {
          "id": "174fccd7-7210-4978-a6cb-9bc1a6bf15c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fc91b5c6-013a-4853-b745-1092c4e0620e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a5139a-ed3b-492b-9963-a7dd7f06bce8",
        "cursor": {
          "ref": "cf609da5-99fc-40f6-8a92-7d693d1da65e",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "628bf0b4-e581-4634-b96c-f2d873856145"
        },
        "item": {
          "id": "c7a5139a-ed3b-492b-9963-a7dd7f06bce8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "14cbe7fe-5e89-4b69-b5a2-8725a4f6d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b16d03-955a-4d68-a2cb-9a80721a0754",
        "cursor": {
          "ref": "4f431523-90b3-4704-ad25-144a16c4ce84",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ad8b1dd4-dd4f-4189-9b11-522d236d5938"
        },
        "item": {
          "id": "17b16d03-955a-4d68-a2cb-9a80721a0754",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa34d275-3c8b-4774-a733-d94799fb671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba6c1f0-0d94-4886-855b-4e92cd126fae",
        "cursor": {
          "ref": "f4541586-97dc-42f9-a81e-7cf293c0dee7",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2dd0b033-02f6-40a7-949e-4038ada9e1bc"
        },
        "item": {
          "id": "6ba6c1f0-0d94-4886-855b-4e92cd126fae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "afc03ba5-06c3-4964-a3e8-836eef98f350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf7cf2a-13c2-4a64-b4b2-bcbe6c89ebd6",
        "cursor": {
          "ref": "f547cb1c-cc31-43c6-b409-d62df56ea5df",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9aacbefd-7279-421a-bf65-62791e1df3a0"
        },
        "item": {
          "id": "7bf7cf2a-13c2-4a64-b4b2-bcbe6c89ebd6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "36853e43-29cc-4899-9edb-b56182a16093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be412150-ee42-416b-a921-0f43c200a32b",
        "cursor": {
          "ref": "644dde53-5795-414f-b902-e8fff458b99b",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "01ddb59c-9aff-423b-a68c-735563347337"
        },
        "item": {
          "id": "be412150-ee42-416b-a921-0f43c200a32b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "33fff981-a58a-4ef6-895d-297c4bdbb740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2aa3f7-ae7c-4fb0-b24f-15d161ce4aa8",
        "cursor": {
          "ref": "996afc68-e3e0-48bb-8480-6eea806174a7",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "79e9578a-0adc-4b05-8e34-90e6480e0cc4"
        },
        "item": {
          "id": "fa2aa3f7-ae7c-4fb0-b24f-15d161ce4aa8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ec6c7fd1-240f-4a6b-8a95-0f49c0625e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcc8f02-7c75-4ec9-8e97-2ede8b862969",
        "cursor": {
          "ref": "21583908-a250-4c38-a183-46cf3c1a1273",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b89d9792-8119-4fd3-96a9-8d3daf261a48"
        },
        "item": {
          "id": "adcc8f02-7c75-4ec9-8e97-2ede8b862969",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d414ef29-3b68-4ce3-9883-254921db4536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5441d5-354b-4c97-8b0d-969d24bf3cc9",
        "cursor": {
          "ref": "0a59335a-4603-4a4b-8576-5af5a91d9782",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e37bc47c-4433-4997-a8dd-85a2e8aee55c"
        },
        "item": {
          "id": "7a5441d5-354b-4c97-8b0d-969d24bf3cc9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7003d7da-86bf-4fbc-8db9-53c6aacbb975",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cda92e-cdda-4954-9e7e-6cf1d1cb778a",
        "cursor": {
          "ref": "e6d97ce9-4f47-4c01-9c90-a39b209936ce",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a2359db8-4651-4e4b-a5a7-9004a0fb165a"
        },
        "item": {
          "id": "16cda92e-cdda-4954-9e7e-6cf1d1cb778a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "295e7539-8213-4e8e-a5ff-59e923f3b256",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6482a0b1-0ba9-4ce5-98a4-a35ede57eddc",
        "cursor": {
          "ref": "62b930c8-4060-4431-b0c3-273a1922c352",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "033f0269-4702-4e6a-901b-4d9e5c2a329f"
        },
        "item": {
          "id": "6482a0b1-0ba9-4ce5-98a4-a35ede57eddc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "488c77cc-c224-49d4-b0a1-2f05a78382bd",
          "status": "Created",
          "code": 201,
          "responseTime": 2451,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "6845f18a-55dc-423b-931c-f73a3beeb120",
        "cursor": {
          "ref": "12ac4960-52e3-4fec-b897-021780a281cb",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3c652331-ef5b-455a-a8eb-40d4c8359efd"
        },
        "item": {
          "id": "6845f18a-55dc-423b-931c-f73a3beeb120",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "550676bb-c980-4451-ae7a-1db810af8ea3",
          "status": "Created",
          "code": 201,
          "responseTime": 2199,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "fa1e336f-bbb4-47b0-a7b7-d65d8b4f8b3f",
        "cursor": {
          "ref": "f837eeb3-2273-41ad-8259-838392f3d412",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6f764e32-30f8-43b0-bba0-fd3805d3d14b"
        },
        "item": {
          "id": "fa1e336f-bbb4-47b0-a7b7-d65d8b4f8b3f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "37d20466-3ac8-4038-8dba-66c743eb8a1f",
          "status": "Created",
          "code": 201,
          "responseTime": 2369,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "28dfe1f3-4158-4a88-93de-75ded721b92a",
        "cursor": {
          "ref": "5bd19037-e803-425f-b4eb-29632cf2c448",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "415a6f35-1421-488d-b2f2-e18eccff46e3"
        },
        "item": {
          "id": "28dfe1f3-4158-4a88-93de-75ded721b92a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ab6ddf54-7b29-4df9-9401-11e9fda86439",
          "status": "Created",
          "code": 201,
          "responseTime": 2282,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c3deca98-408b-4680-aacb-5e87f06f4a26",
        "cursor": {
          "ref": "2b63ea69-db3c-4576-9447-6a2697c6f52c",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d7e17785-882c-42ea-a0ee-c2afef79a9a9"
        },
        "item": {
          "id": "c3deca98-408b-4680-aacb-5e87f06f4a26",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "53118188-bb38-449a-9868-69d5e79b33c4",
          "status": "Created",
          "code": 201,
          "responseTime": 2259,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "55d856ee-7a63-471c-9a1a-19506e55f7f5",
        "cursor": {
          "ref": "fad3b933-c9b6-4967-8dc1-b51fec1fc961",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ddcd5d0b-66e2-4995-a66b-d5eafe8b97bc"
        },
        "item": {
          "id": "55d856ee-7a63-471c-9a1a-19506e55f7f5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "133d616b-c005-4830-b69d-8a774d8f23de",
          "status": "Created",
          "code": 201,
          "responseTime": 3146,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "1f209bed-51e8-4323-914a-83463f939181",
        "cursor": {
          "ref": "bcfaf575-d92f-44b7-829f-6d173f1de1f0",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41c88492-1f5d-411e-896c-638f17be9e93"
        },
        "item": {
          "id": "1f209bed-51e8-4323-914a-83463f939181",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d30dc6e5-85d3-48e1-9f66-de8ba5e61dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f209bed-51e8-4323-914a-83463f939181",
        "cursor": {
          "ref": "bcfaf575-d92f-44b7-829f-6d173f1de1f0",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41c88492-1f5d-411e-896c-638f17be9e93"
        },
        "item": {
          "id": "1f209bed-51e8-4323-914a-83463f939181",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d30dc6e5-85d3-48e1-9f66-de8ba5e61dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e115d5ad-40ce-46a0-8144-40f31b0c51c8",
        "cursor": {
          "ref": "90ad7f58-c0d6-4d3d-8e47-f428b2225eba",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0875b6a1-96e9-48fb-bcae-92afee843811"
        },
        "item": {
          "id": "e115d5ad-40ce-46a0-8144-40f31b0c51c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c523359c-7979-4be2-8f1a-f89146939c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005e1267-f55d-4389-a07a-27c31c2b0761",
        "cursor": {
          "ref": "6f31489e-2907-4efa-897b-ae9a1b122420",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "68730518-d632-4df5-a5bd-f7d97fae62d2"
        },
        "item": {
          "id": "005e1267-f55d-4389-a07a-27c31c2b0761",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e1b56e30-338c-444e-83ae-9e6a03d60b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed801e1-18e8-4271-990e-dcabc0fb8f39",
        "cursor": {
          "ref": "ef2daeae-ca8b-472c-bce8-b3b2fd6cd113",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "13d23940-ad1b-49e9-933b-96aaf19a6de3"
        },
        "item": {
          "id": "fed801e1-18e8-4271-990e-dcabc0fb8f39",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "93b108aa-fc60-4801-905b-479e27e1ae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850f0673-5372-444b-8762-fcc45078717d",
        "cursor": {
          "ref": "65b61853-d00c-4141-8f3a-630b2a8e0afd",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a4cfcebd-5b22-4e38-ba44-d8b47b2d3257"
        },
        "item": {
          "id": "850f0673-5372-444b-8762-fcc45078717d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a65154b1-b922-49a6-8cb8-cbee8fdfe4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ebd282-1b57-4e67-85c6-7e32a8ba5faa",
        "cursor": {
          "ref": "74e15201-edce-45ef-80eb-8bff7eb158a4",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b272b9bc-5cc2-4f2d-afae-e07f1492d686"
        },
        "item": {
          "id": "c2ebd282-1b57-4e67-85c6-7e32a8ba5faa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1a1fe0e-ac49-4016-bb73-4911491d2a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16317100-bc02-47fa-8fe6-fa42d6539846",
        "cursor": {
          "ref": "0696cfb4-b490-409a-8f44-3055c96d91d6",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4da6ff23-652a-4ad1-94db-3ebb88609755"
        },
        "item": {
          "id": "16317100-bc02-47fa-8fe6-fa42d6539846",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "762fe2fd-329f-4941-856e-215d76c86e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2d14a2-4aae-4f00-bb3d-2f03e4503464",
        "cursor": {
          "ref": "eaea1316-648c-4b63-bc96-e32d72484010",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fddbaccf-c984-4daa-8a1b-225909fb1979"
        },
        "item": {
          "id": "da2d14a2-4aae-4f00-bb3d-2f03e4503464",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e9ce5e06-7680-475a-aab1-3beceebcd338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80731585-7b7f-4285-ad4d-5d0512b0642b",
        "cursor": {
          "ref": "1f1ea4be-666b-401a-a4cd-32384118c67f",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1eac05f1-9dfe-4e52-ac69-3551cbde3ef5"
        },
        "item": {
          "id": "80731585-7b7f-4285-ad4d-5d0512b0642b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "693d6f9b-874f-49aa-8104-a41f8934d067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48c7641-b1ac-4836-a3ca-c94e9046305b",
        "cursor": {
          "ref": "2e5b6d1b-1797-46f3-bbe9-13495a80d7c0",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "846fb41f-b7b4-4d50-97fc-653b37c90f3d"
        },
        "item": {
          "id": "c48c7641-b1ac-4836-a3ca-c94e9046305b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5e202eff-dc6b-4c3d-8e73-7322632676ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef594d53-2f8d-4120-bafe-5eee2e81cc00",
        "cursor": {
          "ref": "914d1a4a-a77b-470e-9aa3-39404d3a9ccd",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1adc9ea8-95d0-4fdb-a030-7a6020869a87"
        },
        "item": {
          "id": "ef594d53-2f8d-4120-bafe-5eee2e81cc00",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ff7902d-31ca-4475-9442-bdfa15760b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5965df4-bf8c-4e68-b25c-adcb37fb5edb",
        "cursor": {
          "ref": "5206e00c-9b5a-406e-8482-438693087b26",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83ff787e-ebe9-423c-ad4e-4800f5f28bb1"
        },
        "item": {
          "id": "b5965df4-bf8c-4e68-b25c-adcb37fb5edb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c13e87dc-2fde-4211-ac20-c32ed5021fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7696698-f778-4d19-ac34-21d17fe6119c",
        "cursor": {
          "ref": "546e74c0-dd82-4f5d-84d2-5be5e5a3aa79",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59579487-1e8b-4737-98dc-b7929def14fa"
        },
        "item": {
          "id": "a7696698-f778-4d19-ac34-21d17fe6119c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4efb9b6d-6256-4fe6-aee8-ab1977f6afb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb89c15-1142-406a-9ca8-88347271ad84",
        "cursor": {
          "ref": "b8da7d31-efc4-4aec-9c00-7fc68f9c23fd",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8dbe56cd-7280-4b82-ab72-0abdb47e3fb4"
        },
        "item": {
          "id": "bcb89c15-1142-406a-9ca8-88347271ad84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1351e579-25bf-4245-bb7d-8442df7bf0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908be3e2-67b1-4e85-a949-7d2bc01f2e82",
        "cursor": {
          "ref": "bc282bef-33f4-4dd3-b807-179f062d48d8",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5f44ddc0-7c1d-414a-9fcb-021ed3bd7bb3"
        },
        "item": {
          "id": "908be3e2-67b1-4e85-a949-7d2bc01f2e82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0434fa56-91ce-4d43-b85f-97ecef45f36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d4d31-2dca-458f-a7f9-3a9170c07692",
        "cursor": {
          "ref": "98b47189-c691-4ef2-ab03-f532bd185359",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f6bbd490-e429-4d08-8da9-85ade4764afb"
        },
        "item": {
          "id": "431d4d31-2dca-458f-a7f9-3a9170c07692",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94ad2884-5401-4c47-97fa-6feaf3526c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f0aa05-0a91-4c93-bd96-29ae81e76f65",
        "cursor": {
          "ref": "59d69dfc-f8b6-446e-aa60-40c484f91972",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4420d9a0-2221-4fa0-bf2f-1732bab6de15"
        },
        "item": {
          "id": "19f0aa05-0a91-4c93-bd96-29ae81e76f65",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f1f03b37-5a3b-4468-8b69-136d28b8f2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a7300-6cf9-4d91-be8f-e7ae803856e4",
        "cursor": {
          "ref": "987a22e0-502e-40e1-b3eb-549b4aca0c9f",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5eb0687f-4d98-4b5c-a6e6-7e522e1f41fc"
        },
        "item": {
          "id": "4a5a7300-6cf9-4d91-be8f-e7ae803856e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00f1c60f-17ed-44d0-8921-efc35ac6d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c072e371-8f47-4799-a449-88c3fb777652",
        "cursor": {
          "ref": "e87570c0-7c32-4506-a03c-2c40315f4a38",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2852c891-5e3b-44d9-9701-816339610e69"
        },
        "item": {
          "id": "c072e371-8f47-4799-a449-88c3fb777652",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2cd0a2a2-97a0-4831-9dcf-ca69af213e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ca8b2-4fd8-445f-a9d8-6dcb73fd036e",
        "cursor": {
          "ref": "0260490d-4542-471b-925a-1baf648d09bb",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c42b5f61-b87b-4eaf-ae1d-a250e58336c9"
        },
        "item": {
          "id": "322ca8b2-4fd8-445f-a9d8-6dcb73fd036e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3ed944fc-c5e2-44f7-aff4-c91049652e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff90276-7dae-4a4c-8e71-2cbdd596a508",
        "cursor": {
          "ref": "8449399b-2fbd-4210-b385-5d09481f5629",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b65deb98-1b67-479b-8a21-c6a09bde7196"
        },
        "item": {
          "id": "dff90276-7dae-4a4c-8e71-2cbdd596a508",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c576d449-56ad-45a2-b52e-b4c7414b7fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0877d7d-b4da-4c37-a127-2262c25d2e47",
        "cursor": {
          "ref": "b4a267ed-a5e3-40a8-a080-aab504bcb69c",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eda7e427-78d0-4119-b32e-6da9b655516f"
        },
        "item": {
          "id": "e0877d7d-b4da-4c37-a127-2262c25d2e47",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d5684203-bc22-4912-9a7d-1505d2190812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12153a6c-a887-4544-8da9-0d54ac1e1287",
        "cursor": {
          "ref": "695c6a4b-09dc-472d-948c-c39ca440e8c0",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4c9d85b-ae4d-4797-886a-1128ebaa3ea6"
        },
        "item": {
          "id": "12153a6c-a887-4544-8da9-0d54ac1e1287",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6bfb2f85-0804-4ea6-9cc1-b44169f59230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f14aa01-47bd-4ae3-9596-8ff4e8ede749",
        "cursor": {
          "ref": "57ea445b-6538-4082-928f-36f435dfc26a",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "71dc73b1-8df1-4a3b-a9d5-db60f4b2ba36"
        },
        "item": {
          "id": "8f14aa01-47bd-4ae3-9596-8ff4e8ede749",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78f29a3a-e15e-41b3-b7f1-51e554df3734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9ed730-d454-457c-8da9-8bdef4388d88",
        "cursor": {
          "ref": "3935e8bd-a447-4982-bb9c-a3027ff23ac5",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9b268cfe-7fa4-465f-886a-adff60e12b76"
        },
        "item": {
          "id": "2a9ed730-d454-457c-8da9-8bdef4388d88",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b245afd1-d00f-447b-bb55-f5a78c943ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbcee0e-9a35-4bdb-a458-309dbcdba0c0",
        "cursor": {
          "ref": "c1f516b6-76dc-4a87-b32d-d4e8b71753aa",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bb8196a8-9273-4455-8a7f-4f287c403806"
        },
        "item": {
          "id": "3bbcee0e-9a35-4bdb-a458-309dbcdba0c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "048e8f37-295f-4061-8569-06f8d5724baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0d4852-445d-4280-85af-631b981ceb7b",
        "cursor": {
          "ref": "abe4e429-a2e5-46f8-9f67-7336fa5d4f35",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d7290b7-b200-46de-89b2-0dca27991a95"
        },
        "item": {
          "id": "ff0d4852-445d-4280-85af-631b981ceb7b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1d007395-3c69-43da-b8d6-c8579a90ffb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d913ac6c-9303-4969-b5d8-95f020811965",
        "cursor": {
          "ref": "11b8c009-37c1-4268-8796-676e1abe29ea",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6f5b088-3f73-451c-abbc-8cb38d232038"
        },
        "item": {
          "id": "d913ac6c-9303-4969-b5d8-95f020811965",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49354984-c6a0-4437-9206-217c372513aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09558807-affb-43e3-8ecb-c38cf2dbcc22",
        "cursor": {
          "ref": "b55ddec8-c848-4ff3-b1d2-e972c4d80591",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "97071ebd-72f2-4610-819e-3e09311eb03b"
        },
        "item": {
          "id": "09558807-affb-43e3-8ecb-c38cf2dbcc22",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af90d70b-7e63-41ea-bb29-be08d29501c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb78f0e-4056-4ec4-a3ba-a169bf57c529",
        "cursor": {
          "ref": "d28da636-b6f0-4b28-8973-637f26dd2323",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "439f5da1-1375-4266-9e31-42f9e50d769f"
        },
        "item": {
          "id": "1fb78f0e-4056-4ec4-a3ba-a169bf57c529",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aee3ee38-c2b2-42ec-a88a-00c01fa1315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a1a06b-5b8a-47a2-8ce1-2092d0a2d892",
        "cursor": {
          "ref": "56b4aefc-1e7a-4cb3-8917-b4a3d6ce52ce",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ad10363e-a728-4461-8761-eb71d73a0fd5"
        },
        "item": {
          "id": "e5a1a06b-5b8a-47a2-8ce1-2092d0a2d892",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d5871e99-f7b0-4e34-b5ff-d26b3dd48c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2e8452-36e4-424a-8099-018b2182a9e9",
        "cursor": {
          "ref": "eab4c56e-a72c-4e36-8921-e93a1ab64ea9",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6b27dd52-a149-49e4-a173-f5c2a9b8d39a"
        },
        "item": {
          "id": "1c2e8452-36e4-424a-8099-018b2182a9e9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ed67a68b-9876-4397-a93d-ed4bb149c929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1131a3b1-e1ca-4b20-85e3-056f36d7ada2",
        "cursor": {
          "ref": "60fc58db-728e-4bcb-8cdd-e50b1a8ff9e5",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a742a803-b5f2-4704-aa64-e30e729b9faf"
        },
        "item": {
          "id": "1131a3b1-e1ca-4b20-85e3-056f36d7ada2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c31e5b8d-ae31-46a0-9d46-1b0defc7dfa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb1e356-0eda-48a2-9659-a58a7b8d0180",
        "cursor": {
          "ref": "d4287c5a-1e60-454f-9b65-6cf23f55d6ff",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "13276ef5-29e6-48f1-9af0-8985d5d0d65c"
        },
        "item": {
          "id": "edb1e356-0eda-48a2-9659-a58a7b8d0180",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a3149512-65ab-4fe5-b4d6-06fb2e8efc7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b39292-cc09-4953-8f27-c486bdb05e27",
        "cursor": {
          "ref": "c70c4dbc-d128-4f42-bd87-771d44f2d83d",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e882f3f6-f959-4e71-b3ea-060bf0245729"
        },
        "item": {
          "id": "22b39292-cc09-4953-8f27-c486bdb05e27",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "043fb321-5ce0-4363-a00a-575c7a4128ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b39292-cc09-4953-8f27-c486bdb05e27",
        "cursor": {
          "ref": "c70c4dbc-d128-4f42-bd87-771d44f2d83d",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e882f3f6-f959-4e71-b3ea-060bf0245729"
        },
        "item": {
          "id": "22b39292-cc09-4953-8f27-c486bdb05e27",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "043fb321-5ce0-4363-a00a-575c7a4128ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a72fd-e894-461b-9d25-e525c5c0720e",
        "cursor": {
          "ref": "3b1ea836-50c5-4985-90ec-6b75ce7aca2e",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45436899-4985-4854-bb4f-4aa7f6e8a8f0"
        },
        "item": {
          "id": "417a72fd-e894-461b-9d25-e525c5c0720e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "999f5a1a-1f0a-4397-8a2f-60b1d901c117",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 317,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5e438448-dae6-49ac-8f04-b13c2d9217af",
        "cursor": {
          "ref": "40de5889-c941-4114-ab18-59fc6a43d678",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23b70903-de56-4006-9247-4b6888975c4c"
        },
        "item": {
          "id": "5e438448-dae6-49ac-8f04-b13c2d9217af",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0adec521-627b-4fcb-bb9a-b21a4529a4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39aa95a-ae0c-4077-a4fe-080e161f2718",
        "cursor": {
          "ref": "c804945e-3253-4c3e-82c5-b1302ef7a76e",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9c4492e-de13-4cdb-b97d-ad0246773403"
        },
        "item": {
          "id": "b39aa95a-ae0c-4077-a4fe-080e161f2718",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fb2ddd1b-f706-4a02-8ab2-fc8d0a47b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8601ef9a-a24f-4a22-8c69-6aa40ff99158",
        "cursor": {
          "ref": "5594d482-e1fa-47f4-b45c-9abd6dcb0ab9",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d844d49e-cbe4-441c-88d1-a27eb655ba98"
        },
        "item": {
          "id": "8601ef9a-a24f-4a22-8c69-6aa40ff99158",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14f776a4-ec32-4881-b40c-b583bd8f9ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07da1112-283f-4e82-8cdb-0575bd184f95",
        "cursor": {
          "ref": "58c64e00-bba9-4eb0-9740-3b1156999019",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8cc38ad7-d0e6-4328-b06f-24ed88a3207e"
        },
        "item": {
          "id": "07da1112-283f-4e82-8cdb-0575bd184f95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bc0b952c-4acf-413c-ae96-381c47211e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59136af0-b960-41fb-9655-a80b50f5795a",
        "cursor": {
          "ref": "9c35fbb1-b171-4eb9-b8ae-55bad7e4108b",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "447300c3-a334-4a37-a62d-5d839d632c41"
        },
        "item": {
          "id": "59136af0-b960-41fb-9655-a80b50f5795a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "999c4818-7a06-4dc5-91a6-e5e5c8ca455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b928b1f-9c32-4e0c-b930-34a109570e8a",
        "cursor": {
          "ref": "aaf3e5d2-4857-4c8d-8189-358f68c776de",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9fbc75fd-cad0-46c6-aa90-174e0c57ffca"
        },
        "item": {
          "id": "7b928b1f-9c32-4e0c-b930-34a109570e8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "726af0c5-e653-4ef9-92e3-f6057342aa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc4181-2234-4b36-bb22-da174d278a68",
        "cursor": {
          "ref": "424b6a33-291c-45c3-94fe-8cc45ce06d20",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dc4bc507-6d0a-4f9b-8378-fd36bfd6fc24"
        },
        "item": {
          "id": "4dbc4181-2234-4b36-bb22-da174d278a68",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7f63d201-2b7e-46ba-a192-f1c69ef26675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ed327a-8e20-4b5f-94d8-612f836cb8cf",
        "cursor": {
          "ref": "d721cba1-4c76-4256-bda1-2a87f635b156",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "991c77e9-96ef-47b0-8138-3a4c01569667"
        },
        "item": {
          "id": "33ed327a-8e20-4b5f-94d8-612f836cb8cf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "53639054-7fed-499c-8835-6cb95332aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ada7489-223b-4ac1-98c9-a4df3332d3c7",
        "cursor": {
          "ref": "f7816449-5391-4a48-9b9a-045ff961e9a3",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8971fb4d-ca29-4268-8d7e-30adc4bcffec"
        },
        "item": {
          "id": "5ada7489-223b-4ac1-98c9-a4df3332d3c7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "237d3910-fedd-4fcd-a03f-1c7703bde5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d668d9-86c1-426e-a63e-3664aa477b3f",
        "cursor": {
          "ref": "81791783-7498-44e8-a0b7-622e75169603",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9b6b0306-b633-40c3-b61c-64f39a6bdf95"
        },
        "item": {
          "id": "f0d668d9-86c1-426e-a63e-3664aa477b3f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ee1eaffb-7fc0-4642-9121-6c2e72bcaf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dbd0b4-1118-44ab-ace3-917da3d131c7",
        "cursor": {
          "ref": "c8b16682-8e81-4140-9c3b-fdb5164e51a8",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "577c886f-a5d6-43ee-82af-2ca87b651f01"
        },
        "item": {
          "id": "e1dbd0b4-1118-44ab-ace3-917da3d131c7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5a44c696-4737-404a-8b7f-8730e46e17c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d4923b-9a2e-4433-b9ad-c41266883990",
        "cursor": {
          "ref": "81e2f599-aceb-4d6b-b184-1a9fd56827b6",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6c7f5f54-03b3-4f47-a793-bbbf8ddf3a7d"
        },
        "item": {
          "id": "44d4923b-9a2e-4433-b9ad-c41266883990",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8f398afc-8ce6-4780-b05a-89cf046e3571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6470135-36af-4def-b33d-b18dcaf63d56",
        "cursor": {
          "ref": "39053ca6-3178-4e71-9deb-2f60e89332ab",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d06847ff-d50c-48da-8da9-31e52df9c20e"
        },
        "item": {
          "id": "f6470135-36af-4def-b33d-b18dcaf63d56",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fbfa09b7-87d9-4c2b-8f95-94cdb7d88060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f391d22-754e-4dd3-acfe-8738c4438a04",
        "cursor": {
          "ref": "c4fd42a1-d755-4b94-a652-a2e21e57422c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "19581937-ce5a-4578-82e8-e62f78d1873d"
        },
        "item": {
          "id": "5f391d22-754e-4dd3-acfe-8738c4438a04",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "70ac614e-6dd4-4334-8bcf-129fe290892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1dc947-f15e-44b7-8a73-0edfcfba3009",
        "cursor": {
          "ref": "8e2d6382-7247-4c20-b116-f36136946994",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cce0459f-23ca-4356-89e7-ad035a545235"
        },
        "item": {
          "id": "df1dc947-f15e-44b7-8a73-0edfcfba3009",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a1dcea38-f76e-41dd-b5f0-b84472d3a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caa6605-57ea-4418-a542-0ad85319c667",
        "cursor": {
          "ref": "a73f88d0-16cd-4d9a-80f4-f42d1b92de24",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3fc480db-74a3-44bb-b9be-1e69dab58a83"
        },
        "item": {
          "id": "2caa6605-57ea-4418-a542-0ad85319c667",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da276593-e5c4-4c46-852c-27579c5972cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d6820-8ea0-457c-b5bb-06485becbee7",
        "cursor": {
          "ref": "678b4465-2b3c-40a5-9648-b4b3f987d451",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1bad201d-48f5-485f-a1e1-a231a2ad7425"
        },
        "item": {
          "id": "779d6820-8ea0-457c-b5bb-06485becbee7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "be9b42a6-24fc-4157-af86-789fe6df3fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2ba047-8f13-427f-9b29-78463d34f909",
        "cursor": {
          "ref": "4b6ea3b6-ece1-4b7a-a3da-64010e9df520",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ffb824d3-554c-4fc6-9f9a-f94dd4ec7575"
        },
        "item": {
          "id": "ce2ba047-8f13-427f-9b29-78463d34f909",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "650b0a53-947e-4549-99c2-a1e99be356ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ead6f6-7f68-4d22-a5c8-cbccdb0aaf27",
        "cursor": {
          "ref": "61f8fded-81c0-45cc-8b0d-2c91aced276b",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3827ff29-73c6-4e15-a09e-ffe110e86bf5"
        },
        "item": {
          "id": "46ead6f6-7f68-4d22-a5c8-cbccdb0aaf27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d2a71a6d-02bb-403a-be97-44dae1067819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d410909-c752-44b2-9239-0bd5fdbb884c",
        "cursor": {
          "ref": "2b6d98d1-a93f-47b9-b5cb-9102110aff0f",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33c896f9-618c-4fed-a5f8-150b8e5997a3"
        },
        "item": {
          "id": "9d410909-c752-44b2-9239-0bd5fdbb884c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "253c385d-5336-4ee5-9b35-c4266e6941d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd51728-2010-4afc-9203-8ba1f06e513a",
        "cursor": {
          "ref": "5a810ba1-1866-4023-b1ab-d53a37a4dfaf",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d7b078cb-964f-4adf-b3da-f57a58316564"
        },
        "item": {
          "id": "bfd51728-2010-4afc-9203-8ba1f06e513a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "869ab7c2-b32c-48e4-ac7c-79a21d75b91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10683abd-bada-4ca2-9b23-cf9a5698f77d",
        "cursor": {
          "ref": "338a892b-b115-4a73-82b8-b7489a2c1509",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e56550f8-72cd-41f7-8594-4350d8170bc4"
        },
        "item": {
          "id": "10683abd-bada-4ca2-9b23-cf9a5698f77d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7e569627-a5c0-4f27-aa9a-660b96955ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afa424b-c603-42ed-b535-9169b7cc126c",
        "cursor": {
          "ref": "6a95766c-62ee-4649-9581-3fca4a60c312",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e5f001b6-8325-4acf-b8b6-7d426ddcae51"
        },
        "item": {
          "id": "9afa424b-c603-42ed-b535-9169b7cc126c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e875be3d-06f6-4ef8-bb01-b1e2aff42972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa97a8a-433c-4e95-9d87-0f35879bbc32",
        "cursor": {
          "ref": "817c395a-2796-4804-88e5-de5e44bba0d7",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7af3030d-fa05-435c-a20a-883935b4631c"
        },
        "item": {
          "id": "bfa97a8a-433c-4e95-9d87-0f35879bbc32",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7f69c677-4601-4685-ad88-be2bb868b8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b950c4-c291-4a87-ac76-9d2a87086f86",
        "cursor": {
          "ref": "7e95da68-0a64-41fd-b86b-39ec7c9dedc0",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ec0216ea-d524-423f-9df8-6e48e7ab6c35"
        },
        "item": {
          "id": "d7b950c4-c291-4a87-ac76-9d2a87086f86",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f7b4f257-924b-47d8-aef7-6bd155a9c1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6417f607-9462-435d-926e-ada7e96267a2",
        "cursor": {
          "ref": "e8a794ec-5a5d-4dd8-99d3-23c8d670d455",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86af6d4d-829e-4aa5-af99-5cc898fb63a4"
        },
        "item": {
          "id": "6417f607-9462-435d-926e-ada7e96267a2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "09b88797-856d-4240-ba32-274cee1eeeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4270b14-d481-457f-b887-d37be79b2375",
        "cursor": {
          "ref": "1343c3c8-4a85-4538-b587-b2e1d1576518",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "947db905-9e7d-4e77-8358-2d1da3e615e5"
        },
        "item": {
          "id": "c4270b14-d481-457f-b887-d37be79b2375",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "592169e9-84e3-46c7-823a-7733ba867756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8702a938-6b01-4864-8651-e222a493f6b1",
        "cursor": {
          "ref": "93774b67-7ae1-455d-a616-df056a666c7c",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2f036f0b-5dc8-4fbe-8a57-5540b5a8dec9"
        },
        "item": {
          "id": "8702a938-6b01-4864-8651-e222a493f6b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7b7fab62-9918-4ccd-b751-406e67b65498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf81c5d-b54c-4434-8763-996584767857",
        "cursor": {
          "ref": "b2950a65-a6e9-4e2d-a5b4-4494992bc915",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "564f8fb3-901e-4b9a-925d-4a772dcf3b2b"
        },
        "item": {
          "id": "caf81c5d-b54c-4434-8763-996584767857",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f0415ece-6951-4a35-8cd6-d1c6ef4b36c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead9c3e5-0987-46d2-9fd1-b614c5f52948",
        "cursor": {
          "ref": "b7791a60-3fd4-4935-86e8-d3ddd5b2e141",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f4580fc3-f2dc-430c-8812-cedf52102fe6"
        },
        "item": {
          "id": "ead9c3e5-0987-46d2-9fd1-b614c5f52948",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e7afccbc-e10a-4071-bdc1-59bd0975b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d6dbd3-ece9-42f7-85e7-dfdd02e56e23",
        "cursor": {
          "ref": "40a49ac9-c76e-4e6c-8978-74c4416650a3",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0ff16bb1-3dbf-4d5c-a78f-08183933ae1b"
        },
        "item": {
          "id": "f9d6dbd3-ece9-42f7-85e7-dfdd02e56e23",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8960fdc5-89c6-4343-965a-0f191549a0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fd7057-d021-49de-9c5b-578ae693b6a2",
        "cursor": {
          "ref": "4daee042-22d5-47e2-a5d9-ecf38e8690ae",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8c70b365-9ab5-48da-b586-0546d826988e"
        },
        "item": {
          "id": "59fd7057-d021-49de-9c5b-578ae693b6a2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3f01e3de-b1a7-43d6-9791-fd9b57af97e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c693bc-d236-43db-a9bd-2ddd4e73d3a9",
        "cursor": {
          "ref": "74595648-93e8-43ff-9b7a-289adedd27ea",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ebf7805c-afbe-4b01-a79d-4aa0ab3cc723"
        },
        "item": {
          "id": "a1c693bc-d236-43db-a9bd-2ddd4e73d3a9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6ca23d13-8733-48b5-b566-ced51ed2bac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af7e05c-1544-4c8d-ae59-bfc6a931de8d",
        "cursor": {
          "ref": "cb24ef1e-8a5b-4590-8a56-f8e33dde0e8f",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a9a0eaf8-40a1-40ea-b623-e5f2a97370f1"
        },
        "item": {
          "id": "4af7e05c-1544-4c8d-ae59-bfc6a931de8d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "07cda2dd-2cfd-44be-bfbc-97088a9eea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e2fd45-67da-46ea-8ea5-fb58a9f89b35",
        "cursor": {
          "ref": "6778104a-ba06-4098-beb0-a46d3eb981ca",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb5d2137-673c-4bcb-8235-cd49fb4d7d43"
        },
        "item": {
          "id": "11e2fd45-67da-46ea-8ea5-fb58a9f89b35",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e0a67b07-a726-4fb0-8fba-2aeb8be47653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21daa886-d677-435d-a977-cddab3d23ced",
        "cursor": {
          "ref": "56a67ddb-0b10-4bac-93b4-c7e9ac17d6b9",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ec802d87-43e6-45ee-8811-84142a49f3e8"
        },
        "item": {
          "id": "21daa886-d677-435d-a977-cddab3d23ced",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "639a2fa9-8dec-40fb-a9d5-4afe7affef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91352fe-7016-4dd9-a777-e356f0355451",
        "cursor": {
          "ref": "8931c561-26fa-4974-8242-e105e663a932",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3d66c071-589e-4312-9b40-0bf0d38afe9c"
        },
        "item": {
          "id": "a91352fe-7016-4dd9-a777-e356f0355451",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dd12b0f0-a633-4b08-838b-3f3374c2afde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c1142-8b4b-44f2-9751-2ed1b391591a",
        "cursor": {
          "ref": "7f53bd0a-7453-4ef0-844e-832140f1a56b",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "235ae4df-f8a6-49fc-aa1f-2018a296a1c2"
        },
        "item": {
          "id": "632c1142-8b4b-44f2-9751-2ed1b391591a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ac83db56-11e9-4bcd-8bae-8d657b1e70ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0c83e3-bc80-4028-aedc-bd7b06826f06",
        "cursor": {
          "ref": "0cea72c0-c3c3-4e0c-b5d4-6372667c7b31",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "de81f919-c7ec-4161-81bf-4f20f223adfd"
        },
        "item": {
          "id": "be0c83e3-bc80-4028-aedc-bd7b06826f06",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c3bc6052-01db-4e93-a2c2-9561b6107f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53f961e-d8b2-4e04-aee6-6c30a52a0c50",
        "cursor": {
          "ref": "58de1e74-8ed1-4f4f-b03f-34ba40fa1983",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0dd192f6-412a-4dc5-ab36-909ed7ae8931"
        },
        "item": {
          "id": "d53f961e-d8b2-4e04-aee6-6c30a52a0c50",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "042c1bd1-2723-4dca-b907-0610a28fe570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e093842-e161-49c5-ab4c-b182951cde92",
        "cursor": {
          "ref": "56bf3ed3-932b-48d9-9481-fdb935737ecf",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bf476c82-3e4c-426b-8bf3-7ee609dd3e66"
        },
        "item": {
          "id": "5e093842-e161-49c5-ab4c-b182951cde92",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aab597bd-fe94-45a9-940c-14db45bb47b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46166b3d-364e-48ab-84c8-f69b26d45a0a",
        "cursor": {
          "ref": "85ee2278-6305-4b82-9a1b-c3952ed2a31b",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7e09258-6543-44a6-9436-c77728a8edf3"
        },
        "item": {
          "id": "46166b3d-364e-48ab-84c8-f69b26d45a0a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dab7b08a-d249-41ba-b4d4-377c45b76147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3cc6b-0542-4089-8dab-0ec5aac45ce2",
        "cursor": {
          "ref": "e8b200b3-4dba-4f70-9c6a-ebb0a61cd797",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c096fec5-f30a-431a-9ae6-1147d36bf1a6"
        },
        "item": {
          "id": "5fc3cc6b-0542-4089-8dab-0ec5aac45ce2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5663393c-765f-4497-85f0-a39d88d5f6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83184e59-bd4f-4a07-b663-f8ff6f479dfa",
        "cursor": {
          "ref": "c4fbc30e-05ee-4108-a1ed-2c489e463f91",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9fa544df-e2d7-4ddc-9a2c-0ccc3aab08f3"
        },
        "item": {
          "id": "83184e59-bd4f-4a07-b663-f8ff6f479dfa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "34d5b520-04ec-4055-89df-3afd84222da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13648590-17f7-4653-a28f-2337a42e4f9d",
        "cursor": {
          "ref": "82ced8cb-b0b8-47cf-b246-712942ff33b4",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4722f313-8c40-421b-8e87-c0c8288287fb"
        },
        "item": {
          "id": "13648590-17f7-4653-a28f-2337a42e4f9d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9dd42108-adb3-4542-829c-ddbc586486e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2466d1-46e2-421f-bb4a-da5e7b229a0a",
        "cursor": {
          "ref": "08cfb724-2f85-4ee6-8bf0-b6d65154536d",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15871b8b-3eab-43c9-aed3-fdbbd9a78c4c"
        },
        "item": {
          "id": "ac2466d1-46e2-421f-bb4a-da5e7b229a0a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "61726326-683c-487a-a735-79e20010e07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c92837f-b42a-4c5f-a868-d80547844dd9",
        "cursor": {
          "ref": "8edf178f-1c6d-4f42-af60-2d6aaeaec0ae",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e9e5db69-1c4d-4571-b76d-115d773ea6ea"
        },
        "item": {
          "id": "6c92837f-b42a-4c5f-a868-d80547844dd9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9c07eb8b-279b-41b0-bf1a-0e1cff9aebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdd7018-96f8-48fc-be28-289de56f26af",
        "cursor": {
          "ref": "aa0f823a-7f87-484a-9996-8c2ef8257961",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "566b4b8e-0b4d-485d-a6c7-8d14bd1344db"
        },
        "item": {
          "id": "9fdd7018-96f8-48fc-be28-289de56f26af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "10955125-310e-4d9a-b1a1-f90bf5636711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce51000-5238-49b4-bcb0-5a11420fb8df",
        "cursor": {
          "ref": "af39dc0b-4314-4789-98b6-0085976986a0",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f44a7cea-0a3b-400b-af8b-b63940f443c6"
        },
        "item": {
          "id": "3ce51000-5238-49b4-bcb0-5a11420fb8df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35c0f2d8-bb5c-4530-a5a2-4b8c1cea8408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97b6433-fd5f-439a-a30f-13e8ec9888c5",
        "cursor": {
          "ref": "3e198769-fd59-4eef-bed3-f816da697dbf",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9c0e17ba-08fc-4739-bd22-f17bc99b5a48"
        },
        "item": {
          "id": "c97b6433-fd5f-439a-a30f-13e8ec9888c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5490c371-2b1f-4eae-89f3-a53081b7d332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea67ee3-5a4b-49a9-87e9-abb010532b45",
        "cursor": {
          "ref": "01cac32f-2223-4252-80f6-16d0688621f4",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "38f22f48-c2fb-49d2-a8c6-48f4dc81b136"
        },
        "item": {
          "id": "8ea67ee3-5a4b-49a9-87e9-abb010532b45",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8be47eb8-b481-4cb0-9fed-30445bfa8989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f0fdb4-ab7f-4345-b831-d027538015b5",
        "cursor": {
          "ref": "14f3567e-df52-42b6-987b-f8c9eb09eac1",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f485e0af-6348-468c-b96b-0a5b0813a683"
        },
        "item": {
          "id": "a9f0fdb4-ab7f-4345-b831-d027538015b5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "82717b46-104d-4720-93a5-c98891fba8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7a4af2-13ba-4d04-875e-b0395dee3cfd",
        "cursor": {
          "ref": "83956cd5-4b4e-4d1f-9003-c4eecdd1157f",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bd41cac9-6fed-42c2-8ba3-7136d64cc635"
        },
        "item": {
          "id": "cb7a4af2-13ba-4d04-875e-b0395dee3cfd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2b43980-454a-45ca-b4ac-b8c6668cb19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2de424-2d13-42e3-808c-7b7a51efeca7",
        "cursor": {
          "ref": "2a88840d-af61-44b8-b8ef-eb346195bdef",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e5405079-0817-4641-8bc2-e04274b12519"
        },
        "item": {
          "id": "5a2de424-2d13-42e3-808c-7b7a51efeca7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "61a867a3-a43a-4935-85b2-b78521d559db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f9241-643a-4859-8e69-4ddea9e1286c",
        "cursor": {
          "ref": "5c47c385-1122-4988-84a2-34f7ea69ad0f",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07373615-747b-48c5-8440-53a9db02d6cc"
        },
        "item": {
          "id": "fb1f9241-643a-4859-8e69-4ddea9e1286c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "91ab1ebb-f3fe-4e46-8c14-a5d4e4de003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a873c5-570f-4431-870d-8a0fbc8e99bd",
        "cursor": {
          "ref": "601b3b4e-61d1-450a-a4e3-f394cfb7106d",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d8734ab8-6bef-4a3e-b6b0-20ab72b4c49a"
        },
        "item": {
          "id": "38a873c5-570f-4431-870d-8a0fbc8e99bd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f1ff2f3e-aeec-4c96-8169-7ecfa9939ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0d301-589c-49a8-bf5d-01053887bb88",
        "cursor": {
          "ref": "e65166bb-5391-49cf-8332-6fb9e0b06bd1",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4f6ece4b-efc0-4061-a106-39de7d9f24f0"
        },
        "item": {
          "id": "3ba0d301-589c-49a8-bf5d-01053887bb88",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "255d5d3a-d42f-447a-b1da-5200c50499c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ae3aa-1112-41ee-ae07-05af14549943",
        "cursor": {
          "ref": "634428f1-0df9-486e-8971-ee11cea10e48",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "babf3b9b-ace8-4ff6-8123-8cf8cc82bb42"
        },
        "item": {
          "id": "619ae3aa-1112-41ee-ae07-05af14549943",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "01d45218-e600-447f-a18f-01282ee61bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb8824f-8933-40c8-824c-98e7ce8ef189",
        "cursor": {
          "ref": "c31e5a22-248b-4788-9ef6-9dc46b1d8c8e",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ab374062-a515-4fdf-83bc-66eebb16a73a"
        },
        "item": {
          "id": "8eb8824f-8933-40c8-824c-98e7ce8ef189",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5c37447d-57ec-4500-9b1d-e60eb3d069bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a914f0-fd1b-4a32-bf16-23ae37a09146",
        "cursor": {
          "ref": "ea1062ed-eaa3-40e8-b6aa-2bdb96031463",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "714eb4fb-b150-4efe-aeb9-e6627a5b8086"
        },
        "item": {
          "id": "26a914f0-fd1b-4a32-bf16-23ae37a09146",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a9b57c8a-859d-485f-99bb-b44668821843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1eb04c-4397-4bd6-b35b-dbf9e2eac1d9",
        "cursor": {
          "ref": "3fd31f7e-5070-438c-9308-6fbfe04fd4a2",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "74b00e9c-d0ad-4bfc-9dcd-a60546d86ce6"
        },
        "item": {
          "id": "ae1eb04c-4397-4bd6-b35b-dbf9e2eac1d9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31aa4372-d797-4b5f-b7d0-9d8186588f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f645dc6a-18f7-411c-aaa5-a00969b7d415",
        "cursor": {
          "ref": "353447ee-4161-4051-b640-eefbacc9f854",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2fc6f293-e304-419c-a33d-ac0d68a91b68"
        },
        "item": {
          "id": "f645dc6a-18f7-411c-aaa5-a00969b7d415",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dd4ea14d-5f16-4d5a-b397-46313f518aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121f5099-d972-4e6a-a702-48b7cf595764",
        "cursor": {
          "ref": "8befa5a3-bae5-435a-aa5a-75dcdee3b227",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "01c1c86a-6bdb-4728-918a-7c2c96dc5500"
        },
        "item": {
          "id": "121f5099-d972-4e6a-a702-48b7cf595764",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9c319088-8e69-42aa-8645-e0f9cf8c00e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9340f197-228f-4e09-94ac-4bba2f77ac04",
        "cursor": {
          "ref": "ef2ec4f1-b87e-4830-a866-f661980fa50c",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "648abb09-c4c4-465f-a017-d8240c85ceb9"
        },
        "item": {
          "id": "9340f197-228f-4e09-94ac-4bba2f77ac04",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba8300bc-11b5-48fd-aca3-66810584a799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0f79fd-e286-46a4-8d60-0696da8f00b0",
        "cursor": {
          "ref": "0ff0b2af-e66c-46e7-a62b-057940c74917",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e2764b2f-10ad-4db6-b0a6-4f30049a5ead"
        },
        "item": {
          "id": "2d0f79fd-e286-46a4-8d60-0696da8f00b0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "281064ec-2c62-4d9e-acf8-482641233df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd4543-47c8-4eee-843e-05cae55af3a0",
        "cursor": {
          "ref": "50010120-4522-4079-9c96-3860fcd01b9b",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "12fa0da3-3687-4dd8-84d6-9877905bbf0f"
        },
        "item": {
          "id": "08fd4543-47c8-4eee-843e-05cae55af3a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b593ac64-bb8a-4aa8-bed5-e4639fb03d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aeb1e5-e51e-4a43-84f5-3cea666ab51b",
        "cursor": {
          "ref": "838d2eae-1007-440d-b2ce-6b35422972a4",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "835fe4e4-3f9b-4b98-a52a-7dc37bce280f"
        },
        "item": {
          "id": "14aeb1e5-e51e-4a43-84f5-3cea666ab51b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3341034-1780-45b7-b02a-1d80cee767f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398ca42-5948-49a2-b771-8bd810055a00",
        "cursor": {
          "ref": "cab3646c-fa9f-479e-b637-4176e5d89a62",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "664ea895-1cd7-4a12-bb74-c97680cf26c7"
        },
        "item": {
          "id": "b398ca42-5948-49a2-b771-8bd810055a00",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3bd75cbd-018a-4dd9-a47f-8102d6bca30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a49900-ecef-4765-84bc-5230f61b8deb",
        "cursor": {
          "ref": "3d478287-e44d-45ae-979d-ee10cf3677ec",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "70ab983a-899f-4ad9-93c2-e2cb714cf1d5"
        },
        "item": {
          "id": "12a49900-ecef-4765-84bc-5230f61b8deb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "02a60f91-f825-46c7-9de8-963cdcb9d5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0778fc-0a38-4cdf-804e-bc4aa7552edc",
        "cursor": {
          "ref": "0a0ea118-a03a-437d-9f24-df6c55f6985e",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a416b8e4-a3be-40af-806e-e9c775dcb9de"
        },
        "item": {
          "id": "9d0778fc-0a38-4cdf-804e-bc4aa7552edc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e380305b-35b1-4e86-9402-44372e1f2ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6a50c-22a3-45e4-805c-77511ea72025",
        "cursor": {
          "ref": "378767ae-1541-404d-9fd5-3f1236019f3d",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "946151ce-dce7-4371-a15d-858fd20891e1"
        },
        "item": {
          "id": "38a6a50c-22a3-45e4-805c-77511ea72025",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "76f49a03-f5b0-4962-abbc-ac405db9fac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f12e22-e4cf-418f-95d4-9eba4bb9ac4e",
        "cursor": {
          "ref": "6fcfd285-07b1-49db-8f32-3c347b3ccee9",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e56030e1-ef89-4222-87ff-ff9dd26104fa"
        },
        "item": {
          "id": "64f12e22-e4cf-418f-95d4-9eba4bb9ac4e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "77410946-ac39-4618-bae9-cf4460900e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c10a6-2865-4950-ba17-9c8945fa39ca",
        "cursor": {
          "ref": "64dc0175-2724-4a0e-a930-fe748e3b2b4d",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7c1b6a4f-4a1f-4dc9-bc94-1312b1d2cb47"
        },
        "item": {
          "id": "8a3c10a6-2865-4950-ba17-9c8945fa39ca",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6049ec5c-e795-4527-b802-0e53f587836b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edfa128-0f60-4ae4-873a-d620acba3e1e",
        "cursor": {
          "ref": "16a9a51c-41c9-411f-a4b3-86333b1ce748",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9db7873e-eb48-4451-bcf0-c81a5fbc0bba"
        },
        "item": {
          "id": "2edfa128-0f60-4ae4-873a-d620acba3e1e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "00771bec-beda-4e97-a7a7-bcc4755d2f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d27c3b-e98d-422f-8bcb-9b44d96d6fc4",
        "cursor": {
          "ref": "85f875d4-6699-4ca3-a05d-4ec69529336c",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2ea09b77-efb6-43d0-b33d-143defe0d625"
        },
        "item": {
          "id": "d6d27c3b-e98d-422f-8bcb-9b44d96d6fc4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d62150d6-c036-46e8-a555-e9afbf84a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51de3949-9108-4069-bcf7-1f1dadc568b2",
        "cursor": {
          "ref": "56649662-12fc-4b3a-a24d-9a28e0eb7c56",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "16fcf666-473f-4c57-b983-74e5e9c38fd6"
        },
        "item": {
          "id": "51de3949-9108-4069-bcf7-1f1dadc568b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc2bdf06-1b04-42d4-8fab-0a4356d118e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43daa6cd-3068-4afc-82d0-002c2f42cc99",
        "cursor": {
          "ref": "eb33ae1e-00c0-45ee-8785-2e91b9fc9747",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88c54eb8-be6a-4cbd-b6f2-5e6f076529b6"
        },
        "item": {
          "id": "43daa6cd-3068-4afc-82d0-002c2f42cc99",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "48f32d49-bd2f-4d05-a3bb-3ed2382e50d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0257d9cd-34a5-4417-b595-e455f88ac8af",
        "cursor": {
          "ref": "34e9b106-dd61-4bbc-a2a2-1918e8d1c79d",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "92c1cc1b-6d9f-479c-870d-8688ff2f80d2"
        },
        "item": {
          "id": "0257d9cd-34a5-4417-b595-e455f88ac8af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9274c03f-eab4-4ad1-8d5e-e4bd752be145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb9b9f-a21a-446e-a54c-ada98b9725f7",
        "cursor": {
          "ref": "2c88c035-0595-4ff8-9888-bd6c778f0a74",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d4262cc-6b04-482f-9090-7a6d3396047c"
        },
        "item": {
          "id": "88cb9b9f-a21a-446e-a54c-ada98b9725f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "88d7f502-0d4b-409d-b262-9ae23396430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a889245-6a0e-44b3-9275-0c3cdde894c2",
        "cursor": {
          "ref": "3d9e646f-f483-4b4f-8586-3acebf8fc221",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fc8fc1e3-0dce-4d75-bacf-d0d2cb4f6b06"
        },
        "item": {
          "id": "5a889245-6a0e-44b3-9275-0c3cdde894c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d728744-88aa-4ab5-b087-26fc3c5a2d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d76d0-8cc9-4f1e-be79-6b54baf65cb8",
        "cursor": {
          "ref": "1faf6adc-0d82-436f-938e-f281de228741",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7dcfa025-e6db-4948-bd08-940e63c074cb"
        },
        "item": {
          "id": "f74d76d0-8cc9-4f1e-be79-6b54baf65cb8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "27b9d325-12d8-489e-a515-efd78108c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433c862a-1b00-4974-9d92-bc3683a6197f",
        "cursor": {
          "ref": "db3bc10e-16cb-4e14-a191-3933b2d0bbca",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "83efce87-8f4a-4084-9f06-4a61c95ce280"
        },
        "item": {
          "id": "433c862a-1b00-4974-9d92-bc3683a6197f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "155ef0bd-30cf-4c60-8f6a-4c835b909354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d4d33-fc37-4a4c-a105-34003430e217",
        "cursor": {
          "ref": "062e5baf-26a3-4008-83a2-ca241caacd0d",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0f26117d-2bab-400f-adc2-d6d110181db3"
        },
        "item": {
          "id": "453d4d33-fc37-4a4c-a105-34003430e217",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fc3c116e-a0f6-4c43-bf37-cbe2da4e7c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a44af3-56d3-4ece-bb35-251210c0342f",
        "cursor": {
          "ref": "e677a4b6-f2fc-4697-bdc1-552dbef47e0b",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6288e677-4a1b-47df-8e5b-4206289e16ee"
        },
        "item": {
          "id": "b8a44af3-56d3-4ece-bb35-251210c0342f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e429df3d-495c-4144-976f-f4b705091fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29406be3-ae9a-42ad-a934-1a09ee7f332c",
        "cursor": {
          "ref": "8f00d727-5836-4006-9d75-92fd4446e3c5",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2879c8f2-da9e-4c75-9fb5-240b329dcc8d"
        },
        "item": {
          "id": "29406be3-ae9a-42ad-a934-1a09ee7f332c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "260eaf69-c789-49f4-870c-2afabcd6a4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca2fb5d-1ebd-4a27-803e-bc95fa4630b5",
        "cursor": {
          "ref": "f78887bb-b224-4b8b-b072-016f8b5d14f9",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "89bc8b05-d243-4cf0-85a3-1cfbb670ba8f"
        },
        "item": {
          "id": "3ca2fb5d-1ebd-4a27-803e-bc95fa4630b5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e87d8e97-909e-4faf-ac89-e5c99e68859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e2ab01-4337-4248-9cf0-c045f4eb0018",
        "cursor": {
          "ref": "319f6ad8-7395-4bd2-944d-87d95855aeff",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "28257d94-68c2-4e94-9569-d7fafd84f758"
        },
        "item": {
          "id": "c1e2ab01-4337-4248-9cf0-c045f4eb0018",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "05a5eb78-3496-4830-ba3e-542ab7cfb156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9da2c4-5e3a-4a80-9d7c-657588d4e574",
        "cursor": {
          "ref": "79660fdf-903b-490c-b332-a46f6d8915d3",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9a050334-fb2b-4c31-9675-e80b84cfeae7"
        },
        "item": {
          "id": "ca9da2c4-5e3a-4a80-9d7c-657588d4e574",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6ab6d1d7-2acc-449e-832b-c0f0eb2ba81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e4273-f592-4248-8ea8-f7b7b9f90b2f",
        "cursor": {
          "ref": "b02c386a-1b4a-48a6-922a-ac3a85f8fbed",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "334ae88f-34c2-479a-97b6-35fe0a8632d4"
        },
        "item": {
          "id": "280e4273-f592-4248-8ea8-f7b7b9f90b2f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dbc5bf0d-a1bc-4880-831c-5df32294331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8df593-4ff6-4265-b0c6-63fc9a3f1d64",
        "cursor": {
          "ref": "27663186-9563-442f-8fa9-dcc6414929c0",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6c7ddf5-01a8-4ac9-8cb9-47c54f2a013a"
        },
        "item": {
          "id": "0f8df593-4ff6-4265-b0c6-63fc9a3f1d64",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b540dbd2-9d23-4b29-9bdd-461c69e1e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f04cef-6337-4efc-b2fd-1f9d4d624b3c",
        "cursor": {
          "ref": "e98fbb9f-1580-4247-8ef8-30b1adf4e0fe",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c64436c5-29ab-42ba-ab37-2c4be5af5913"
        },
        "item": {
          "id": "94f04cef-6337-4efc-b2fd-1f9d4d624b3c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "276b74d0-e09a-408b-8178-a5172d323b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b600b3ff-870e-4832-bbac-588278ee4d2e",
        "cursor": {
          "ref": "1b6b9e06-461f-4e9e-811e-9df43a12e7e9",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "233e1609-6d52-4125-b230-f5b834b0e0fe"
        },
        "item": {
          "id": "b600b3ff-870e-4832-bbac-588278ee4d2e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "47982b38-c472-4489-8fda-4db10b1adc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65c573d-431a-4668-8d54-43daa43630bb",
        "cursor": {
          "ref": "b1643d15-ec4c-4e14-a80a-5e5c20953ea4",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "128b9059-b9a5-47c0-9a1f-6d04cf0e733c"
        },
        "item": {
          "id": "e65c573d-431a-4668-8d54-43daa43630bb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54e798c6-e028-4e26-af77-e7696564e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85afb6c7-24e9-42fc-bd97-b66f04b52ed3",
        "cursor": {
          "ref": "de31ff6b-51da-43b2-acfa-878a7d07fdfb",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6b85cf79-b0d8-49ba-9a29-9b602d1938bf"
        },
        "item": {
          "id": "85afb6c7-24e9-42fc-bd97-b66f04b52ed3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb57ece5-0d7e-4302-b6df-329be2032fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e801f-e782-4336-aad8-e71354851302",
        "cursor": {
          "ref": "176928e7-b148-47cf-8c3a-bfff6497eb28",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2c5102b2-b2d2-4c0d-87e5-ba98632e7931"
        },
        "item": {
          "id": "cd3e801f-e782-4336-aad8-e71354851302",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5395ff9-eb1c-4fa1-85ff-a0a580eb3719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec5e23f-1438-4f18-90a1-bc322beaffa3",
        "cursor": {
          "ref": "ae0c3a64-81b1-4ce9-8945-fb5dbcb3c543",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b2953e15-5328-4dac-8eed-d649c8914736"
        },
        "item": {
          "id": "bec5e23f-1438-4f18-90a1-bc322beaffa3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "19dd093f-abf1-4d7f-8206-c2fdbb57e299",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297b6139-d024-414c-878f-0a15f32486db",
        "cursor": {
          "ref": "ba5bd514-7625-4f35-b25e-285c4e192bef",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1bd4f5a5-8578-4d82-9441-32e0164d3ab1"
        },
        "item": {
          "id": "297b6139-d024-414c-878f-0a15f32486db",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f24b65c2-8ed3-48c4-a3a6-ff84cbfb6519",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 315,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50466bd5-cec1-418b-bc3b-8fe7d71b3115",
        "cursor": {
          "ref": "e4faf60c-201a-4b1a-a306-23cb1f176fef",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5f98aee3-de72-4f8f-8fee-ed4fdbef5e00"
        },
        "item": {
          "id": "50466bd5-cec1-418b-bc3b-8fe7d71b3115",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c6500a3-4ec8-4ed1-9709-df4f80c726c8",
          "status": "OK",
          "code": 200,
          "responseTime": 368,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d687e6d0-e4f8-4ed6-83ba-b4f7a27f1686",
        "cursor": {
          "ref": "f90d51d2-8d8a-4ac6-a4a7-2a46f172ba89",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b59fe93f-c0be-453d-b034-21a2b37cba1f"
        },
        "item": {
          "id": "d687e6d0-e4f8-4ed6-83ba-b4f7a27f1686",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8cebb381-c622-4b31-8a9e-893906a33636",
          "status": "OK",
          "code": 200,
          "responseTime": 462,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb1faff-6064-4f12-b8f8-d359afdc0a16",
        "cursor": {
          "ref": "566b65d4-dbda-4e12-b6e8-613c15bb12ff",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba1c42df-4905-4c22-9e36-309c80ae169f"
        },
        "item": {
          "id": "3eb1faff-6064-4f12-b8f8-d359afdc0a16",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "c27aa704-b6a1-42f6-b525-630d741ad465",
          "status": "OK",
          "code": 200,
          "responseTime": 451,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7650c4-8553-4efb-b7ee-07ce5894bc2d",
        "cursor": {
          "ref": "be00a5d7-e456-4152-a8b3-120d453b0863",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "31fc9d04-9d80-4506-a3d0-aab77abc3013"
        },
        "item": {
          "id": "4c7650c4-8553-4efb-b7ee-07ce5894bc2d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "36aec754-5de1-4ddd-a827-336c021dc944",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
        "cursor": {
          "ref": "37187a55-5472-4703-ac2f-7781952dfd58",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef8d16b7-eb9c-48f6-82f7-e179db9590dc"
        },
        "item": {
          "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60dc526b-a5e2-4b77-bbb8-a7c7c16d7d42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
        "cursor": {
          "ref": "37187a55-5472-4703-ac2f-7781952dfd58",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef8d16b7-eb9c-48f6-82f7-e179db9590dc"
        },
        "item": {
          "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60dc526b-a5e2-4b77-bbb8-a7c7c16d7d42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
        "cursor": {
          "ref": "37187a55-5472-4703-ac2f-7781952dfd58",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef8d16b7-eb9c-48f6-82f7-e179db9590dc"
        },
        "item": {
          "id": "3c441102-41ef-40e5-a302-d78bf45a4097",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60dc526b-a5e2-4b77-bbb8-a7c7c16d7d42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e69098-e375-4a16-8220-df0129863fc4",
        "cursor": {
          "ref": "cd8c8f59-8393-4f46-8ca6-68348b22628e",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81172708-9001-4492-b012-6e7d2f5e0661"
        },
        "item": {
          "id": "f9e69098-e375-4a16-8220-df0129863fc4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "57bd2d41-192c-4845-a921-881d14d4d88e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 336,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40497b1f-a7d6-48f5-927c-36054f6f255e",
        "cursor": {
          "ref": "a0af7913-0b50-42bf-bdd1-089d1dccc1b1",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a92f1d69-16c9-4852-b68a-657869e27bbb"
        },
        "item": {
          "id": "40497b1f-a7d6-48f5-927c-36054f6f255e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38356f75-ace8-4286-9c73-85b205079f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40497b1f-a7d6-48f5-927c-36054f6f255e",
        "cursor": {
          "ref": "a0af7913-0b50-42bf-bdd1-089d1dccc1b1",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a92f1d69-16c9-4852-b68a-657869e27bbb"
        },
        "item": {
          "id": "40497b1f-a7d6-48f5-927c-36054f6f255e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38356f75-ace8-4286-9c73-85b205079f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7425b579-7748-434c-984d-53f17cfeee5f",
        "cursor": {
          "ref": "89e20240-5364-48fd-ad01-418485f09ccb",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba09216f-2f70-41cc-986c-c626229077af"
        },
        "item": {
          "id": "7425b579-7748-434c-984d-53f17cfeee5f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a7f863aa-db42-41fd-8aa4-4b9d92208386",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa5b34d-040f-4fc6-8d6c-4c7744b586e9",
        "cursor": {
          "ref": "d5e9e1f3-420f-4151-872b-029e340a1f9a",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f50c8d6b-f867-41e2-8926-1a284e525eb8"
        },
        "item": {
          "id": "4fa5b34d-040f-4fc6-8d6c-4c7744b586e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62ac532b-ac72-4fd9-82ce-2986141804e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa5b34d-040f-4fc6-8d6c-4c7744b586e9",
        "cursor": {
          "ref": "d5e9e1f3-420f-4151-872b-029e340a1f9a",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f50c8d6b-f867-41e2-8926-1a284e525eb8"
        },
        "item": {
          "id": "4fa5b34d-040f-4fc6-8d6c-4c7744b586e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62ac532b-ac72-4fd9-82ce-2986141804e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec7d23-38bb-40d7-81dc-5b6d10532c68",
        "cursor": {
          "ref": "c817e499-2b35-4fe8-aa3c-091a19972c77",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d2a6c783-c9ca-4b7e-92c6-3cd237ba588b"
        },
        "item": {
          "id": "17ec7d23-38bb-40d7-81dc-5b6d10532c68",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8828658a-6944-4ab2-81d7-1611c867fe7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}