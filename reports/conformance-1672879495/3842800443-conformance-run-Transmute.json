{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bd7a25fd-028a-4709-837f-27ca7b2cb197",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f0083b2-2eae-4087-b85d-1a20bcc86b1f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e14e3eb7-b5ec-4628-9b9f-7260e61cb928",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e65b8495-be6b-470f-b1bd-2582d88fc138"
                }
              }
            ]
          },
          {
            "id": "1a7f6a14-1ae7-4ad9-8de8-24538a2d3ca6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2aa93733-46f7-49a6-bd70-521876f3a934",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e99a7c17-80ac-4192-816f-28622f2fdfc5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7b600cd6-defe-4165-8ece-a6184e2bf995",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17723f6b-bdc4-4cbc-800a-acfac86f55a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97f74862-2805-4f3b-a461-ce2caf0cb03c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa3f32f6-42c2-4f8f-ae56-40b37c1aaa14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c69401e-1c43-443f-a386-8427120785ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c115687-4690-4e79-b711-3dfb8e404dea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96098149-baa2-42cb-9ad6-d9479db1e98a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e220effd-e3d5-4c29-8f52-6f56a269e336",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01f52590-6d70-48ae-8437-2e7e2defc2e1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0069cd2d-0841-47ec-9ea5-2a9dff07282c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "692fb445-d6cd-46c0-becb-3bca9b281208"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d236af9c-693f-47f6-97fe-9a67a8ffca86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "067b7010-c39d-4639-a01e-d8b9d519a3c7"
            }
          }
        ]
      },
      {
        "id": "58d90f76-f660-4a3d-8187-ff20f0cf3f82",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "62f03fb1-ad87-4a43-b92e-eefcfb3ad922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d5f096d-ac07-46b9-a5cf-7344500e091e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d41af74d-f3a0-4154-98ab-e0ce146f5c24",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5416db47-a8c2-464d-872c-68adc511346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9f40c2e-9ee5-4ac2-b4f5-947d4db1ddc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461d56b5-1e78-41b6-8408-0b203a251fb4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c2314-75e6-4e9f-a972-8f62336706c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ef1aaf-4e84-405c-99c5-03742f0dfdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02d5a4d-b2f6-41f4-a69d-f66eef4dd151",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe21872b-def7-48c0-8fdd-34eb282611ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9eba9ce-23e6-4356-800a-3b07ed055933"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c225bf77-11dd-490c-9ee7-513c90647164",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9774f354-b0f7-499d-b4b3-d666d8c632c0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60588f51-46ad-4737-8207-952e5dbe53f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b75b3101-698c-4be2-a47f-943c742e4752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9167bf-e257-4c5d-a501-5d803916b2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1f04f1-8b22-4030-a54d-a8913171154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a273433a-02ad-48ca-a29b-731e52fdade1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e877ed19-d118-47d4-ab32-b81ab4e270e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7dd5bb-a55f-463d-8ffb-e1cea7e25e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b140384e-fb6c-45e3-87a0-1582b6e08aea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "40238ae5-02d2-43c2-bdd3-644532d8cf68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72effd87-41ee-44cd-8c88-cf3c0eb8b25d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffc35eed-70b9-44ee-8fc5-0486cd44cb6d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dd3ad1f-20a8-4abf-a254-0d47ecb7b35e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f8f74cd-b97b-4b60-9cdc-32246361e63b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b71a658-58e4-4f61-b812-abab1183ee15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f2bcd191-e493-4f06-bc8c-bbfab121bbb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5edf14d6-959e-4d8f-8a48-9ac6d2d785bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab8ff30d-d238-4bd6-a2ee-b0ca7aa24b98"
            }
          }
        ]
      },
      {
        "id": "f4bb3f61-492a-48fd-aa48-234808116921",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "73e7b1b8-9961-4c70-ae5a-e47138f0f039",
            "name": "Negative Testing",
            "item": [
              {
                "id": "231ae437-f547-47a9-a718-868802cdbbc8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "31200aa8-3b07-43ee-ae40-bdf2912a22d3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf5411-4560-441a-8634-5c47c136fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd29524-d8f2-4298-ab4b-4a73388b9adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b44e13-a4fa-41da-8f5b-31a0ed8f8c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aff00411-9b36-48ba-a452-6700fc401bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cca89e-ef04-43af-9d02-2f3294e9d36c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556fa2db-3072-4d68-940e-3aec244500fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed0a540-48b8-487c-8754-aeb03838870f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9cf05d-f008-48d7-b6c8-e9994ff92c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf1c8f1-a30d-4b83-895c-b8dbf02def71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767473e6-674c-47fc-bfc6-622d155e5827",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9683c1d-fd61-4345-8294-c88a04538a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d26c5e4-2e0b-4b7e-a8b0-13bd16b945e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1802765e-b06a-479b-b233-1b36d8b8248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b28152b-676c-4643-856d-38ab0dd5b31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8e7f59-95c0-4a55-917b-40941f6ad155",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b894b7-18d1-401f-81cc-d4a0bf815334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a41463-f8c8-4cf7-b894-c182eaac0513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0e0ddc-035a-41ac-805d-9b9c1fc8aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9a31a2-8838-4b55-b54e-7a6b5a5ecae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55558742-8719-44b5-8992-f0734e96bcc0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8274ae67-31ff-4a86-899a-5c2602ecc5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b5f57d-4dfe-44c4-b12f-1671472104ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2c3b77-391e-4676-8735-5544a4a93899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0e30402-4701-4869-a254-9a044c3e7ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e5440d-d92e-40f6-97b4-72bb7ea8f6ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f03e97-3eff-4cce-901f-e3e8cd556add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d558ad0e-f061-4dfb-b147-00941c726cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c02669-51dc-415b-ab54-d28ee9457d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22187b87-3706-4063-a2a3-9d80063ff68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff61da0-df6e-43b3-848d-cec722051102",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7ecd6-e8ea-4d9b-bdfc-a1f56d92238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981ae1f5-d40a-485c-8bec-8010af8f2429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8617ea-58d1-4f18-9a64-e86be9bb9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2952e3e-0499-4c5e-be0f-7393a8a04389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc495378-b387-4800-929c-f2f2a3ce1363",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9fb912-572b-4981-84a5-e5a82c00a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a876d767-09ec-476a-9bf5-32f823f6b38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c3f960-21eb-4cfa-af73-2817b5a098f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e8e5057-3682-4f7e-95d6-6213ea7a530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734b7eb8-7d7d-45af-bf3e-40209d4ce795",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8673fd7b-3d8c-4e95-a7dc-909af47cc0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349d5513-712e-48c1-961c-2d059a5cc9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7644d2-f3fc-4b5c-ba80-c1d79e1978c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff62873-b6ab-446d-9c15-0df29d71ca96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a44cd7d-9569-478a-9a27-c257a6721983",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d1610-638d-4e5b-bf17-2c280c52a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889e741c-d5b7-44b6-9ffc-ee844ffcdfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcb0870-4278-4926-9785-15b9d1f27f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "005e2644-16b2-47fe-b8d9-8deeec74c41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e01e520-6e51-4082-905f-8e92f3ee7c49",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7993483a-a54e-4ee5-bd99-4ae099248357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6965ea51-7ae0-431b-b55e-f6583100fdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8279a9a0-e1b7-49be-8324-fb4aa28ac85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f87daa0-9247-488d-8602-7df69a312e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395e9675-3027-4464-91f9-24ed3fac8517",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ec2f4-2cd6-42b2-b167-937aa29ad585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4784659e-70bc-49a3-bb54-b9f366aedb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada249c-d89a-4832-8233-63fc2c16a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9adf4bb3-f6de-4d34-b938-b5ac4f1ffb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2913e0-4777-4deb-b245-3c0649b54098",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc7d502-dea9-48ba-8053-067dc9912aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7879cfb-c081-49f9-a6bf-9055245c8acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6c5417-2a2a-4c29-b6d8-91c78eb618d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cce9640-e0c7-451e-938a-157f29d576a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269b5cf0-0dcb-4328-ba8b-f85ed41de0fa",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea1c0b9-6ed7-49a9-bee8-bfa2a8773377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d954b72-83ea-4867-b081-9e102660f55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c223fe-bb6c-434f-99a5-03342ba84d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff2ea68-10d5-4dda-9b39-92d732d46de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e84e2e0-d39a-4e21-bf7d-f3671b889b3f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b29be-9091-46a6-acdc-ff31b68498e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8915dcde-4c6a-46a6-a58c-0cb318371e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaebf07-4927-4e13-9e00-efcb58a48262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415101fc-39f8-4917-91c3-f786a660682a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7d9ddc-33ac-4e79-9d0d-b5381e97a11d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9587c7a-7087-438b-ae7e-fc6b44b8a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5ee74e-cf55-4a91-b07c-c8a098c1095f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8358ba-ac6d-4e82-98b8-1ad4d68585fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9da2928e-2d41-481d-8f9c-85b7715f9c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff5da9c-c746-492b-9b39-6c9398f83640",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76da44a-e6e2-4329-945a-d0592e53c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602cf904-03b9-4af3-8d2b-edbe6996925f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034aae7d-9e23-436c-9770-43f3635e8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c545c2ac-7221-42cd-ba4a-49b0c505b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ea480b-ec8a-4f02-9c51-63f7400089df",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aebd6d-8507-4ee3-bf5f-2912cc6b364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778bb24e-622a-4a3e-b18f-649743182611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d9962b-9ab1-499c-a870-7554b698c913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64f4d857-8fd5-43cb-88d9-1a774643f093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b729ef2d-e26c-4346-8854-0a0124d57a04",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ead612-c0e9-4f18-8df1-60ac80ee9fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e9bc1d-baab-40b2-9f4f-e119233cb52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1eb046-e41a-4049-a7d9-187da0eba861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ae5a5b-4d83-43a3-bc12-e749fdeaddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a9235-7db6-4a3c-8d42-e126561c1861",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3512fd33-37c7-4735-94e5-d232212857b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a66a28-ff09-4bee-880b-7226a2215558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136139cc-bc79-44b9-a0dc-17168bf30642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eecd3116-1c87-4114-8ad6-b3a13392d58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d900e001-8910-4116-b5e3-2c2f4da7def7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074cbf50-b867-408c-971e-febcc6eefaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd06077-1002-4f7d-b0ba-991ae7228ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d98c8f-3d29-45ad-b9c2-98ec35229f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ea6a40-1450-4f5d-afab-83ea31bf6609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f963cf57-8284-4755-a306-d3a2ab34348f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a438d6ce-7166-48a2-8d40-596aac35d2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078c7170-dfe1-4ac7-929c-f2e60b8b54b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70e810-3b1b-4a2c-aaca-4872736abacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a64b4a-19c5-4b17-8ad6-8f69d7316376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3092255c-d972-4546-b68a-0c701542a611",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77aa339-4db0-4488-9021-347df2d5b9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d535096-f060-4ca2-bfbc-dbb8c6d5d42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5dda80-bbfb-4ac1-9dca-ecfb9706831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fb1abf-3963-444d-8d24-914d99b4f597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a237be-28ad-432e-bed4-d78ffcc58936",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4219f97-92d4-449e-8073-12bd7f38c374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e83b395-bd8a-41af-b2eb-841b61cdc0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ef2b3e-666a-48a0-a7f2-7b34ce69b618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffa9466-d784-4457-a6c1-db4e2c70bf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89602ea-ea88-4749-97c4-8ea346af5e22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95548756-daf9-4217-9d3f-887ab7bf7276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0b0da9-cded-45b2-8474-8e1f0c9068cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c714099-c246-47de-a026-9153ed033353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a90a0f-eaa4-4acb-9b66-caa8fa9c8d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d20b3e6-86c3-48f9-8a61-4bb642e26d53",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d496a-a5e6-4078-ac2c-13e25720169f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae36445-6bde-4741-a4e4-4808fe012dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e7904e-43a8-4138-832f-3ee3c2ee2143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6099b7f4-68d4-4c54-b300-0a002a51772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c3ce0-ef8d-4acd-8bf7-dea9a1df153a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f66d7d5-360c-4eba-8ae6-be6ff22b9705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62b3007-cdb7-4ce4-8806-9697a79242c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef0212d-97cf-4a11-988a-cf8eb5976606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "631064cc-1b3d-4cd6-b791-26c68ea8bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00af52d4-5981-4225-8cbb-43982a8035fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ec72ba-e5d5-4132-b7a5-2d7d79e85dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5845ffe5-4c2c-43fb-b668-125412691a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6d4061-19ca-4f60-853e-24a41a4d91e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3253ac94-31a6-4cfc-89ee-16422b0bedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17227663-8857-487e-ba23-907654d095d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb950568-0a92-4250-aa15-5ebec4c48824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd04e5e-d7af-4637-9588-43feadf662ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98095bb8-8b3b-4556-aa25-ca3e42e8719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c310d190-e72e-4784-9bc6-f40ff66c5f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04d36d0-da1a-488a-8121-bd7c116256da",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81bf6e9-0c57-4020-85cf-1d54a021a2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b60a4-8318-425c-a866-d8cdd3dc0fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555f93fe-e32b-4e62-9ed7-9dc9d41fd386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbcd0a4-25f0-4e9f-a159-97eac9b0c6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245f6b98-0cf8-4ed7-81d4-c37edfbca422",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b30f2-d9a8-469f-b83e-bbdb694dc1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07e076a-aef9-4581-8bb9-e3238f8903fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5d0fc0-8afb-4f02-81c0-e97383755919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83521087-c3a1-4418-9a3e-4a38b30a84a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f335e1d5-03f7-46f4-ad30-7f51a1f8f849",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc67bc5e-6431-43f5-959b-c4da21a3041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e4eaf4-9ab8-45c0-a81f-0e90953a5765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a620094-12eb-48fd-b1f0-780c44713d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28600a0-ec2c-4984-8aa5-f4b466abd1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4c6876-9301-44fb-8db2-70eca0eb175e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d063552c-cb3a-47bd-b96e-f35a384dc342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c3da7-2055-49d9-a851-4cee5d579816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0f203d-f5eb-451c-97c8-f092ed7ee993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0f1d60-7b02-4d74-851e-eb1737302fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea6d876-3860-4da1-87e1-5d0743fb26ce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91331110-7ca1-4a6f-b2a1-4a962c5b96ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2915076b-ebb0-4247-a364-e62698f7f61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ccc40f-0501-40ad-81b5-ccf9ebddbd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c538b602-3f4f-4c3a-b16a-ae60dc8d4eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbc8e23-b333-4f83-95af-c335dd71bcea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c0fdb6-a2fa-4513-91cb-c43204dd7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e291aebc-d9d6-4e56-94c7-f76e53f4da78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe77e88-bdd0-4447-a7e0-264512029aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "971f5d0c-686f-4a48-9523-126e1cfd7bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb8950f-5716-4b48-b064-35027f70d796",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177acd7e-ee71-49ba-9e89-abd3abe740e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533d0ce8-a55c-4557-b598-9a4f6de0debe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12fb922-1ea6-4a57-976e-74c95883537d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a962127-78e7-4e34-8fcc-f465526470d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daac941-eec3-4bfd-ae08-364d930256d1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269c76b7-405b-4f3d-b40a-bef0a8ce5011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaae2ab-aa29-4203-9aff-db0bda42401f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08acc37e-2c6f-4a6b-ae94-d17108060d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2798a35e-3cc5-4ec1-bc45-9e3c4fe414fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0dde89-05b5-4ec9-930b-bc212c2a1e2a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7c329-60af-4668-b299-5d9957bd3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3fa68b8-bf68-4c96-b265-a546b86c330e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aed25c8-6d4d-446c-a74c-f00ed4f3ad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb335ad-e621-40b4-aeb8-7805d3fdd60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c7eab9-76f4-4cbb-a33b-1f46b3a19bbf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fc7747-2678-467d-994f-61f8f267d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6285309e-1783-4760-839b-a72c66e84702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4bfb7-7f0b-4ede-bc6c-855664dab60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca244229-3150-4a46-9838-6db04397e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353bfa41-3512-4b8c-ab43-70b04657abaa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ca562-e83e-4ba1-8d10-ac27e718ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b06a9cf-727a-4bba-bf5d-83aac5714300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d787d364-65af-421e-b182-fccd52d2a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53293cb9-3eee-4116-9c43-ea7d82014599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8136cea-fe08-46c4-a967-6e4ec7c037f3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01e3306-57cb-4b53-ad52-667ce5f8ca10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14789186-8aec-47e0-b47a-04f9978d431f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668696f5-d038-4b70-a020-199e27cd3462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd8fcd2-6bad-4707-b42e-cb3c8278273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e66225a-0d98-4c54-9c53-91e8e720fe4d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7120dfb-9108-4883-a65d-ba3722d746f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3218697a-bf99-4f83-a8b3-4fec63f7d095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8025e5-5d8b-4361-9629-9547b211663b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "757a14ed-c97e-4ec1-b202-6ecbf2c6391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6966d6e5-40f8-4935-af71-c4997e1670bc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db45284-c41c-4824-a938-c2a5696e76cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198063a7-aafa-4fb4-bca9-00fc7bb1c069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbd0457-7ab9-4634-b588-c141a906b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95003f38-d418-4337-b175-a4be9575e3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a91195-d9a7-44f4-817c-27512f998137",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39ddde8-382f-4d40-8f61-f4fedcdda8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338a6915-34cf-41a5-858b-b7bf3e1bdd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20848825-f0cc-4483-b23e-957c9820df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "23567372-6e5f-4a3c-97b9-3eb5a7a36711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e8b56d-4b5a-47f9-81c6-47d1b5453b2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4dba64-ab96-4529-af34-0f125aead87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c405ee34-1f93-4db8-ab9a-4b42bab7e52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2f731-413a-4fba-b77a-3856795ac421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "beda7281-5b6a-4118-bc7e-5b28f2b6ff1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108db788-363f-459e-87b5-ba4492db01a8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd7bb37-a938-4c9a-8804-597452b1d1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4069b9f-1fea-4336-a599-ee8920d9adcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371444c-e940-4dec-9b91-fae0fa7914ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b69c07-930e-43db-ba3b-c81361d0e40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57734ee-1e0a-4cf1-a338-899ec1586b33",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2be621-d8e1-4463-a0f2-1271841783ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d896cce-9531-4e05-b7fc-dad20978529d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff12848-63a7-40d9-a46d-bd50e7405903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "698af83b-6285-4ac1-9e75-b678d4252da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170875a2-6f02-4092-b772-5fb6ac4fe1ad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c4d59b-b00b-4a85-bb4b-779eb59af14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11e31b8-15dc-418c-9644-425e2c72d904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f263e4f6-0968-4aa8-a834-88a53ed783b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "203034d9-ae16-4b60-ae1b-da7e42779028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba80e7a-e63e-47a9-af93-a364c323157f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37912e47-46da-4edf-ba9b-999f1c423261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce909433-45c5-4b86-95e6-57f9eba1c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66894cd9-dc8b-450a-9199-e7faed601fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d147df-64de-4f46-9028-7ba4b34df447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57c22ee-30b9-43fe-a86a-f57de667a233",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec738d9-bd10-49d4-97d8-dd66fc90b0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dbb834-8833-4326-98d8-58d852d82712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee31ad50-b000-4ad5-87a9-ba134dc39563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149f7cd8-c36a-42a2-bd55-1e0347bfd7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4451160-0f7c-4fb4-ac20-669437507936",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfab0a3-635d-4c54-a5a4-0f591d742189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a56da8-57b5-4d76-8c86-3f813d05eaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114c04d8-dac3-47c3-a417-3e87f824b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b21a79-90c5-4881-9ee6-c6104257c273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c308249-47a5-4bc8-8ffe-1012cb86db8b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f786098-baf1-4f8a-8ccb-76e8a5c632a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b94a91e-b072-4748-92db-df34c95baeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c3a358-a1bb-4d00-9579-f865b3f9256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3833e9d5-ed37-4c81-8163-a3550ae8257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3579e-33eb-4b5e-bb9c-1c726f8bf4d7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde4aef6-387d-4e81-8644-3dc945d2eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c5256-bc69-4bb6-bdd2-cbe931fbfbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b192e953-8afc-461d-a80c-c0e75cac9ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd9c175-0fee-4bbd-9e8d-71f61aec5cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043df733-23ae-42b9-9c24-3560c48a86f8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22afe310-2314-4592-b117-0a823a4a2ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69d4ca-cdf3-4122-924a-28629cb7cb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263c87d9-f9cb-4238-a5d5-5a3136358b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc74761-ed63-4172-916e-9b2b326ba38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9717c00e-96d5-432c-9c77-192951473554",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8956122b-023d-49c3-8bf3-3e951e2ff55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0f2909-c529-4cbc-9763-83855e5c51b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec32e99-336c-46ee-8e4d-39394750a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db56cc8-6421-4f60-ac50-34626f0ed0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa12a4e8-422e-4b9a-b51f-6ef2b28252eb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74de3770-fae0-41e4-a2e4-8818fdb6974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd278aa-565f-493f-9367-7be12a4ac785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5782e464-a254-4636-92d4-1b10edc9b1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59a137e-83be-4375-b79c-746ed421abfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef3d15f-782a-4401-b242-75cfe5147b45",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef881fe8-c2b9-4fa1-b16a-8f7a508dc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cee2910-3755-4b44-ac2f-86536134d3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0248b66d-1162-4d50-b92f-f08edd83d521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae85be7-a37a-4853-9097-a4206ecc7414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b675fe6-92ba-45a3-a935-764aef0fd08c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9943e20b-c8b7-48ea-824d-38b3cd47e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96878a91-6c57-4941-a091-aedf330ca1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a73cd1-6f5e-4481-80e1-14f089d67495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8591f742-102e-440d-a142-3ebaeb8856a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61006e20-e688-40b4-986e-913071bffaf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83130c7-be91-4f9d-92c9-9afc55b346d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4466a8-6869-4f90-96a9-823e960b9a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42785296-dc90-4e00-b24c-4cf0e658264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea94be-46f5-43ca-b43f-6f620fc745e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77778a31-a7b7-403b-8360-c9f12851922e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4684bd9e-4c2b-4178-b673-dea1ac12f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ff316f-882d-465d-a59c-2cdc00f81da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20b8a3f-3b48-4561-bd3f-427b2d0fc3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "65634df2-03e0-49bc-8f78-70a37cf13b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e6f2ed-a407-47f6-b427-682a07cf01d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639c1f5f-4430-490c-b9b6-2b9c54e3a104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc97544-399f-4f17-b078-59848c21d13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e4482-736a-489f-9bee-dd0ca7241809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca37346a-9d1b-4171-8f5b-6674497920e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f65b99-024b-4604-bf9f-ef2fc9833408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c7b4f-6a1b-4b8c-b752-832d00f7ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d108952-4ddd-462b-9ccc-123843bdb359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ae35da-5296-4892-aa8b-4a8be3b6ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "697e9788-194c-4253-b5f3-005bfe31378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9131146c-0ae9-424c-8424-3c5af859a7ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3f48c9-f710-4755-a697-9ddb3336c345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b06045-3c4c-4590-9d64-4b4a385fba3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceae36d-808e-42b5-be33-b063d008d2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f603b3d2-e759-4c55-ab60-bcaeb67e39d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fbfcbb-feab-4ae3-a4a6-de4063566a58",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5220c1b9-f325-4150-bd2c-2e6f1b890854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9712fba-a25b-4284-8477-b058f4b9db37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b991ede6-249d-4220-8fc0-5f71e2d2ac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "121c479c-f9d5-43fb-a50e-254c5878f21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c73329f-126e-4457-ae04-16de4a77d8de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da9e642-82e0-4507-b552-de48f0946302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3466be-9700-4350-bac3-a87e342808cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea42f0c-5bf5-4460-80bc-039ec2674666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07062cfe-eb0b-4e53-b33d-93b0a31dbae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f944b-bda4-490e-be8f-fe0a422ae4c5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f47548-9a20-4d67-974d-280c96ea888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38d713c-724c-46ef-8f38-b4c54606120e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed52856e-da8c-4afd-9a5c-e4a8c3b8a4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "668a37f2-7ef5-4006-b4cf-fe353b2ce629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ce7393-f201-4c8c-892d-b70d75d687a6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115dea96-2a91-4f26-a0fb-77642b352ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7964a3c7-72e0-4067-bacf-a79a57c7b69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7781afab-c5b7-4f26-82d6-31afb2574600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91a95c8-8cea-4731-8cde-85f3cd7d5f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752563b7-9f9c-47e8-8aa4-60ae3c2eb7a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7d36d7-5c54-4bf2-a2df-0778a1382e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d808471-0f7d-4e87-94b2-83dab702c78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088b3c0-234b-495c-a15e-faec9308fb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07fc60a-1fb3-4ce8-b2df-d9b4757df121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb52d4e3-5236-48e1-bc52-57020e6e2e35",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefcdaed-1336-46b8-a84a-ae92f5600e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233a9ba8-7dc0-4d36-93d0-bc7764b38f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc19737b-403e-4e94-ac43-0892d42d717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a759bd30-abb3-43a7-8646-b840e5ce4608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c866bdf-0621-4b4e-99f0-1625e2100013",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d196bfb-2490-4c96-8697-0d2299ec6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270be5c7-e6e1-4079-a345-81cef425ddf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c288d92-5ac6-4e90-bde4-a7aedbf89c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49242643-a6de-4b5d-8bc8-341aad75b947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e595a9b-4819-4dd3-a527-1558610dc627",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2966ec73-3c93-47fc-934c-33791c2fc50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b54b045-0d9d-4ebc-858b-0225ac1517f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f7e786-9fd1-4b67-a94b-f9ad60ce3cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a813fc-bcfe-4c4b-aa7a-47e1fd342d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb7760-1833-46dd-9209-a6eb390d5783",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e22061-8683-4186-a4bd-ab3171a3a951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2929acd-c2b3-4148-a9ee-11f86c32e0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13e92f8-1119-47bb-ab9b-1d250b6a0bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eee215b-4c1c-4f24-9341-76125f42babb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e526af7-e3c2-4431-ba4c-433fd260b6d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a46eec6-c204-45f5-90d1-7eca86231064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e13aa4-1d44-46ce-aa10-147c614dd0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10340bb-00a2-4aaa-b793-3330fee430f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e1118c-fd19-4ffa-a676-d1c6bc2fd1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b75da5-e882-498f-bf07-9dd080fdc905",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0195738a-159d-4c9b-8368-85a80c80f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62064fc-bc29-4c23-9549-a3181b3f2356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507042c0-3a29-474d-aeb8-6c2cec12a2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7bebae-95fa-4c3e-a51a-7e8e7c51fbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804c808c-a2fe-4b49-befe-05281ef46fba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a20df52-3e46-4bd7-a666-a6c8b894fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39f7480-7381-49af-aa2d-c48248cb8b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ce550-5ef6-4649-bb24-2d8b73d15227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1f298a-4244-46f3-afd9-81f908aa808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b46b3-8a6f-46fe-b559-2dafe6f235ee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71bd68d-007e-4bae-bff1-4aeeba849096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a169af92-a4b0-4a01-b4d4-0b8d9995cdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff9c96f-1439-4f0c-ba06-f86b57a7ead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc41e24-cb0a-4dce-a13a-c06095f8d1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576752cb-0a4d-47e7-b425-a38032e5fda5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050eb835-48a3-4d67-bd09-390d92329473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192f3936-52eb-410f-bc5b-2b30713c2ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d347313-d7f2-4617-beff-c20208e235d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8914c0-3192-482c-bd9d-9001fd5414b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e214810-7435-4d61-8b6b-52cc70531a35",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e492967-c479-4dc1-ab7b-5534d2224d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9684c40b-fdf5-45df-ab74-918e27ba5220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3a8a2-988a-4a5b-823e-dceee8d0dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceec70a8-a38c-45de-8ea4-95043768c961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002bc663-31f2-4d21-8e96-95a05aaf9865",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bdc3a8-886a-4f00-aa2b-f8b6c86ed8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aa2913-9c3e-43ef-b182-f73dbab6d054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1a85ca-8edb-4350-b7c5-2a7d9595a908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5afcfa1d-df6b-4702-aa31-cd805805199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c8aa01-ce4e-47b9-90c4-8b7073a9964f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2c9d61-1387-4824-bf17-b5c535875725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b74ba3-fd50-49db-b51c-ebcb7d10e5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a5548-5b83-408c-a650-083188c68cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c519336-f94e-4565-8f4e-3a4484b91bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f516bf88-61c3-4498-bfd6-ea96a19b9a89",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b7de66-861b-49c7-86e3-43b55d484e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6730a07-aebc-4866-9ae5-ccdd5600180c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9eb32b-0866-44c1-9ec7-8c8d32c49bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0014ff7c-f0a0-47a9-bac9-e4cd9aa25f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61c5020-6e39-43a2-965a-042270092f58",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a1eb83-37e7-4946-a782-898e4b7af929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62a37ee-99b6-4cd8-b984-c7a02959eb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847713fb-5751-4b27-a34f-0a61a3a7b4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "848f19f7-3566-4b53-8dde-bc0c2396c079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf8d9b2-99e5-4377-a518-9bed2ef6c9a9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaa9381-31ff-43b0-aaff-e806d42a7d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c658a48-35ba-40d8-b112-cfb3726bdf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3c0043-9fb8-469b-939e-49eaae06c5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a0a772-977c-4317-9fa6-f19db3a0da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07ba363-87d0-49cb-8a97-d5360001d852",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc43a8-2191-42ba-a3bc-54e510973864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fac108c-d3f9-4136-86c4-7d6a0f0222bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc6177-b4d2-4c69-9e2b-172d38370101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9aee0b9-062c-4bf3-80b3-aeb9668d9560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f1d1ef-203c-47fa-8cb0-5574992e6c4a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdfdec4-4272-4add-aa21-725768d79464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7dd784-2294-4bd0-80ce-0d71602fee2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229fec2c-b472-42ce-82bf-73268b0e7827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0857c301-2454-4484-a23c-15b45bda0f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c93ca82-ba3a-4a6e-b8e6-21fa21760d7c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3d0f97-2d8a-4fb0-9ed9-691b98c7e425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7c7a44-a5df-443b-a7e4-283054a4d4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3a08db-99dd-458e-95ec-a6552d9f07c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7f5db6-9e99-4556-a085-65ff61f0fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8463359d-9a76-4318-aaba-bf97f907210c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd957fb-8d98-44c3-983f-9656166b943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1da4b91-182f-4975-b12a-5e5e8b7ef82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ac345d-dbf1-4860-9ccb-27a53fc438c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e39522b-36b6-4226-a991-395574020b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b7d692-176c-4a74-9561-1924416488c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c462ab-7b04-4f99-b361-f0c6f58998d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523f74a3-6e56-4fbe-b9d2-0d953b1021ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c244a54-be67-478c-964f-690334ca5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e8a5ec-6517-4325-8f25-e558985e7e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aabd5a-b4f6-4c24-bcd3-31364d4a1a6e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a432a618-dcac-42be-8229-5e425fef6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a097a381-13a3-43d7-887f-df975a2051b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f26c2c7-11ad-4153-a92d-f082ac46e13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adf7277-d796-4717-89a7-742ca30170dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73ed804-1e58-4f2c-b110-069d15093a82",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d730c7-6bd4-4e9f-be18-6f86cbfcc37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a90581-686b-4f89-8c13-df650e9338d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f46d33b-9cfa-47f5-9392-130acb350be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5bdec4-eb6a-4f77-9bc9-e6c7cb0a98d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3d0a13-5356-4bd1-a5e0-c6a940ea8bca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357f5635-4783-4e56-b83a-eb1e4468c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71eb62f3-17ec-4424-a8d7-be19174acfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8495b2-7277-48ac-b6a8-d53e3772bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f785a33-4bdd-428a-8251-7a8e427a7ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a3dfa-2484-4349-8b2d-bd24aa46e48d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c32f8a0-978f-4a67-b5f8-9ef79e499c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81212841-6795-413e-99b7-2092ed04a0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c89f7-dded-4056-9508-cf8488bff270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da84df45-c318-4efd-a5b5-38f430b4dbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fefd4c-e727-4a5e-82ff-8be632ff28a4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8fcb52-f97e-4fd6-915d-f72b9ac6f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffa7a78-c6e9-4336-9c95-3773e7f7894e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747745ce-fcd2-4d6a-8421-2df85c67dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcaa191c-871f-4888-805b-65682dcda4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd2a3d5-67d5-4e45-9e6f-b50dcd25d3c3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00630e63-b2bc-449f-8010-2d743fd41d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3a98c65-ab65-4065-ac38-4ace02c4090f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b044073b-87aa-4f7b-b507-e823d666a6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d928f7f1-dcaa-4ab7-977e-9766cf283e1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16ddbd4e-48ac-476d-b7fa-54b169138384",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1939ae4a-cf85-4062-b809-162d23c2ed47",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff4e673-02c9-4176-af90-adb85bad9273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79e91bab-6bad-45bb-b6dd-e20cdb17308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1c55d7-82be-45ff-8610-6c9dcd7f53ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f55fee4d-d88d-40a2-960c-c7d725390699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ba062c-1a30-44de-b9b1-761a0079658d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18247ee5-7f79-4775-b077-c55084cd03c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "097ba94f-9640-4c16-9549-add12befc786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937d49a3-cd4b-4060-812b-f59042a2521c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "62e9a689-3ef1-479f-b265-0decdfe5879b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e7f3d86-5f69-4fbe-8360-1e2d1fb6dd69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78d601f2-c545-4ee8-bbee-446ad3274450"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc90f69-ff92-45cb-b10d-2924ebfb1d43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40892c3c-cc19-423e-85eb-f16784dc9620"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "600a463f-ab19-4a9f-8fcf-f5d3d9f73b71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4156e498-462f-4407-8d74-a2609637be72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f2cf554-180c-40a6-9a70-c89b36da2c7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6318b454-b0f2-41ac-9445-98b474fb84d8"
                }
              }
            ]
          },
          {
            "id": "72ab18eb-0ee5-41e8-a388-8429f884a7c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02ad967f-5733-46f9-9c2a-d81c7f665519",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1648261-a0f7-43bb-89a2-3b349a3e4917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7966b0fd-1409-42db-82ea-f24c24fb89a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83924356-acf5-4d5c-9af3-fa3811c7eed4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5eb39d30-2adc-4c98-811d-35b0352b90ad"
                    }
                  }
                ]
              },
              {
                "id": "4e76098f-28df-47fd-92e8-223fcf8a3605",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a85a11d-d075-49c0-8b53-503cb9068d74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bc5d6f9-899b-460c-b802-bc0b4f9312ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc3a9b1-c067-42f6-949d-72e28db0679a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13891f81-b1e2-497e-9dce-6f4db2a5af15"
                    }
                  }
                ]
              },
              {
                "id": "29d1e7f6-2b86-4a1b-9ede-fbc02280fbf7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "641025c4-ee02-46a8-926d-aa4a682e51b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01107fc5-bba9-4638-9601-3020650f6fe0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5fafd5e-369f-4e96-b2d3-204d203fc679",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9af745cd-511f-4f81-8c00-cfdecd12ac09"
                    }
                  }
                ]
              },
              {
                "id": "0baf6a42-da9e-49eb-8a85-d22f0bfdcc75",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48b820f5-2b6f-4312-a590-2e26d56472fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5e78b67-0cd9-4703-93cc-ae80abc0859e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "455894c7-4f09-4278-b90f-5f9743e8ff92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "880da654-e7e4-4bef-9ab3-5e13b840ef6a"
                    }
                  }
                ]
              },
              {
                "id": "2491fd9a-58d6-4b7e-b2d4-19570371eb40",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0faf1ebf-f59b-4418-89f4-026980127f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f074fc0-4096-42d0-bff2-4d77a561d27c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "419825b7-2782-4fd4-8173-fa6989987def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee575d34-e5c9-49df-8a70-f8619a394d92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9d61ff4-312c-4091-9f50-6b791c437195",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "548429a3-d065-48cb-a40c-678ab4ce1274"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38b8944c-6ca5-4ea2-94d8-42a5952bb126",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9467408e-c0b5-49e9-9992-ea794a91690f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c707eacb-4aa7-44d8-8452-589526b3b7ee",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d621e839-fe23-4bc0-be01-97c0d040eaf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e218c9bc-47cb-409c-b029-b07d8583192d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24af4bb6-3833-47b1-bdb8-21202a1882c2"
            }
          }
        ]
      },
      {
        "id": "1f5ec7e3-b45d-487d-8863-566c1ea1a838",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45315dab-3b40-478e-9846-471c103b7571",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffe44a54-e4c0-4e4e-b7df-123caf36d30b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50651608-1921-4a37-b19a-d63f9ceda94e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1be2db9-8566-45df-8c77-2b006adbd8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f403aa-5ebc-4dd5-8da6-2661b6112556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7617a26-beb1-4338-82a5-8a8062a90cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43856bc-16f3-400e-a9ca-067a672e4124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b2ca1c-1851-4253-a461-ec0655a83d50",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16b0f40-8b76-446c-9d20-313d76e1e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c72cf9-e0e7-49f4-a5ce-47629c6d66d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5227c4bb-eb6c-4898-ad6a-840d0fdcab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a9e687-9a78-41b6-8fdb-2ca79d249ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb14e664-5bbd-49a2-a200-9d202002afa6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efd8bf6-e7ba-45c5-b518-5e7ff7dacc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9399fc5b-7c84-43d2-85d3-30e3419c7ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732be1e6-e4a6-49d5-adc3-e556ba6ba8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f86905a-0014-43a5-87eb-82a75f424c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be6dca1-c175-437f-bb8d-edeb9c3f127f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732ed838-ada7-4bd7-a080-619c9f8672fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14eecb6-156b-460d-ae8f-ddb58492c686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7a015a-5cf4-4954-92e5-914cab3ea756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac1a6ce-8e15-4093-b03e-e17242033d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f59c3af-fa3e-423b-a79c-e5aa7e3acb2d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9afcf0b-598e-433c-af80-280f18b7e32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89eb571-bff6-4249-a67c-80df6198a262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ca4d19-70e2-4162-b7d3-bc0a032d425d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52717b45-7eb2-473d-ac36-6995113e8e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0325a1b1-7a13-4a95-ac5e-934077232906",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d296eb4-bb38-4dc5-bd53-2a99a4fbfb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbc8ae0-dd6b-4d87-a7cd-a30d83fa0924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b89ccf-2e70-4772-bc67-c674d10c0c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d6826c-ca97-4a21-a5e5-9f6f1531c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e298886-25ba-4858-b59f-80a982a8ef7c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac425c20-1502-4dab-8c66-0cc7dd245d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f73485b-730a-41f6-a7a4-cf987a4bb832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4162497-ca73-4893-9c86-27851411d570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "511d6984-df9e-4aa9-8e14-20b62fa5351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2532c20a-bd40-4261-bdca-dc0f83c654d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0cfb1b-0616-4bbe-ba9c-8e1df6cc8bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a3e833-4b92-459b-bc93-1b5bb9b08c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0705bb9-5ebb-4e54-8421-8af564f55e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa6155a-19f1-42f1-b7eb-a44d3a321372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6317374-9af0-4e0a-90bf-063aded8f8f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f8a24e-eda6-4840-aa3f-2594d1cfa7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06c707b-b385-46ec-8f38-ede6028877f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c40d52-9e8a-4888-8a09-72d64dc77f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9969b6-dd90-438c-9fac-824d73696842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2221e169-08e0-4bb5-a820-4f0723035a86",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b3d1f-ca76-4965-9f8c-7e01770a6fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607b8cf0-62e5-4fe4-be45-6c893315837f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f3056-5107-46a1-8872-dd0bb408c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09936b77-a176-4979-b9a0-473320a48e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384aa6d0-700d-47f1-ae28-6f1733cc4580",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efcee32-03cf-4966-b781-de9263ed22ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a947108f-18f2-4c99-83a8-1f9237efc650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daf3849-66f3-4de0-9797-ee6badb7c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0d7122-bcfd-40cd-bfe4-3406ab16ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7263ca9-3769-48e2-98c9-64ae7ea2b930",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75455010-2010-4f97-8cd8-3fcd569627c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b757b255-42f0-4635-ab32-184e493ba6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a387938d-42a3-4081-955e-686638a89243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31dde2f1-3faf-42e9-8c86-8d912a07765c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807727f2-0d6d-4b11-8715-e81385a0ac50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328391d3-66bb-4e5c-a48c-6929c9d64d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e24b7d7-bf72-458e-a2f9-ff5b0b74ad3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fcb057-18ca-4609-8640-3ffba8fcc25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36259a20-1fa2-44cf-a169-75993dc68b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ded016-472f-4a44-be42-afa7723c6cdc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b62ffd0-e21d-4006-be67-c42b35f1362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9541080e-7932-488b-a711-ceb919197e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649ed9e-8057-41b7-85a3-b62448b13e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d51989-1e22-466a-9ca7-0ba6e8c24731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e099685-519d-4a63-930d-53adbd4e4ecd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a00e3-1d93-4eaf-898e-7079234793e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3756f8dd-d789-45e5-bf9c-3eed4fae5c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136bdb37-bb7e-4f23-8ec3-9fff738d6529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2a3670-7ea1-4ad4-9412-820f4c3d9269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449c246-d0d4-4590-abbe-579fbc6e322c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2324621-dd18-4ba8-b4f6-03ed69700723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a2a41a-48e2-4d2d-948a-1e57d9927ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7350d3c9-ede2-40c8-a8d9-e21cb3d21c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d49b2e-88e1-40da-8984-4e73fafa02ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5e462f-b708-4c7c-85f3-cde5a46659e0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fbfc78-5df3-47b3-917a-dad5a90a52b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6524d1d-2e77-4732-b23c-162ce843c707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c002cd-ebba-4f1e-a243-c281191bf13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "208237e3-6b5b-4eed-8bfa-9a965d6ba619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b3bb61-6d48-429b-8c6f-642f8db49f50",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cc1a96-7227-4379-a843-6b827c0f7735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2aefafe-eb6d-4944-9432-26ef42d4831f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed71169-d1c6-4b47-8a26-103f08b52ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bee0e6b-76d6-4fa0-90ea-414338325b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292de37c-9fa9-4eac-839a-ea0d054d2a8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162d448d-c296-48b6-b32a-d57f5d73c4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f161d0-72c6-4dff-8d15-7ecf82a6b8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5908138-82e8-4614-b3dd-d0b94b8494c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d20f93-0bb7-4d83-8c4d-9a43ea6c3a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be682d1-f947-4e20-a2cb-913e22486311",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aaf44b-5561-4ea6-ab06-39821485c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f7159b-9c01-4331-9a15-4d57d5366d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d30276a-1fe5-4086-816f-ed832fdb1770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b325aca2-99ce-4865-beec-4d81b3dc71e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41231c3-d581-4203-af52-e7eb7caf8f01",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d4d49f-aa54-45f2-92d2-96834054713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6718d19-e5a5-45b3-98cc-ab31cbdc385a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24fe49c-04f1-4775-a630-1ee555edc6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0b5941-64c8-4310-a53c-d5b296d2f912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f106313b-6e38-4193-8228-6a8e745eb7f5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce162572-0194-450a-be36-712844c8ced6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c0adc6-e916-4c5c-bf33-1ddbd789d59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901fe83f-34c8-425e-ac2e-89053474b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee7f502-5b79-4ac4-9790-f9976f1fabef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2b309e-97a7-4147-8707-2cf0e8fa99bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb6b468-a3c1-408f-a4bb-7c84ea014573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ffeb5a-412f-4e67-b470-254bef1728b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2816df-0c77-4da3-8fea-c6361be4f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5560a823-2bb3-4798-86bd-3d65b6b6fd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dccbe5-950a-495a-880a-9df180f6264c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6834d6a9-2b03-4133-9cb9-f67be088c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22521ebd-438d-41b2-bd0b-7a4ba7093f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce51254-ce8c-439f-a618-6794711be927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36772f0d-4831-426d-b382-4a62637d4110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c24fa9-7308-4782-9367-0b984a635676",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e637fc-8a16-4383-9ed4-e61e0ccde129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb8ea63-b638-43f7-9680-bde371a7eb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1a112e-f4cb-44c1-be6c-a6953df0c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0e23f1-63d9-44f0-aaaa-beb98a4ed84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62048c90-cb2c-41b0-bc31-223c2440ba35",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71217789-aeac-4a7e-a9c2-31bacba71d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e6c8eb-0407-453b-a806-addeb1bde987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858f9f6a-3ad0-475b-8296-fe9db63596c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeee394-3279-4192-bbf3-ad76bd454c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f883d7-c5fc-4331-8654-803a7ba90c45",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f84647-77c2-4be5-943e-a9b42abb70b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902e9fb6-ffa6-4019-89c0-fb82e88505d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8eda20-710a-40ca-b17d-d9c7966ed549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06d23ee-3616-4a63-93f6-862e71b0f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197f3a9-0ed4-4b8a-837d-c293d2f8b757",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b30c388-1df1-479d-8222-0e55fc59af6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834315d2-5f34-408f-9c75-91c548583c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e47bef-3ec6-4b7f-895a-7115ad43ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c07ea61-aa58-4e97-85b9-500534bd0421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03813878-3f00-49ce-870d-8c7cc7e6ad97",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5b2587-1d9d-4db0-8c74-97f3dda6966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cff623-e8e3-4dd5-87eb-75799a04fc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d82c50-b920-479f-88a8-5ef3ea7d1587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37aef595-9489-4dd4-8861-c7171fec2e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5947be09-1304-41a4-95e4-fb32cefe1043",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b06de80-e9f2-4f87-b58f-dd960898151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef63140-6754-4aeb-8f9e-ca63ccca7a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd99b3da-96e8-4c35-a20a-fa20a7332f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec0e49d-926a-437b-ba30-5364a3555709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542ea4a4-2899-418d-9ee2-77b1785944c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857cc9c5-50c4-40f9-a737-30353d76b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1d008c-e33e-4759-ad91-b5edc0339835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed25b503-bf77-43c5-861f-468e8e985506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff596792-c078-460e-8067-39bb7d47b7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf27d78b-3e2b-4ff8-b5e0-672c29c2760a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a0db0c-e90b-4edb-aa01-f1d5a22bac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ad4375-f5be-4821-826a-1159028ef6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a8bc8b-5688-40c3-962b-b748cd60c13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd94da37-df90-43a2-b73e-963bf804f83c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b44f75a6-6a36-4199-8dbb-3c0d88036889",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d803ca55-e1e7-40cf-92bb-a0283b4860d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7b0e82-eeaf-473c-b044-84eee1b20768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acb19ea-ae68-4757-8437-665a2da41f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c507d7fb-2698-4735-819c-fcebf5d186f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b032971c-2e90-4ec4-9db4-e740f403b649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4002bd4f-24e3-43d9-bbd6-4c6e7cb18b79",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2671cb6b-d6eb-4a69-8e44-e4e0e99a4532",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "503188a4-fb27-4bcf-af71-e1c16fa8119e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea26efe2-517f-4d4c-b8eb-a2c9c865e1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cfbea46-ab76-4175-8804-c98de419552e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c9cccfe-14d1-49fd-9245-a5b47a83ed82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9ade415-eb20-4a2f-961d-1409fba088bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31afa404-6c64-4ae5-8098-126e80bbd40e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8906519-a98b-4134-b82d-37a37a8b84fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72eed436-4d8a-45be-ab86-0715a590105e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b800659b-288e-449b-856a-49850e45ad22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "271aab2d-b604-415d-be52-601cc6bf22dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c50ee90d-170f-4b8c-9fbd-98aecfa48f40"
            }
          }
        ]
      },
      {
        "id": "2fe5698b-6aca-4fd1-8ed3-2d1cb7018350",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5f28698e-d1d5-4c8d-9876-9f69c2c224d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dae5ca3d-6ef9-43f4-9981-8205a57c7962",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c79afe1-1baf-430a-a791-a0376a6e2a00",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61d21cf-37f4-4391-8638-d4dcf407271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5baeea5-b87b-411e-9dd3-92a8634529a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e19aa8-4893-46cd-806c-04c7dd4b9011",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d67d95c-6a52-4227-9b12-9cb58c5e1db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9915bb07-1ddf-42fb-94f6-d00d681eb39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bf55c4-82e5-469d-b6e8-236a8b0c6265",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8118b-bdf1-40d0-a7e8-98758a268d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef7cec0-a726-4069-90dc-36e2257361b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeddfcf-42bd-45ab-9af9-557155dbb993",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dee2fb-fde2-417b-bd61-522d86402635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9043b2-6940-4250-a6f0-7339f2ba15c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21c1a08-b87c-4d6d-af44-5b0ac4530cd9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb9b905-bb3d-410b-98a6-a59abda40e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252e78a9-0fe6-4c26-9769-8538c027465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7b8c7-10ed-489c-8c3d-06d3555f7b81",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1743c31-243d-4f98-926e-db472abe7e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284e69f2-35ed-4dff-a2ed-839726553b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e4c988-921e-47ac-9af5-fa62cb3fbc57",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d162775-335a-4eae-9abc-63c417e0881d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5bff76-a6f6-4fc9-883a-f60025c582f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d1040b-4be3-45ce-b419-4284341bb269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1485b48-a381-44ec-9581-76060bc19a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c56193e-da03-4130-abb4-b19e5831f962",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14125e25-6561-4fb8-a4f8-c4d2a86fa968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993ddff2-0f8e-4a19-96ce-25c9bc95db86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76e054e-74f8-4698-86f4-0d2e161fcc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a011630-85c4-4702-9a7e-9c462ae3728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02893d1-b490-45ce-9b31-bfc4fc3983f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49baa191-d169-41d5-9f56-3a51106ade05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f194c1ed-bb1b-4455-acd5-b245e92b07eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea3ef4-c390-40a3-9991-23e1e56fca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2888ed1c-baa8-4c3a-977c-ec34791349dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0841ce66-ee68-44a4-8bbc-57d84fb8137c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93832f04-e0db-46a9-882c-d40d43fba84e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cccc7cc-16b0-4b4a-a2d8-099124f091a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e739add-73f9-43f2-8dcc-a2ff90ea0c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c39b90-7100-4168-abbc-c0a696a4c464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e461a7-7c72-473d-9bab-26ec9f77e89c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739ec46a-a2d5-4374-a9bf-031a37189610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc50926-3b7f-4371-a35d-026fe1211211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60715567-2bc6-46b1-a747-3ff62db811b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec1533a-b82d-471f-ad09-78ae7a43b0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe19f1b-ac5c-45fa-bbdf-5a24c3877746",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f563d44-db32-4879-b267-eec15c095e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0c4a79-9a65-48a6-9c35-d91f83969443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c3d086-1c7b-46ae-a44d-f62c3598a2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edead47-d9e2-4faa-bad4-c97a2f6fa2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9c3585-ce55-4d6d-8a66-f793ea70d398",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62975d74-3fab-4054-9b33-d8366e78ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28dbd4fe-b042-445b-9e99-db2e018876bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d312a-11f5-4560-8b36-5ae25ca57c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7571b58b-be9e-4d8b-a090-e51be40158e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f89d3a-66d7-4c50-89c9-668d5439f072",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b8d301-1715-4286-90eb-1e3a176148e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e21cd17-f085-49c1-a09b-682a63bbce74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eec89e-cab8-4526-b308-53a8f4e88a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b972ffdb-06ea-4786-a60b-f7e6d3b8ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e05e04-7f72-4139-8c2d-64f59821fd38",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34b39cf-cbbc-4207-b14e-e94fb9adb0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e2e581-ead5-49fd-9d53-2aa3b0d21434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3775c0b2-e3ad-4641-b421-589472cacdf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda4fc6e-9544-4980-8860-c9c987e57d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966fc16d-ed8c-4d5e-9f2a-f6d90ceacbd7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57137d28-ba8c-47fe-a443-40ec128c96a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daceadac-2a69-4486-94cf-94c5247237f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce20fcc-84e3-4a5c-841d-b480bda9e6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fb5687-327c-4696-9190-eee0c9be0b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e5e2c0-9e8e-4ef7-a898-5762bb1ce2e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88922266-65ce-442b-b87a-79eac7a0a65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2736b4fa-3f34-4c70-8ce0-c7f82f620a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189dc958-f25c-484c-9e7f-cd5b2bd44515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b9e58c-cb0e-4d18-b718-785acd64dc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b83dc2-c3f3-4b12-9a05-8f2babe257d5",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c58c8-2a86-460e-880d-7e96a4345576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfe3aa4-c4a3-48ef-8c5d-1238f299da63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c5d4df-ed09-4797-9878-f738f82178d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b88f43-51ea-4190-a16b-5894e43f017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d14c2-6df9-450c-b2bb-d575f7f9bc61",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0aee98-1cc0-4ba0-ae62-690a7420293b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48509152-21a4-4c7f-9098-30a33009eb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c170883a-a276-4db7-9f18-312a194df49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cea3bc-cb52-4a4c-a6f8-6abb46de11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940b1802-3915-4b80-a444-3dd4096b9569",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef45cb2-7d23-47c5-9c87-5691a8b97ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd4a846-e620-4ee4-97e3-a470b109607a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6315fc7c-18a6-4406-85dc-8a40d8c9e377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd292e0-fd48-4aba-bfd9-fe9e4cee0732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9a8970-60cf-4280-859a-feaf6a4430d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f2d804-019a-4d3d-84e6-61407a88b52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24c1178-25cd-447b-a2c2-e88b81d0728d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829439b-70aa-40ef-932a-b3a7ba162172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd907a0-15fc-4bee-955b-35351888b24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67233c-c214-4446-b3f7-a6dd342e0953",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eab7a8-9a60-405e-a68c-8f5c54990ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d1a7bf-2c62-4fa5-82f7-4b1189962f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf13a29-9bf3-4f60-9df2-ae8295f61adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886cab75-b36a-41e8-a775-7bb136377a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b67d74-a361-4b2e-86eb-ca9b7a4f71a7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaa3973-e867-411b-9081-c0067af7b233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92668db1-1680-44a9-bc64-d79cd0f5c62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d946bb1b-2986-4846-99ed-2fbd54215d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91da649c-6656-472e-b4af-89dfaf7e3c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3b13e1-d88a-4572-ae1d-29c04d74d5e7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c41fb59-83b8-4eeb-a864-ac918efd6060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac95bfa-3317-4cf9-9261-b40f645b139b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe9cf46-9b31-416e-9898-39facfdcdbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4f359a-c2be-476a-bf41-b1d86a32e9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675f04e1-833d-4d5f-8266-1c19df0b88f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85beadec-fa96-459a-bfb9-c65a0dfd0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca77a06-80f3-488a-a5b0-32724414d02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5ad18a-c44c-490f-9ea9-fbe5a5bd71a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cf563a-585b-4953-8202-d1c43137a1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc684c-2046-4397-affa-1042d4c76432",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4cad68-3488-4622-90d0-cb23098f09f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a228ce-df98-4416-a168-cc27783330b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbf3cb3-13c7-484e-a4ce-c0d115f8ddc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fba2e63-3809-401d-af6e-cf6960a0a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43fed47-ea2d-40b8-96e4-abb430e061d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92ae78e-9955-46c3-a66f-8764bdf90c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d21393-3742-44b7-b3d2-33ae52b4bc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e783ee06-13c4-4677-b2f9-251c17d1bce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24816e2-3e23-4c5a-9d05-d48d1121362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac32630c-ad43-4958-97ca-9b4ead48bc56",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c3194b-e18b-4e0f-bf7f-1ea4a6e032fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b849248-5384-4f2a-9154-6a74a3fe1437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7047125e-fee1-4c67-8793-e0f95192dda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac497ae-aaeb-4d4a-8fdc-d3c7374ffe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bec485-6d03-4c6c-a256-a25a62dfad6f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae19e755-e8b1-4728-9f3f-c765dab36af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abe63b8-03d0-456e-a19d-d79c4699a114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cf40f9-59bb-4ed6-9824-5f91c3767562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf16e892-d804-4b3a-ae06-0bb428d3df02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f80fbb-4518-4238-8c2b-4990059bc4dc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23326b4-9264-458e-b36e-14a0012c37fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9d4b7c-72c1-470d-8d8a-c38cd3900f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd48d9de-6664-47a3-b02d-1d1e4b1b7ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603c30cf-9a0f-41c5-bd47-12ebb5791c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6debcda-2b54-4a1e-bcb4-175ce94d165d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e42583-e953-4cd8-bf92-7d9290bab4cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d4cbc1-c3e2-4d36-8d8e-052055598ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a27c4b6-4b1f-4ac1-8441-960f1d27461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9cb9ed-279b-4d5b-8f58-45fa6435944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f6766-0dd3-491b-a4a1-c6e126a98b76",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce98af3c-34b3-4fce-9583-e5fe1b994aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c668c1-73bc-4aea-9ada-86e0e2a51c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb481d8-f11a-4d80-b7a6-eec0f91814f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3302d335-2442-45c3-9063-123b2a821257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74e5fb1-7913-47cc-8106-01006c843930",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2057f792-ed98-4011-95e5-82dabc0a658a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf9e3c0-0bdf-48f3-bbca-1df898f4c140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb134561-2470-4a3c-a47b-3602dbf677d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1820a51c-6972-4517-935d-59ec6bb8b217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c56bda1-38bd-463c-b7d7-2a6828ae964d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5a72e9-ca81-439e-a478-fd7ef0099972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1472eb57-e822-4d8f-afba-2bd48a3d70f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbfaaf5-f089-4af4-a0aa-7b05e575ee2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689d4de5-94d4-4a22-a4f2-1c5be5b1c509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaab24d-f5b5-4f68-8135-6bb46cfebbba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742d89c0-81ff-4779-abc7-e7e9e1e71f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf90512d-2eb2-49e9-8607-1aec7acae6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c704ff0-f72a-4405-bf77-09fd81883a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81179b6-25a2-4991-924f-902178fe829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e648ed3-1ca5-4831-b6a1-a2caf90a89f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7aaabb-fc20-4472-bb7e-6fdd0b72ad17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8804619-8797-4fc9-924d-75a68911358c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68186b12-24ac-4faf-8855-6ebb61a8c3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d87cad-1f61-4eb7-99e6-cc7849c5f3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf13262-5f34-4b5c-8b71-44b4f27e2401",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b2827-fb7e-4253-a494-e0bcffcdf1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ac36c3-6c53-48fe-abf9-19c288c6a811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca61496a-5d26-4c93-b699-254d085738c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae134211-330d-4d6c-accb-0d8e1133e230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b716988-df91-420b-90a3-79ebecff108b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d7d4f-0602-41c6-a3b2-782eb9a404dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3daddea-a7d8-49c3-aaa0-19446ad8e459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f31ae9-f427-4e32-b74c-4756fd878bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4111d43-f6a4-4302-9ffa-00f95fab8eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f75e2f0-e8da-4ac2-8f44-f9e217b2b26a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53632a46-7221-44d7-b21c-ea48fa83c9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62289a2-3443-4a36-b95b-dfadd3464e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d0ac48-4572-4bd4-8812-73283928fab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9996081-07ad-414c-b1ee-16019fe4a48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c17d64-fc5b-4450-8908-034f731e4265",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fc1d97-c47e-4041-94db-df7f65b67c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b204f7f-f5aa-4b7e-8a66-5521606a32dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982a3d3a-ee13-4c98-8322-e811dd38db3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d100de4e-82fb-464f-9ca8-f44e2cf14a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff68a9f-1184-4462-95ad-de7319561b66",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeaf477-8eb6-45d2-8d9e-cd14e982414b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd520328-7305-4ede-af15-b3ad19e3f8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6cb5d1-e9d9-4679-b3f5-8b19f56407a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4502a19-b45f-4a5b-bbab-c9dd22f07bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fd0ec6-a022-4d4b-b3bf-40cf602dd406",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a2de2-f943-4283-af43-dfe0fb31c87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e94acd-a895-4a6d-bdad-2023af2c9877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbfa5f3-0325-4e2f-904e-04dcbc85f07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405e2677-878e-4bc8-a72b-7200c82c51f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91bf406-a4ba-438f-86d2-04aba674773e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63efcec-f3d8-48ad-9b34-3e876de61591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fb9294-4030-4d4f-bc7d-727a5913abc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7136bd-a775-423d-8f14-0873bb6fd316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd22f339-8f86-4050-814e-b2e0e71e051a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c661db88-4b2b-4e54-9b6d-1c2b2ba90fb9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d9ae2-b123-423b-98c0-9fe7cdb11c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d9edd9-4ef4-4dcf-a715-276faf16efb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a29803-75f5-430c-be1f-105d3c442947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c62b3f-aca4-4439-90c7-bb93032848fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af41b2f-facf-4886-bc3f-08c01f0b0a38",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc16ddf-68ac-4da4-985e-233eb64d2934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cb7116-6c0e-4ff0-b62c-2339bd0e9d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfe971e-4822-4ece-8c37-2b8538c05652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446b4571-8a18-4e22-85b3-30915a251be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a5e635-9c80-4c48-bca7-af9c34f3eb1c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40927b-9250-442e-86b6-dcf23fbf2528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cbe595-aefd-420f-98d9-c68fa66a8ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1ca96-d903-4627-8175-3a2996c1b986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beec5611-36cf-4fd1-9af6-d5dd1bc2d607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30543940-7c70-4f13-a40b-64b206a1832c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771aa039-fb11-4f6b-a114-8f653013bb53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eceb5f7-a704-47aa-bd54-426dd8e0c13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3ba784-6b6d-438a-a7b4-aae5733b2023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2341449-8bbb-47c6-8db1-01781c41468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e02bcd-b360-4692-83e7-e2a2632f8240",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a5f603-08f9-4364-8f95-04c1fa28aa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d3a68c-9350-4336-a055-9bf6a43e383c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e06b30-3d8e-48a4-9703-10624bc2c4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28b3b81-4be9-4607-b2f9-898359d09102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91917fa1-cd1b-43f1-92d6-3f882d86529e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec11891b-8ba3-457b-90a7-642a5a8501f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11855263-5f20-4074-8c05-19e25a376087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5bead1-814f-45c8-bae2-c23798005faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a8ef59-cc8c-4b03-a1fa-3ea8647299f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ea86aa-afa8-445d-be7b-04650bd73ed0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340dec8a-5523-4cd7-b70d-9f172827d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c848e0ad-1fe8-4b82-8618-266f92df89c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3525deaf-9fdb-44e6-9b2e-a78f21190f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564826d9-587b-4e4a-81fe-e4621933ee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304c89eb-cd9f-4ea2-b264-de0ef57ee7de",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e8f58-c07a-447b-be28-a6f2f57305bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e81012-f5a2-4c98-a5b7-e7d8ae84e33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5897f80d-8296-4c47-bf8c-c9a2828fda0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e39ee01-663d-4e48-b841-32e1aab3268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e332b2e2-9be5-4bd4-89de-b42b7464d8e5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ed170-76d8-47c9-8ae5-533b36df4b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f2531b-b648-4a0b-82ad-f3fb36bd78d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b92109c-7dbf-47ee-8c53-9969d9d73659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ec20a1-e079-4b9f-9c7e-4606a1d5b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558406c0-d636-4b94-9c54-75582118b7eb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f60fe15-5b38-46c7-808a-59a18dbf51b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30d09c3-167e-4c92-80f1-158af65df8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6534d46-b3ce-40ae-91f8-fce4e5b45025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3890f24f-d15a-490e-9641-704e360b4bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee888adb-b6c7-483f-83d6-c75ed0f0cb14",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da720f-d473-4b89-a1ef-c7e424bff111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9723a03f-3aed-468e-86ec-36e8227696a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba09416a-3601-4c84-bf91-7abcce7cec9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50de0d7-753d-493d-9f77-e2a6b0a6e34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571002da-30b9-4c76-a3dd-61d0e7a25f7c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f8b314-96f7-4b63-896f-ddf71103010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d01c0b-9219-4fa7-b970-9eadbc5e7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4918bb-b776-4d19-a620-45ba1e519577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92415eb4-d561-498e-a24d-c72e2ae3052d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0f55e6-0d5e-461d-b048-df86b70ffdf7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0005df-d878-446d-aa20-151f0e0fff00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5427293-4bdf-4bec-8d74-f388fe16af5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598f0c69-3703-4116-94fd-4c840f5ce95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00313f2-fad1-4e5b-97fe-9d495b5a9e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d1533a-6fd9-4476-97e5-0041ae256b05",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12def304-b1c1-4477-b4a1-3c93ba484ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787b6b6b-76d8-47d9-bf4c-597abf8368ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45c5104-3f9b-4d45-a94d-cadccafd3d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c867399-4b0f-40b0-a137-2eb8ac9c563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc35469-5aab-45ac-bf86-dcb60e3360cf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5512e875-98f2-4b43-961b-f87bd86061e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2aaf50-b926-4559-bd84-dc46b4ba45ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3773b04e-20d5-4704-8aad-2b8096a8e01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03be8521-d0ff-48c2-bac5-33c2eed98178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be578f-ccb8-4ffd-879f-e4a20fed51ce",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7909aa3-7d89-4226-9b5e-85b7ab7e89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc14d66-6701-4608-a981-a34dc52c8c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe8e159-e993-49c6-bc65-b631c7c5d482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a290a0-a547-4361-aea9-ce69e9e2ab00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32db8c13-cd17-468a-928d-e93980f40b5a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ced7065-fbc3-4458-a55e-1e4ca2fa6347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a4e7c7-2ace-44d3-8648-d3adb808c509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b4918-4ff9-47bf-9f69-b473765b0a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f04368-fc79-40f2-a217-a2095917b098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadcc5a0-bd4f-46c2-b468-43a7131c8e74",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdc2580-caf0-450f-b513-1476e02dfa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef5b2da-de98-488c-adbb-024ac845e3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48c9897-cbb0-4487-8f4f-96c1bf1a615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cab69f-a697-4335-a123-abf37eb24b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba5e44c-635c-4fef-91e3-808ebe95ad85",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d387284-af29-4aa3-8459-7be131974bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebda7326-bb78-4b5a-9d6c-02477c98bb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f77bdb3-c5d0-4633-a4db-f2864775ceb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360f9ced-af97-4cdf-a293-53a64c154c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adae8f2f-675b-4d01-85ae-466590018891",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682d1e6d-94a6-45a6-8993-62ef597a5d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aa011f-0da3-4ccc-9a20-ee7e666baf01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008ddcca-14d7-4e52-8994-b037e216cecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3296a46-9012-4b79-ae71-eb2283c22644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da66585c-caf8-45b1-9a26-de5d93c5b67e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27648ef3-9d25-4ab8-a700-f84fbeb48294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c0b17e-c1c1-47ae-8d12-783debb3617d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8f4f31-c501-4851-98c7-4e3a30d217fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b8db27-572a-48a7-adc4-4fbae16d2ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f204a1a-ca7d-4d54-8c81-276615ce53c4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07808ff-3563-4e77-8215-01c3fbe16678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a072039-17c5-4609-8d0a-c410c553ffb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a33852-3fbc-4021-adac-5f23cb4a56bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4cf50a-0d98-4de2-a43e-8250d804e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f9db1e-3999-4206-ab62-ee0f34878db5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafa1bb5-d93c-417d-a1f2-5744a084b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643dea10-972c-49e4-9800-7c44149ffa98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae923a-2ffd-48ae-97d5-06f0138cf21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db23f7be-728e-4f67-91f4-bdc219b4521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d15c34e-e11f-40d6-8fcf-9b5ca69f9bd5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0af27c-40dd-43a6-aa39-aa73eb103b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f36945f-771b-4123-89eb-c160f886cad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e531393a-5dab-4b7b-9432-ff5f1fe12d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d178093-37ee-40da-8f97-290e68c49cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2ab673-0277-475f-aa7e-1677a5855fd2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34eb5df-058e-4fbe-b6f5-6685b37f720e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12892ce0-2775-426a-9549-0e2097d2dd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470fbe5f-8170-448e-afd8-b72e30267487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b33129-43c8-40f8-b8f9-17342d72b8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf3d2ee-57e1-427e-bc76-bfaf243ba386",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42eaf44f-6b77-43da-a0b2-cc3af984a567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be27e6a-cb26-4eb3-9ce0-555ab7e2d46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb07b187-7f25-477d-80a8-9b1eb3993985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eda59f6-56ea-460d-973e-b0144d4a718c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd863eb-d6b1-4b22-b1c1-347be99194ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cff2c5-8612-4378-8c2e-c35f6a5cb24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c48b0e0-5468-40ef-83bf-f868e9dcd9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc9597-864a-45f2-b079-36ebfe721be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891077b7-2287-4521-baa7-de33b582ca85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b58c68-e89c-470b-b88b-edf04f6e369e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e869fb73-5723-4320-94ad-10a54bb2bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7d4424-e2f7-4d03-aaab-72a76fc1dc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a911ad44-1492-4a92-8a02-edf4ad0cc712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5e3fd0-bc55-4a68-822f-476427d506f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afd921f-54f6-4080-b245-6541a53113a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38108ab-5adb-4443-b8ba-4757ccdf9852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f097aadf-ce38-4679-b2cf-ad57b6a2488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d2fe8b-f9e0-4e6a-97a1-fb0c94508e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdac6d05-a347-49a4-9e26-d4787efc4c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940ea4d8-33af-4881-802d-d4667fc27de4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb72359-d564-4e16-a944-d3fba755c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a055984d-1a55-4f7a-a841-c6fd9bf99bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ef8d7-0460-4cb1-a963-635d3fec3218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c94b35-d25a-4ec9-9fb6-e2d7af4a835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb08b55-89a9-4f4d-b15b-6156f03a6e0a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a574d8-3471-4d9b-bd17-095c2f6badd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ee4499-213f-4f32-9043-f078af6c61bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0950b37-ee31-4aea-94bf-b2b031db1ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21d8a18-173a-41a9-a2eb-bbba7bf0e588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6108299-0a37-4695-8fc5-7c3f5404cbda",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d430ee7-69bc-4e0e-b03f-7f49147638da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefc9a0e-6622-43fc-a31f-9281db970553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44bfbd3-a484-4df8-8ee5-4ffae2095b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb39bce3-556d-49db-bba7-d2b581539ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32854f8-d6e9-4e5e-be4a-4f2306295883",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155911b2-45a5-4426-81f4-b5802d06c241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36849dc9-7b33-4370-a0c0-28c64d2e5f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13d8ed6-624b-42a9-b71c-dc3b216411eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341a11db-c36a-4ee9-9239-ace4411b5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63a987-4853-46ac-9b77-5c7900efdc46",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a19818-f7bb-43a6-90d8-1a969f2852c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539afe8a-4775-4ae4-9e34-92078d90b309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b428e60e-29f4-484e-94fd-57e5edf20047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eccd57-65f9-495d-8a2e-4e040876ce45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be787813-1b33-4498-ae31-5e1c724b79ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88cc287-aae0-499e-a182-962debd8d24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedd6949-f524-44f0-bad2-377ec11ae1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cbf77d-96d4-4378-ab5b-399d8db42358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9115b4c8-8e58-459e-8ce8-8e4e025a3929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64715edd-ba34-4ec1-9d87-110e18a21539",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6af4127-24cc-4d92-9486-0d53c8bc9883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39461e2-5085-483a-95f7-55444c8293f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7c3646-900f-4e95-b54a-e6f21ea65ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc202cd-3a9b-4a68-ad1f-20809d789566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1124b576-68db-49fd-b402-f2543dc36bcb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09451e0e-992b-4bbc-ad08-b7a70b3e78d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0459b5cc-25c6-424e-89c5-a1b8ce78b0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aeb851-832d-4a25-9f6b-2003ad4699c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8093f27e-d710-4134-bcfa-1a0bf0134c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7756efd5-4da7-4ab0-81a7-f3692f315daa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890a498-e616-49bf-a8d6-a26c621ce793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c484b6-27ff-4554-b556-28278743bac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a200c32-7014-4680-9b31-44e4d4faf314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6a19eb-0db9-42cf-8928-22bc6b000689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a258e29f-bed7-43a0-ae70-3582102deb58",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f43ab0-94fe-49e5-a59f-f652fc559db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012bc7ab-2b86-4744-b6e9-d7d24b6771b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2486fc-4e72-4965-958a-e2821b710c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279c368d-45b8-4a50-89a3-dfe99656c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe03630-31e0-47bb-97e6-159a5326da91",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68715e2-2522-4a87-a6c0-a20d788271e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddbb0bf-0b0d-4246-b682-192933a9f4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3513ead-92e2-43f3-ae54-37c18493fcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3329e17a-63e5-480f-8810-de829cd65e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af98f37-1232-444b-bc71-4426f62e23ff",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8675aecf-6520-4f53-8a33-c4b9b9612109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc109d05-08a5-4f19-8396-961d56338ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8a52e7-4d61-4c2c-929a-e0ca4cfdb1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504b00f7-2963-495c-86ff-acbab1a10338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252872a1-0ac4-410e-883a-6120fc9891af",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f687dd-659e-44ad-bf23-d2b0dd84e797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dec8c43-10c6-49df-8f3f-3efe3e53935b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40790af0-3c99-4d47-a1b1-a74fe31861cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56800a01-7483-446d-aafe-7c518a08db8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3e04a2-e958-4f5f-972e-16f2e20da665",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3da3a5-38d5-4571-812c-a7f5f00bf567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bcfdd3-70fa-46fc-9f50-da23e3666b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f33eac-84d1-49d7-9dd4-71287e5b95bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3d1d61-0cbc-4f2b-be97-f01dca784971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c158d556-598f-4a8b-898f-f8b200a558f8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1baf53-7bd1-42df-a0b9-c81b5163e991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2de6a94-2131-46fc-b1e1-f8559207d242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f959cd89-bd37-458d-bd92-4a2d9ea55af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbc6cee-d60d-4908-8601-448f6d276aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab19792-9b11-4478-96f9-190e0e1735b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fddc2bd-609a-477b-b32e-6bfb51729d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d04988f-530f-4431-89ab-5dda7cec7641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb2740-b14f-421d-ac3a-45762aeb6f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff55381-a0fd-4c00-a740-4787fc170cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7dcdd-6b33-42d1-a914-f3c39266bc71",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a3b1c3-ab76-443d-bc0e-f7d4c5fefa00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99130dae-56bd-4684-821f-71cb3b5fb47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81b7fb0-0eed-4038-ab54-e66fccb8090e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bcd559-02d2-4155-b5fb-d328ff7cbe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60927ad0-9254-4e74-a386-43006912946b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4b8df0-31cb-4c30-b70c-6c5018f7041b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98be4745-1e09-45d0-a9f2-d09a161cc9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cd3ae6-0741-435c-973d-60faf1d33b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df3e4b6-97b0-4b3a-a645-bdec85022b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf61823-7c4c-44e9-9962-e60c53e727f5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46e9504-4f20-464e-b8bc-1a1c81a1f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6f0a6c-843e-423a-b405-2d15cddb7bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b596cc-7026-40df-934f-12b5e0230c03",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1411cd-3852-427d-8146-83fb68dce471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4fb7fc-a2b5-478a-9811-8d9ad9f7220d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37100b29-2b8b-4921-9782-4d9bb2dee288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db95da27-6770-41ad-b146-9cf98da84961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cc0243-ecaa-4801-9652-5212de3c8d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75399e53-13c5-4d23-998d-1f1970c6a65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85841df1-6951-4834-9f75-235f133c18b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f3b2a-a00a-43f2-9b50-d1633602b362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b37adbc-17d0-483d-8de8-e119bdee94fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ba960a-3285-463d-bd57-1610473d18b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0390e03f-b7cf-427d-93d9-39d168e0649a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523f8432-a8dc-41fc-95a1-40723eb71e89",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb7dd3-3675-428d-b314-f6bd71183bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67a82cf-23c2-47fc-9e34-dbbbe8103767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56909cf5-787f-4de0-925b-c9757a89ba2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79974455-0d54-460f-9cd2-a891be26bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51937ae7-f1b8-487e-bd54-9c8354bb5926",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd21566-cd02-4410-8ab9-59f7141a8117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7bb3b57-730f-4b4f-93c8-cd2c54c56cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff99ee4b-a800-4d42-9b70-6a6fa2b03068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a132bf2-6696-4feb-bccd-c4fb2188adf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8a5fd3-9f89-47c2-9ce1-1e79fb799b54",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd30236-0962-498b-bdb6-fbf15ed6a932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978cdda2-8f15-476d-93b4-ca89e5702fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a060531-445e-41f6-9ba3-e10ddd56b8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0e5035-97dd-4679-b1c0-08f3b7ba40ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85337047-eb57-4a0b-99e5-e17aa8f0abe8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a650c45-ba5b-4a76-b190-2022cba04d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ac4fcb-cb19-4e91-8f76-408c139d2b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a36f69-535f-45a7-ba55-8df2fbb14ab8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7673412-be0c-4e9a-9e18-32c1e0fa946d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b94c83a-fc0f-4015-bd18-f22e2a48f34d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e6fed8-b0df-4f9b-a1a8-54295a946f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f130bc52-1c50-4ea4-8d9d-746c42f1cc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae9292f-be21-4748-9fa2-6b315b470b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963ae4b5-8d34-4c80-b982-32db0633ad24"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed012490-8227-4dd9-ab48-b8f69c0b088c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "009cc41f-c4aa-4391-bc56-13d60018fe39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a487df65-6c15-4a4f-b817-3fbfe8373f83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78a5fcdb-48dc-44a6-9273-25a1959e1e7a"
                    }
                  }
                ]
              },
              {
                "id": "277564db-7dae-41df-b95a-335ecf7b7a72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb50df0-7bb2-447a-a47e-6b0210eef008",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a4835-bbbe-4502-a1fd-15f0e34c3273",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "de4dd632-2a91-430b-a1c2-f7ca30baefbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb829084-ae2d-4737-9e45-fbf438a18229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06739d7e-2b42-48b5-9582-131aa5be553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faa0695-2654-4c3d-abcc-f12605946bc9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a193c4-a1a8-415a-a27e-5cd56c2922a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3c904fc1-f2ec-4e67-8b62-85b9779c3e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678bf08e-5a18-4e4f-a08b-bd11ef8e8f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0fda541-ed71-40ae-a7e7-d222d25f93e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "847e2180-e8c0-43d8-80c7-c9ad535cb73f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc2a06d4-e3c0-4e7d-9ce8-6c270a901d34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cd037d1-3e25-4373-8a5f-c40812440bc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d8c22a-545a-477b-b636-f7d0723ac039"
                    }
                  }
                ]
              },
              {
                "id": "1370b6a3-eb95-4926-b464-818a582944bd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6da5b091-37f4-462b-bb79-db4c60bf9f4e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1151b69b-5322-4bf3-b7d6-08a3823837e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c0b57005-6a88-4baf-ada1-7da33e5c9ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c84707-5016-4275-b307-81654dd65d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f28d0b3-8178-4976-a5f2-e64051a8f8fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d285381-f77e-4db4-adb7-16ada03f56ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7878ae08-2e1b-47ca-bd18-237cc83e51c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7c554f-ffae-4206-b94c-299df36651f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8422ea0-9aea-43ee-9390-3a17ede3103c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b256494-301f-4d16-990c-5b9f54902115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63213698-446e-463a-93c6-0ac8cbb28ad7"
                    }
                  }
                ]
              },
              {
                "id": "156f248b-5cfa-4e1b-8f6e-913a8df635c2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bc7da1d-a5dd-4648-af03-ef9eb17484c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cea2f216-6480-489c-afdc-c684fb4cb935"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bbcd48b-2e70-4de4-928c-111f5215b3cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e76cb79-d323-42c7-8643-b8ff8fc42e4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db8cef09-7f54-48ad-973a-ea453f416d66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6e5c6813-3dca-4b7e-af11-fd5b22a4fe4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b5f22f2-9f13-4c5d-b3d9-02f2afb96533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9acc768-e63f-4580-8ec9-04b07725c481"
            }
          }
        ]
      },
      {
        "id": "e5bf0a26-4b2d-4951-ba2b-115ed11b8548",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb440fc3-e541-438a-8703-17bcb435f95e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fee19864-d673-4fda-9a77-57195a5d3a7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355bde11-f88b-463a-bc5c-ceb60c817f73",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d498c419-fe11-424c-84fb-f9869f79ffbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da707817-351c-4883-92ea-86e6a4c5efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5e4b247-327a-4acd-bc96-be5181d82e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f0f438-5609-40d6-b507-709622598438",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f758a16-ef71-4f97-8bb7-ae5f3bb3cf66",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "407cb8b0-bb65-442b-8545-e36fdc05bb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70972c1f-1b91-454a-898d-232600122ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20816669-d220-40df-940b-c3d5bc0b5c3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a2912cc-04dc-430e-b3cd-9f77808d5369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "208a5ace-0ecd-43a2-ba99-ee6edf2c8373"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0fd602e-6252-4e89-8c02-bb3dffda685d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d0d1120-fa90-4348-83c3-ed294bc25259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d3e8fe2-782f-4988-a32b-2b9aa0fefafd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "daf07500-bf2e-4bd8-8ab5-6635f8efce1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20d618e1-d034-4361-9384-bb96ddfa9383",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e26eae41-12b6-4d73-ada3-fa6f6c7584d7"
            }
          }
        ]
      },
      {
        "id": "277d332b-60a0-43d3-bbcd-620e2b593c1a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b4f3e191-9df3-4108-9811-990dc06102be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c412388-e175-4492-a94a-4aa3897d4d09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c029d14f-c268-440b-b367-2e703445a04e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a017b4-0e3b-45cc-a7dd-7794f43681d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0e5ad23d-4d97-42a4-a954-de6fb51feded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e2dfb6-b944-4fbc-b0c0-42a6f2a5ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa1231a-19bb-4e40-8c63-7c33a66b66ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8f648c-35be-4272-bbd5-232aecf85509",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9938e-904d-4302-9a06-2df2c427ec74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "15d880f1-372d-4cfe-ae80-0baf8ad6ff9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195803ab-c681-4740-bd83-1c066a963b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fb55025-6837-4312-a89d-715f44eb6d1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f4ebc11-f9b4-4f9a-ae3e-cab2c616e52b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c89964a5-c7d2-4eef-aa0f-e8149d1c3441"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7cbae36-48f8-4089-9f77-afe67f5300be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4d9e469-ef84-45ad-a32b-d645d3e2b30b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6309cc24-fb86-4ddf-aeac-ce3f0a9f1a33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "93dc70cc-ec2b-4683-a59c-a1d248dc245e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef4089ab-270b-4cfe-ad7d-b01fff6365e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d2cc573-f607-4349-9085-7b41b5b1d6fb"
            }
          }
        ]
      },
      {
        "id": "794a1d34-daff-47ef-afd6-542e03f82cd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8ad872e-8d8a-4570-9f58-7a8121aefe25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "764a21b9-9ae3-4bbd-a192-d8a7a544b150",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2028ae5e-82fb-44a7-90e3-ae5552cebc7b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a282cdf-a0d1-49d0-94fd-13ac020727aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c64d876-4a42-459e-9903-974cef4555fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1969dce2-93c0-4251-96e2-ecb683cc3a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c65e0f37-8bfc-4a26-a7d1-ef2e387cb905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb81ab42-532f-4e8c-b481-6f81de3ee7ea",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7104ea5a-b524-439c-ab76-2a4ebd75cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eddd57b1-7d56-40ac-b21a-e4ccc1d7ce5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e836da-2004-44e2-b7b7-ca834612f0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70802825-7016-4a70-93a4-6fdb0c95d46d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82ead3d2-3b45-46d2-a4be-fb35c670d4f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac8e0849-5fa6-49f4-ad2c-a7f77c43fdf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4873aa-06c6-420f-8f52-b845fc964629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bc7a795-39e0-4c3b-a50a-5cd08b693145"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c96235c-09af-4d94-b529-6f420d8373ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "71b4edb0-9702-491e-a08b-82865ba67dc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03b7541e-493f-4e45-a216-170a6273e839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f45300a-9d3e-4c25-8d52-ecbc0fab3d1b"
            }
          }
        ]
      },
      {
        "id": "cf2b27eb-ad76-48cf-a2a8-38ef0d3dc966",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cac5faac-ef09-47c3-bf81-692e9ec8abe8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cd3b17b-5aa0-425d-8c0c-a61de50ca803",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6249a1d0-81dc-4d04-a684-7a3a221e7ca5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b832cfe-a656-41ec-95cc-3d97dd996773",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b85ddee-897b-4b20-8576-856f7e7ef265",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 662.7442748091603,
      "responseMin": 13,
      "responseMax": 5671,
      "responseSd": 680.7372907606198,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672879160248,
      "completed": 1672879344695
    },
    "executions": [
      {
        "id": "0f0083b2-2eae-4087-b85d-1a20bcc86b1f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "db21f6f0-f546-4faf-a934-c4f9682972a8",
          "httpRequestId": "41b38d6b-9e7d-4532-88f7-f5f0e79391bc"
        },
        "item": {
          "id": "0f0083b2-2eae-4087-b85d-1a20bcc86b1f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "03b6c5c4-8069-4da5-9ee7-326278f88eb1",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "1a7f6a14-1ae7-4ad9-8de8-24538a2d3ca6",
        "cursor": {
          "ref": "f23e981a-661f-49e7-8e7c-ef2454f0ef1d",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c067f3c9-0f6a-44e0-8472-c9d439a8efc6"
        },
        "item": {
          "id": "1a7f6a14-1ae7-4ad9-8de8-24538a2d3ca6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "365b49d1-49d0-4255-afb6-0dff93a1321a",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "97f74862-2805-4f3b-a461-ce2caf0cb03c",
        "cursor": {
          "ref": "ed1703c9-00d0-445b-84e9-25d7ed852f55",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "488d405f-8140-4a04-acf0-3a35d5ec1426"
        },
        "item": {
          "id": "97f74862-2805-4f3b-a461-ce2caf0cb03c",
          "name": "did_json"
        },
        "response": {
          "id": "42fab824-76c9-4e0a-bdd4-15504536580d",
          "status": "OK",
          "code": 200,
          "responseTime": 638,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41af74d-f3a0-4154-98ab-e0ce146f5c24",
        "cursor": {
          "ref": "96343894-a15d-4fb5-8f1f-fb793eaebb4a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2790e9e3-8b1d-4430-8d6e-c4001219887e"
        },
        "item": {
          "id": "d41af74d-f3a0-4154-98ab-e0ce146f5c24",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f56762b-e709-40fa-bdfa-d7be4b04db0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41af74d-f3a0-4154-98ab-e0ce146f5c24",
        "cursor": {
          "ref": "96343894-a15d-4fb5-8f1f-fb793eaebb4a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2790e9e3-8b1d-4430-8d6e-c4001219887e"
        },
        "item": {
          "id": "d41af74d-f3a0-4154-98ab-e0ce146f5c24",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f56762b-e709-40fa-bdfa-d7be4b04db0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461d56b5-1e78-41b6-8408-0b203a251fb4",
        "cursor": {
          "ref": "49a311cb-5dcc-4b6f-bc56-46ce81d2df01",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "453cfa5d-6328-48c2-91d6-89cf6ad898e4"
        },
        "item": {
          "id": "461d56b5-1e78-41b6-8408-0b203a251fb4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "62b4a8fe-8bde-4af2-8b53-6f335fd37c94",
          "status": "Not Found",
          "code": 404,
          "responseTime": 705,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02d5a4d-b2f6-41f4-a69d-f66eef4dd151",
        "cursor": {
          "ref": "85ff5e7e-51dd-4cfa-81c4-56efc68507c4",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5a38468-c847-42ab-86c8-c98636e135d6"
        },
        "item": {
          "id": "e02d5a4d-b2f6-41f4-a69d-f66eef4dd151",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6604a4e5-5502-40b6-b0e3-9537fa2d5c1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774f354-b0f7-499d-b4b3-d666d8c632c0",
        "cursor": {
          "ref": "8a19d6ad-bd37-4c83-9147-032dd671ef55",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "56c81b32-e270-4bd4-aa2b-5f11ab8864ab"
        },
        "item": {
          "id": "9774f354-b0f7-499d-b4b3-d666d8c632c0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "492aaf5b-8d39-47f2-9efc-49509bab433d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a273433a-02ad-48ca-a29b-731e52fdade1",
        "cursor": {
          "ref": "0b0bbb8d-c2aa-4c25-9dc2-69eef7f1f463",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1cd6460c-73b0-453d-b0f8-3b0475cd5fab"
        },
        "item": {
          "id": "a273433a-02ad-48ca-a29b-731e52fdade1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dbcadf79-7ec4-47cb-8ff5-4bde7b22ea3d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 558,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a273433a-02ad-48ca-a29b-731e52fdade1",
        "cursor": {
          "ref": "0b0bbb8d-c2aa-4c25-9dc2-69eef7f1f463",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1cd6460c-73b0-453d-b0f8-3b0475cd5fab"
        },
        "item": {
          "id": "a273433a-02ad-48ca-a29b-731e52fdade1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dbcadf79-7ec4-47cb-8ff5-4bde7b22ea3d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 558,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc35eed-70b9-44ee-8fc5-0486cd44cb6d",
        "cursor": {
          "ref": "6b6829ea-bb07-4deb-8991-f81336af11d1",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ab2eb6b6-3302-49aa-a225-fe77bd199d72"
        },
        "item": {
          "id": "ffc35eed-70b9-44ee-8fc5-0486cd44cb6d",
          "name": "identifiers"
        },
        "response": {
          "id": "a7dd7e86-74d1-4eb9-aecc-16bbd07673c6",
          "status": "OK",
          "code": 200,
          "responseTime": 975,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31200aa8-3b07-43ee-ae40-bdf2912a22d3",
        "cursor": {
          "ref": "e3d90cd8-a4d2-4664-bdcb-be7c0a238bcf",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ca777542-4c4c-46c6-9db8-5642f6078104"
        },
        "item": {
          "id": "31200aa8-3b07-43ee-ae40-bdf2912a22d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22537d3a-6f3e-4914-a2eb-45786597a4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31200aa8-3b07-43ee-ae40-bdf2912a22d3",
        "cursor": {
          "ref": "e3d90cd8-a4d2-4664-bdcb-be7c0a238bcf",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ca777542-4c4c-46c6-9db8-5642f6078104"
        },
        "item": {
          "id": "31200aa8-3b07-43ee-ae40-bdf2912a22d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22537d3a-6f3e-4914-a2eb-45786597a4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cca89e-ef04-43af-9d02-2f3294e9d36c",
        "cursor": {
          "ref": "9d2c3081-7f87-4d04-8163-0f7972b57730",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "56dd786b-6b9b-4563-a543-39896dbd322c"
        },
        "item": {
          "id": "87cca89e-ef04-43af-9d02-2f3294e9d36c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "31d86aa3-dace-4c4f-acbb-796523c75e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767473e6-674c-47fc-bfc6-622d155e5827",
        "cursor": {
          "ref": "93ba191e-35be-45a7-ac36-80a6dfa1bbec",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "84ca59a4-01db-428c-a673-f4f6c8b6eb63"
        },
        "item": {
          "id": "767473e6-674c-47fc-bfc6-622d155e5827",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "70919d62-8915-41e7-8302-004e7b015c0b",
          "status": "Created",
          "code": 201,
          "responseTime": 4180,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "ba8e7f59-95c0-4a55-917b-40941f6ad155",
        "cursor": {
          "ref": "dbd728e9-d003-4e3f-a0d5-cdc5be06413f",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ba0ebc5f-7ce0-4428-ad31-30ba22bdc9e3"
        },
        "item": {
          "id": "ba8e7f59-95c0-4a55-917b-40941f6ad155",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b5927ad9-22c5-4f91-b795-1c222aeac222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55558742-8719-44b5-8992-f0734e96bcc0",
        "cursor": {
          "ref": "9c3bdd82-6e66-4c3c-a57e-55169ba144ef",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e569f3f-cf4d-464f-9f43-58033612deba"
        },
        "item": {
          "id": "55558742-8719-44b5-8992-f0734e96bcc0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "954a9731-c0aa-4d8d-ba81-1c59edacbf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e5440d-d92e-40f6-97b4-72bb7ea8f6ec",
        "cursor": {
          "ref": "8825f826-5d4b-4929-b08a-70f1933c005d",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57a79e9c-2c5a-486d-87e7-a1c4d8488682"
        },
        "item": {
          "id": "51e5440d-d92e-40f6-97b4-72bb7ea8f6ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90963157-1fe0-4463-b8c2-006ba2c98df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff61da0-df6e-43b3-848d-cec722051102",
        "cursor": {
          "ref": "e44ba539-a7f7-4ed2-b650-d4aaa42a3a15",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d8d71134-587f-4eca-8a6b-f49527bc8b03"
        },
        "item": {
          "id": "dff61da0-df6e-43b3-848d-cec722051102",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f4cc9da7-08c3-4572-be91-1a581e947f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc495378-b387-4800-929c-f2f2a3ce1363",
        "cursor": {
          "ref": "7f0583e3-ed48-491f-bb99-a54ed4c71e28",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "631cf067-5c46-4b18-baee-ffe701e62209"
        },
        "item": {
          "id": "fc495378-b387-4800-929c-f2f2a3ce1363",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a75f2d9a-4e27-4518-9d6d-8530cc9c9776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734b7eb8-7d7d-45af-bf3e-40209d4ce795",
        "cursor": {
          "ref": "8223e0ed-741f-447f-b9e2-33951baee76b",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8284c34c-46a2-4b31-b3bd-39a7a3b71fc3"
        },
        "item": {
          "id": "734b7eb8-7d7d-45af-bf3e-40209d4ce795",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fe494d79-bd63-4bf8-837b-145d63f4f71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a44cd7d-9569-478a-9a27-c257a6721983",
        "cursor": {
          "ref": "802ce0dd-80e2-48bf-854e-6b91e64fbcc6",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "42506470-6f5c-4d43-9919-66779fb33ba5"
        },
        "item": {
          "id": "4a44cd7d-9569-478a-9a27-c257a6721983",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b8f08b0e-6e52-4952-8c13-196f81928de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e01e520-6e51-4082-905f-8e92f3ee7c49",
        "cursor": {
          "ref": "00e88dc4-62a5-4244-9d7c-80be43b9566b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5f89d4a6-60a2-4f47-b2cf-5bc31ab976a8"
        },
        "item": {
          "id": "1e01e520-6e51-4082-905f-8e92f3ee7c49",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2778cd0f-2c57-444e-b886-accaa575bbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395e9675-3027-4464-91f9-24ed3fac8517",
        "cursor": {
          "ref": "b88f1d3f-7f48-48f3-95f0-da5b6531f7dd",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2116a436-3f4a-4ba8-a4e7-2ef36fd82b75"
        },
        "item": {
          "id": "395e9675-3027-4464-91f9-24ed3fac8517",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f56839ba-7549-4467-a64e-766d3ca0862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2913e0-4777-4deb-b245-3c0649b54098",
        "cursor": {
          "ref": "77ff4572-8d50-46b7-b224-d8187fecd069",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be79d13f-938b-446d-8ec5-fc9582f018c0"
        },
        "item": {
          "id": "3b2913e0-4777-4deb-b245-3c0649b54098",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "813ae05a-3252-4d07-bcc6-a5c2322d8c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b5cf0-0dcb-4328-ba8b-f85ed41de0fa",
        "cursor": {
          "ref": "b409f9a2-7163-4259-83d4-d0cb6ecfa987",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "864a9f13-133e-4888-8ff0-1ffc56b239e0"
        },
        "item": {
          "id": "269b5cf0-0dcb-4328-ba8b-f85ed41de0fa",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "bdee4815-c1b3-4a8d-9bdb-d9cb807b1d73",
          "status": "Created",
          "code": 201,
          "responseTime": 5671,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "3e84e2e0-d39a-4e21-bf7d-f3671b889b3f",
        "cursor": {
          "ref": "2b09c483-014e-4acb-8454-c1276605e769",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "88740f8c-d33a-4af1-81b7-bb2dfface2e8"
        },
        "item": {
          "id": "3e84e2e0-d39a-4e21-bf7d-f3671b889b3f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6c226e2c-2d6a-4942-885c-a5a3a56657fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7d9ddc-33ac-4e79-9d0d-b5381e97a11d",
        "cursor": {
          "ref": "9fb220aa-40e6-45ed-a03a-892ff3dbf180",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "874b0a6d-313d-4837-963a-22e8f1e0af95"
        },
        "item": {
          "id": "7f7d9ddc-33ac-4e79-9d0d-b5381e97a11d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "adb2a28f-4699-4549-9e50-e642f9e90933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff5da9c-c746-492b-9b39-6c9398f83640",
        "cursor": {
          "ref": "8f8ea650-b604-496d-8f3d-0c7f896fdc47",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "86e3e26e-6d05-40a7-8749-dbdccbb30624"
        },
        "item": {
          "id": "9ff5da9c-c746-492b-9b39-6c9398f83640",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6e9cd6b3-1431-4b5b-9af4-1dc8cac02124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ea480b-ec8a-4f02-9c51-63f7400089df",
        "cursor": {
          "ref": "36da9be3-13dc-4e4c-8009-a1a260613b92",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c51880d3-04c2-41ad-ade4-7a3dea2585bc"
        },
        "item": {
          "id": "04ea480b-ec8a-4f02-9c51-63f7400089df",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1f454004-cad4-435d-b9e8-7ed1cedbf50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b729ef2d-e26c-4346-8854-0a0124d57a04",
        "cursor": {
          "ref": "264ef981-c633-4d68-bf26-0695f89b64a1",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8409d93f-50e1-4c92-94f7-1618b13ca21f"
        },
        "item": {
          "id": "b729ef2d-e26c-4346-8854-0a0124d57a04",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6fd84bf5-0753-4406-b607-a456bc5c6ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a9235-7db6-4a3c-8d42-e126561c1861",
        "cursor": {
          "ref": "b6c65802-e056-4526-98fe-3511c9eb7fcb",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff593ddb-35bc-47b7-924a-df19e7ea5ca1"
        },
        "item": {
          "id": "c57a9235-7db6-4a3c-8d42-e126561c1861",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "69a0597b-b810-4c24-862b-32c10053ecea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d900e001-8910-4116-b5e3-2c2f4da7def7",
        "cursor": {
          "ref": "ec9e18ed-d3f7-4d2c-8ec3-282c626ce9d9",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f98a650c-b1e2-416a-b942-3bc91956b839"
        },
        "item": {
          "id": "d900e001-8910-4116-b5e3-2c2f4da7def7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "211316b4-6ba2-4e1c-8c2b-10f4469dc089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f963cf57-8284-4755-a306-d3a2ab34348f",
        "cursor": {
          "ref": "ba2f621c-5e4f-4033-a62a-519442420200",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8666ea9e-af0c-4293-ba3b-8728d3f9af74"
        },
        "item": {
          "id": "f963cf57-8284-4755-a306-d3a2ab34348f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9d1c40ab-e260-435d-92f3-ecf2ed41dfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092255c-d972-4546-b68a-0c701542a611",
        "cursor": {
          "ref": "8723adb5-7380-4bce-afa7-207f29730c6f",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9c03a879-6e28-4d25-82da-80aced03b01e"
        },
        "item": {
          "id": "3092255c-d972-4546-b68a-0c701542a611",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eb76aafd-7304-4d9d-a19a-0d3fb1f7be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a237be-28ad-432e-bed4-d78ffcc58936",
        "cursor": {
          "ref": "d842a7d8-7b86-43dd-96c7-0d459f069f2b",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5eb478b7-1e2c-427c-a70d-189f52eab33a"
        },
        "item": {
          "id": "e5a237be-28ad-432e-bed4-d78ffcc58936",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ac0e388b-2a1e-4f99-9740-494d2a8f62a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89602ea-ea88-4749-97c4-8ea346af5e22",
        "cursor": {
          "ref": "8e60b2ae-262c-4d2d-b146-040936643d1c",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe96738d-3254-48b0-99de-8eb6ba87bbd6"
        },
        "item": {
          "id": "f89602ea-ea88-4749-97c4-8ea346af5e22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c17147cd-88ac-445d-85e0-63f6a3f13c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d20b3e6-86c3-48f9-8a61-4bb642e26d53",
        "cursor": {
          "ref": "983e89f0-bde9-47ec-9dda-e7b5f1d34dd9",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ea632a61-5398-40df-a48a-8f8e8a5755e5"
        },
        "item": {
          "id": "2d20b3e6-86c3-48f9-8a61-4bb642e26d53",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1521a637-d1f3-4756-ac5b-de3db8159f9f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2032,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "ee0c3ce0-ef8d-4acd-8bf7-dea9a1df153a",
        "cursor": {
          "ref": "79e0f95d-b204-4903-8e94-8ce15e6e6f48",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "45ef2bd9-2060-47b7-bb32-cdcc56c7dd04"
        },
        "item": {
          "id": "ee0c3ce0-ef8d-4acd-8bf7-dea9a1df153a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19770fdb-a12d-4568-80d9-b6068b41859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00af52d4-5981-4225-8cbb-43982a8035fa",
        "cursor": {
          "ref": "3e0607d7-86b2-4a77-863b-0ae9e9848970",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7de6c67f-5320-4f29-8dbf-d162013fbf99"
        },
        "item": {
          "id": "00af52d4-5981-4225-8cbb-43982a8035fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "265a3e77-0da7-40dd-86c1-51cc88992ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17227663-8857-487e-ba23-907654d095d0",
        "cursor": {
          "ref": "e79fc279-e5c8-4eb7-a4ca-1b5112b3ba27",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a74e880-5e79-43df-bf40-a0b7cfd9e666"
        },
        "item": {
          "id": "17227663-8857-487e-ba23-907654d095d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "522b0009-ee23-4616-8745-188802e87779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04d36d0-da1a-488a-8121-bd7c116256da",
        "cursor": {
          "ref": "dd9a9f16-ebc5-41b1-9d60-118592bab4c1",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "17eed8b1-03bc-4ede-920f-9dc89d001e8b"
        },
        "item": {
          "id": "c04d36d0-da1a-488a-8121-bd7c116256da",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "760388d0-a4e1-47ca-be38-5e4fe4aef987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245f6b98-0cf8-4ed7-81d4-c37edfbca422",
        "cursor": {
          "ref": "dd89b9c0-a8c1-4f59-9f61-f6d1d55e8908",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "86187035-58d5-4069-b8f7-fd9bf807e117"
        },
        "item": {
          "id": "245f6b98-0cf8-4ed7-81d4-c37edfbca422",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "61b71d3e-6781-4c4e-82c0-7c6cd93aefd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f335e1d5-03f7-46f4-ad30-7f51a1f8f849",
        "cursor": {
          "ref": "6ac4564a-86a6-4791-9d08-c11f847c28cf",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f0223531-b062-4bc2-9a5b-6ff5ca63f24e"
        },
        "item": {
          "id": "f335e1d5-03f7-46f4-ad30-7f51a1f8f849",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6cc12d66-5583-400a-b3b1-6d3b00ef0e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4c6876-9301-44fb-8db2-70eca0eb175e",
        "cursor": {
          "ref": "5208c354-95a8-4d85-a5f7-b5525725772d",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9aa4bad7-761b-4c42-8572-ea0254d69f2f"
        },
        "item": {
          "id": "0f4c6876-9301-44fb-8db2-70eca0eb175e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c2044ecc-c2f1-40ec-8e30-3ff007885347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea6d876-3860-4da1-87e1-5d0743fb26ce",
        "cursor": {
          "ref": "95867688-f6b1-48c5-9760-7543a0141053",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59b8116b-2454-455c-8846-a1471afa5502"
        },
        "item": {
          "id": "4ea6d876-3860-4da1-87e1-5d0743fb26ce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b6c3027f-6d2d-406a-ac02-c629faac78d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbc8e23-b333-4f83-95af-c335dd71bcea",
        "cursor": {
          "ref": "3b27a558-a7d6-4f51-9bab-14ac4962f8c4",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4bc11e3a-7b8f-4744-93e8-b64b4de92fc1"
        },
        "item": {
          "id": "bfbc8e23-b333-4f83-95af-c335dd71bcea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "59c7f270-a9de-4900-a23a-451230ec9851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb8950f-5716-4b48-b064-35027f70d796",
        "cursor": {
          "ref": "a4f4ce5b-60f0-40bf-b4ae-37dc8954c578",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b9c7227b-8eb6-444c-8fe0-3e34e019a370"
        },
        "item": {
          "id": "dbb8950f-5716-4b48-b064-35027f70d796",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "90b7938f-95cb-4b3a-a229-35fc5f86715d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daac941-eec3-4bfd-ae08-364d930256d1",
        "cursor": {
          "ref": "14aefbf5-f2ec-499e-bb46-7c897e05e0b3",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c1e7daf6-a179-4cfd-ae1f-fbd745762b19"
        },
        "item": {
          "id": "7daac941-eec3-4bfd-ae08-364d930256d1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a541bc59-c99e-4e5d-a8a4-7563831df156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0dde89-05b5-4ec9-930b-bc212c2a1e2a",
        "cursor": {
          "ref": "9f50f7c5-a7db-444e-aec5-f3cc215bc919",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9a20b3d2-4140-494f-8cba-2a3da9195cc1"
        },
        "item": {
          "id": "6b0dde89-05b5-4ec9-930b-bc212c2a1e2a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1d5ac8e4-48be-4aba-b0ae-7df373d8fd38",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 670,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c7eab9-76f4-4cbb-a33b-1f46b3a19bbf",
        "cursor": {
          "ref": "e5392538-ae61-4aa9-aeee-b3a0f765c863",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7aae962d-6f87-4019-a83b-b963fd66a5c3"
        },
        "item": {
          "id": "02c7eab9-76f4-4cbb-a33b-1f46b3a19bbf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ade480fe-7202-4ca1-b2c1-cad06a367ffd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 581,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "353bfa41-3512-4b8c-ab43-70b04657abaa",
        "cursor": {
          "ref": "b7a7bc67-c525-496b-99a1-25afe0480c48",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7580ca92-b7d5-4e78-a06a-18589604a99f"
        },
        "item": {
          "id": "353bfa41-3512-4b8c-ab43-70b04657abaa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a460071-1e45-4dfd-9cc9-2872254e88f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8136cea-fe08-46c4-a967-6e4ec7c037f3",
        "cursor": {
          "ref": "cba91fd0-61b8-44ea-b10e-99f05fa1d116",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9c435550-abfd-4e43-bda3-656c0bb8ae5f"
        },
        "item": {
          "id": "e8136cea-fe08-46c4-a967-6e4ec7c037f3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0124a271-5567-42d0-b5f8-f0f095fc4ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e66225a-0d98-4c54-9c53-91e8e720fe4d",
        "cursor": {
          "ref": "ca24858d-5490-409f-a967-cbefc90a2cf3",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "99635183-fe3c-4905-a16e-d252aed54496"
        },
        "item": {
          "id": "7e66225a-0d98-4c54-9c53-91e8e720fe4d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "54507375-d34e-4a83-86c6-ff2281770b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6966d6e5-40f8-4935-af71-c4997e1670bc",
        "cursor": {
          "ref": "48653195-208e-4b33-b598-aa0dfd4ced65",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "24e0b393-38b2-4090-bdb6-34b1b3940366"
        },
        "item": {
          "id": "6966d6e5-40f8-4935-af71-c4997e1670bc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e83d408c-e93f-416a-93f1-d304c1f946a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a91195-d9a7-44f4-817c-27512f998137",
        "cursor": {
          "ref": "b41d91f7-edf6-4bae-9681-0c1f91849eff",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e7c1d673-c970-4145-b03c-17a749d6d189"
        },
        "item": {
          "id": "02a91195-d9a7-44f4-817c-27512f998137",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5df2930f-9f86-4881-8ec8-01eebad49e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8b56d-4b5a-47f9-81c6-47d1b5453b2e",
        "cursor": {
          "ref": "0ba266c3-fb2e-4654-9bbe-b2e75161027f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8176b9bf-8e24-442d-b357-5eba446366c9"
        },
        "item": {
          "id": "09e8b56d-4b5a-47f9-81c6-47d1b5453b2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a9c51a97-1d8c-4012-b9c1-c011d0905ffe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1154,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108db788-363f-459e-87b5-ba4492db01a8",
        "cursor": {
          "ref": "b171c460-dae3-493b-bd13-c659f35a7789",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "28cfc8d2-c216-45b3-b4b9-37ed27700fbf"
        },
        "item": {
          "id": "108db788-363f-459e-87b5-ba4492db01a8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ec47f469-d61b-42e7-a306-453da921ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1204,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57734ee-1e0a-4cf1-a338-899ec1586b33",
        "cursor": {
          "ref": "4fe281cd-bdb6-4193-b0ee-17ed3c536cda",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c27b3531-696c-49cf-8149-07b748999236"
        },
        "item": {
          "id": "f57734ee-1e0a-4cf1-a338-899ec1586b33",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "48d67ddc-20c3-4494-8c2e-78a49c189047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170875a2-6f02-4092-b772-5fb6ac4fe1ad",
        "cursor": {
          "ref": "bf3be786-62b4-4ce0-8845-5d1af3d4227c",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9aa9a096-d7be-4113-b20d-ef520f03e658"
        },
        "item": {
          "id": "170875a2-6f02-4092-b772-5fb6ac4fe1ad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e2df1884-8a0c-489e-a9d1-6f315b8273dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba80e7a-e63e-47a9-af93-a364c323157f",
        "cursor": {
          "ref": "c2454d62-eef1-48be-a8e5-40002ce98b0e",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f000c95b-f4d8-42e6-9da5-2645a1712bcc"
        },
        "item": {
          "id": "4ba80e7a-e63e-47a9-af93-a364c323157f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a28b0b5f-c9e9-43f7-9339-a4a5f4c252fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57c22ee-30b9-43fe-a86a-f57de667a233",
        "cursor": {
          "ref": "905767cb-c83d-4375-a495-1e28be1b1277",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "feb858cf-8f37-4b0e-86c9-c260357015d4"
        },
        "item": {
          "id": "e57c22ee-30b9-43fe-a86a-f57de667a233",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "802639ab-dc21-491a-a186-3b258c989e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4451160-0f7c-4fb4-ac20-669437507936",
        "cursor": {
          "ref": "ce94ebd8-ea40-46ff-9de1-4948e14e2f6a",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e99a9dd6-4d84-4c23-b270-cc46ce3beb33"
        },
        "item": {
          "id": "e4451160-0f7c-4fb4-ac20-669437507936",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0d3a384e-7b3f-4619-af41-6fd267eafd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c308249-47a5-4bc8-8ffe-1012cb86db8b",
        "cursor": {
          "ref": "0e2e0ec8-abc7-4aee-a915-65b12d7b15f7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c0320b56-0a8e-4370-bd38-1a2ff64253c6"
        },
        "item": {
          "id": "8c308249-47a5-4bc8-8ffe-1012cb86db8b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bce69d5f-5f75-45eb-9329-831ef8374e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3579e-33eb-4b5e-bb9c-1c726f8bf4d7",
        "cursor": {
          "ref": "37a47ef8-1f63-4351-b46e-06bfb2ec2730",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20012350-8205-4ab2-89b7-f77948c46f66"
        },
        "item": {
          "id": "f8d3579e-33eb-4b5e-bb9c-1c726f8bf4d7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7e14b64c-155a-4149-8938-bf84f1dc33e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043df733-23ae-42b9-9c24-3560c48a86f8",
        "cursor": {
          "ref": "ac796b3d-ad27-487a-b5a4-92deaaaa867c",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4aea9fa5-8998-4745-b1fc-13cb2a4230cc"
        },
        "item": {
          "id": "043df733-23ae-42b9-9c24-3560c48a86f8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3c9f2209-5c36-4177-80f6-8e155e724fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9717c00e-96d5-432c-9c77-192951473554",
        "cursor": {
          "ref": "8bd2b929-a96d-488b-8021-10790dac8576",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "15dffbb9-24ba-4132-838b-4fc0c18de0a7"
        },
        "item": {
          "id": "9717c00e-96d5-432c-9c77-192951473554",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c77759da-5994-49d8-a5dd-6c6258e73a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa12a4e8-422e-4b9a-b51f-6ef2b28252eb",
        "cursor": {
          "ref": "121608b2-508a-4656-8b8d-73de041bdc59",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "662f1300-8b2a-4dcf-86f8-8d8eb7036044"
        },
        "item": {
          "id": "fa12a4e8-422e-4b9a-b51f-6ef2b28252eb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e3b64470-b9a5-4af3-be42-543ba1735978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef3d15f-782a-4401-b242-75cfe5147b45",
        "cursor": {
          "ref": "67b5ca3a-5083-4d82-b449-443adf425bad",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7a0d341-c3ae-42a4-a597-4044393d65ed"
        },
        "item": {
          "id": "0ef3d15f-782a-4401-b242-75cfe5147b45",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c26b4d37-3a87-4718-8805-94de798ae5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b675fe6-92ba-45a3-a935-764aef0fd08c",
        "cursor": {
          "ref": "5c705c07-0c7b-47c2-9682-5c0954b19b47",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "58abb659-ef55-489a-8f6f-4d89fadc7db0"
        },
        "item": {
          "id": "4b675fe6-92ba-45a3-a935-764aef0fd08c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "eebe3a32-6215-4665-af6f-5e9d99bd571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61006e20-e688-40b4-986e-913071bffaf5",
        "cursor": {
          "ref": "69e7904a-3cbe-47ff-8736-041a006475a8",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7896140-93d3-4566-b75e-bce5e251ed0f"
        },
        "item": {
          "id": "61006e20-e688-40b4-986e-913071bffaf5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c809e1a4-d671-4c6f-8255-a3e60450e7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77778a31-a7b7-403b-8360-c9f12851922e",
        "cursor": {
          "ref": "ce9589d5-60f1-4814-bed4-954a9c3daa00",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "604b4b31-adfe-4eec-85c3-3f52797d90a6"
        },
        "item": {
          "id": "77778a31-a7b7-403b-8360-c9f12851922e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f3c299ed-c8d2-455e-b657-877ffb80e322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e6f2ed-a407-47f6-b427-682a07cf01d8",
        "cursor": {
          "ref": "fea1de26-975b-4fee-a4fd-0bd9cb0260bf",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7421a5f7-5d27-45b1-b7ce-5c48d98b1299"
        },
        "item": {
          "id": "37e6f2ed-a407-47f6-b427-682a07cf01d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6200ffa6-c7ab-4970-a10e-68ac6363669d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f65b99-024b-4604-bf9f-ef2fc9833408",
        "cursor": {
          "ref": "c4622157-d53c-4c95-96d7-0cdc72009b64",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4a8d113-3719-4879-974c-935c9a3ba911"
        },
        "item": {
          "id": "b9f65b99-024b-4604-bf9f-ef2fc9833408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2abb5a91-0b4f-499b-81e4-39ad52c582e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9131146c-0ae9-424c-8424-3c5af859a7ec",
        "cursor": {
          "ref": "64633f9b-84c0-485c-a6ac-55ff3df2f399",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d88e79a9-7bef-4be7-bc4a-d8fc47ff3b2a"
        },
        "item": {
          "id": "9131146c-0ae9-424c-8424-3c5af859a7ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "17f08775-6bb4-4e99-a446-7eaac303076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fbfcbb-feab-4ae3-a4a6-de4063566a58",
        "cursor": {
          "ref": "7a855e67-4c94-4322-b56f-d618b17b10a0",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d821f01-639a-42f1-84b4-2f170eb64759"
        },
        "item": {
          "id": "25fbfcbb-feab-4ae3-a4a6-de4063566a58",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "38d3dd95-0542-4003-b9d3-dcccdc2db4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c73329f-126e-4457-ae04-16de4a77d8de",
        "cursor": {
          "ref": "a57e54c1-70f4-4633-9f28-9900141c0b18",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5e5d3b1b-3087-4533-877c-ddf70e417642"
        },
        "item": {
          "id": "8c73329f-126e-4457-ae04-16de4a77d8de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2b8a7e5-2810-4bc3-a7e8-658a5e712b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f944b-bda4-490e-be8f-fe0a422ae4c5",
        "cursor": {
          "ref": "1c8b4340-35cd-459d-a4f0-050f5dad27e6",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ab0d41d1-6beb-4af3-b95b-f302da4dec3c"
        },
        "item": {
          "id": "437f944b-bda4-490e-be8f-fe0a422ae4c5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d7b50d91-75c8-462a-931a-66b9757a3547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ce7393-f201-4c8c-892d-b70d75d687a6",
        "cursor": {
          "ref": "2b2d7a21-14dc-449e-88b1-052843d79379",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "77245808-55fc-4911-8e00-55f9fd1a709b"
        },
        "item": {
          "id": "95ce7393-f201-4c8c-892d-b70d75d687a6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f26b98fd-1b5e-4ef0-beba-37995ca28604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752563b7-9f9c-47e8-8aa4-60ae3c2eb7a7",
        "cursor": {
          "ref": "d81f9cba-8fef-4d71-88d9-2007bec0540f",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b4a4a1c9-2490-402b-8b9a-2e3fbcc2014d"
        },
        "item": {
          "id": "752563b7-9f9c-47e8-8aa4-60ae3c2eb7a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ebb8bff1-6cf6-49f2-a74b-ae899f9aebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb52d4e3-5236-48e1-bc52-57020e6e2e35",
        "cursor": {
          "ref": "7244eec5-3462-444d-a81f-751ebf2d0b1b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1df5ac42-a110-4159-85a7-577220a29490"
        },
        "item": {
          "id": "fb52d4e3-5236-48e1-bc52-57020e6e2e35",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7e58734-9b7e-4d3c-97a4-f3c91402fcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c866bdf-0621-4b4e-99f0-1625e2100013",
        "cursor": {
          "ref": "60b031cf-9bf3-4ad4-87af-ec6a687dc94d",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "33080ebf-af3c-4fa0-9490-b5eafa91c7a8"
        },
        "item": {
          "id": "3c866bdf-0621-4b4e-99f0-1625e2100013",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bdf48f5a-b997-4ddc-a61d-7567e1eb1e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e595a9b-4819-4dd3-a527-1558610dc627",
        "cursor": {
          "ref": "9fe769d4-b432-4586-9932-ea33aa353630",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f87b7475-f01e-4b3f-ae2d-4bfc16571d9a"
        },
        "item": {
          "id": "9e595a9b-4819-4dd3-a527-1558610dc627",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "df521330-344b-4c6d-8c5b-d399684cbabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb7760-1833-46dd-9209-a6eb390d5783",
        "cursor": {
          "ref": "f1cf150f-7e80-446a-ab1b-ef004d14984b",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "38e04092-a644-48ac-8474-5ed6a2699c0f"
        },
        "item": {
          "id": "e3fb7760-1833-46dd-9209-a6eb390d5783",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "818e2417-57cc-4059-aad1-8b9598a8d6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e526af7-e3c2-4431-ba4c-433fd260b6d5",
        "cursor": {
          "ref": "b2b21edd-e30f-423e-bf62-1707c88a5baa",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "76a5252d-c135-4886-b1c3-e86e9ba6c244"
        },
        "item": {
          "id": "8e526af7-e3c2-4431-ba4c-433fd260b6d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0710048-0d70-42d6-babe-52a86362799e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b75da5-e882-498f-bf07-9dd080fdc905",
        "cursor": {
          "ref": "8c0e6565-fe39-47c3-8f0d-230e5a70f254",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd57b8b9-258b-4fca-b684-63980673312b"
        },
        "item": {
          "id": "36b75da5-e882-498f-bf07-9dd080fdc905",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8fc302ed-0ff8-440c-b4bb-36f32f92d613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804c808c-a2fe-4b49-befe-05281ef46fba",
        "cursor": {
          "ref": "700f01ad-c3e2-45a8-ac55-d46c27742d1f",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ec174a9e-9bd6-4798-9980-f99e45fa0112"
        },
        "item": {
          "id": "804c808c-a2fe-4b49-befe-05281ef46fba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8509ed33-15d4-4de1-9055-bfe00dd7328d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b46b3-8a6f-46fe-b559-2dafe6f235ee",
        "cursor": {
          "ref": "a50723fd-527a-4358-aa94-ee7b90d673fb",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "876c1830-21bb-4a05-9b19-526ce8266b44"
        },
        "item": {
          "id": "9b4b46b3-8a6f-46fe-b559-2dafe6f235ee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e4eb8438-2d3a-4774-976f-a6575a53c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576752cb-0a4d-47e7-b425-a38032e5fda5",
        "cursor": {
          "ref": "ee278b3f-8c9f-49f2-a84c-77c892a8d0c8",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a08437f5-6d2b-4862-b82b-25423a39bd7f"
        },
        "item": {
          "id": "576752cb-0a4d-47e7-b425-a38032e5fda5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ba7b4152-4b2e-4040-b035-d6526dd235b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e214810-7435-4d61-8b6b-52cc70531a35",
        "cursor": {
          "ref": "016cc88f-cff1-4495-9885-c74a8bcf4fb7",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a2608358-350b-46ba-89eb-6b6da0415619"
        },
        "item": {
          "id": "5e214810-7435-4d61-8b6b-52cc70531a35",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "12cc4043-1a37-4233-829c-998984150fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002bc663-31f2-4d21-8e96-95a05aaf9865",
        "cursor": {
          "ref": "11bcf004-1286-4919-a729-f21a99d7a212",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "af7c2c62-f521-4b50-b99a-ccf5da8f8af7"
        },
        "item": {
          "id": "002bc663-31f2-4d21-8e96-95a05aaf9865",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "14a59eb1-138e-4034-bb42-dd1b89df752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c8aa01-ce4e-47b9-90c4-8b7073a9964f",
        "cursor": {
          "ref": "368e8750-a009-4006-8578-3b7ee14ab6dc",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0a21fbc2-0aee-4d23-8a40-9975832fa216"
        },
        "item": {
          "id": "a5c8aa01-ce4e-47b9-90c4-8b7073a9964f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b09c452e-7cf0-4d64-8e0b-bbd4da710af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f516bf88-61c3-4498-bfd6-ea96a19b9a89",
        "cursor": {
          "ref": "b5b9dfa7-9f40-45d1-a300-25492b0fb54c",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8f089964-b3f7-4f16-a0f3-2aff3d853f9a"
        },
        "item": {
          "id": "f516bf88-61c3-4498-bfd6-ea96a19b9a89",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a0848cbe-1e1f-4b3f-9005-32f258e47739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61c5020-6e39-43a2-965a-042270092f58",
        "cursor": {
          "ref": "afd7f668-e292-4ac7-88db-874ce54ccdb9",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7385bff5-0980-4c4a-b58e-a9200c41c956"
        },
        "item": {
          "id": "e61c5020-6e39-43a2-965a-042270092f58",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "be4a97f8-626e-4a44-847c-59af68b9bd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf8d9b2-99e5-4377-a518-9bed2ef6c9a9",
        "cursor": {
          "ref": "846576c8-fae9-44b4-90c2-c17c9a29df71",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "847d7722-d206-4e24-8651-6b372c6f0f53"
        },
        "item": {
          "id": "6bf8d9b2-99e5-4377-a518-9bed2ef6c9a9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2525f801-9732-4859-bbc6-327ba404e4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07ba363-87d0-49cb-8a97-d5360001d852",
        "cursor": {
          "ref": "828dd9dd-e18a-4174-82c4-d18b62f22cb8",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ce2f5ad4-9ba5-4143-a161-6c64ddda4344"
        },
        "item": {
          "id": "b07ba363-87d0-49cb-8a97-d5360001d852",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c491947-a125-4510-a313-b61e0fc20f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f1d1ef-203c-47fa-8cb0-5574992e6c4a",
        "cursor": {
          "ref": "9e4ae395-960a-4aa3-996a-5342b1297d07",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7486fad1-33f8-4f80-9e91-6ca726952af3"
        },
        "item": {
          "id": "85f1d1ef-203c-47fa-8cb0-5574992e6c4a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2b089858-d6f4-4cea-9b35-e33b13994287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c93ca82-ba3a-4a6e-b8e6-21fa21760d7c",
        "cursor": {
          "ref": "3964495d-3961-435b-a41b-41300ff5a923",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a78893c9-aac5-4768-a681-8e5df7628aff"
        },
        "item": {
          "id": "6c93ca82-ba3a-4a6e-b8e6-21fa21760d7c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a20d80ac-2873-4240-b855-5a563f6d4513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8463359d-9a76-4318-aaba-bf97f907210c",
        "cursor": {
          "ref": "8ca23588-e50c-437c-87d8-471d0e10bf7d",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1003670b-7c0c-4380-9b44-6fb2d06c77ae"
        },
        "item": {
          "id": "8463359d-9a76-4318-aaba-bf97f907210c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96909795-3e45-4592-88a6-88fb652c48d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b7d692-176c-4a74-9561-1924416488c0",
        "cursor": {
          "ref": "1518eef0-4b67-4081-bc99-658ed11114e0",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8581637a-22bd-4817-a0ed-aa03fcbb3c04"
        },
        "item": {
          "id": "b1b7d692-176c-4a74-9561-1924416488c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c18e0654-7763-40dd-9da0-39fd2d5b2838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aabd5a-b4f6-4c24-bcd3-31364d4a1a6e",
        "cursor": {
          "ref": "ac27640e-07f6-44b8-bbd6-3d56b81ca85a",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1b36cd72-f28c-4487-8a13-16d0832e7bf7"
        },
        "item": {
          "id": "74aabd5a-b4f6-4c24-bcd3-31364d4a1a6e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0ae98da6-ceec-4e92-8b03-c87265d5ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73ed804-1e58-4f2c-b110-069d15093a82",
        "cursor": {
          "ref": "e6c98e57-bd35-42af-9f07-90ffa0949ba2",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f61f45df-a523-4fa4-bf70-057773e5fc84"
        },
        "item": {
          "id": "b73ed804-1e58-4f2c-b110-069d15093a82",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "27492788-170f-41cb-a532-080157193085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3d0a13-5356-4bd1-a5e0-c6a940ea8bca",
        "cursor": {
          "ref": "46e55130-63de-48ba-a498-3fe986c8d18e",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "29f195e4-8d01-4651-8c5f-8cab30cd3a00"
        },
        "item": {
          "id": "da3d0a13-5356-4bd1-a5e0-c6a940ea8bca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4176a0be-eebb-4b25-9264-f947443a51d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a3dfa-2484-4349-8b2d-bd24aa46e48d",
        "cursor": {
          "ref": "31f8a93d-e611-4238-8fa6-a29fe933e910",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "03a18c0c-f0d3-4761-af08-2177199b0411"
        },
        "item": {
          "id": "d82a3dfa-2484-4349-8b2d-bd24aa46e48d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "25c4c757-384d-40ee-ba08-140208fc12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fefd4c-e727-4a5e-82ff-8be632ff28a4",
        "cursor": {
          "ref": "c7f20232-744f-4662-8639-3e35532ae3a1",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1b46524a-8bf8-43ef-b685-eeaada67a6ab"
        },
        "item": {
          "id": "51fefd4c-e727-4a5e-82ff-8be632ff28a4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "600fecc4-0f08-4fe3-aff7-fd49a8ac3755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd2a3d5-67d5-4e45-9e6f-b50dcd25d3c3",
        "cursor": {
          "ref": "5f4c2eb1-5288-40ff-98e2-7162f577f0b5",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b81e2738-9400-4778-adf9-982a694da6dc"
        },
        "item": {
          "id": "7bd2a3d5-67d5-4e45-9e6f-b50dcd25d3c3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "634fb894-f713-47df-b440-769d38db2330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1939ae4a-cf85-4062-b809-162d23c2ed47",
        "cursor": {
          "ref": "7299e726-045a-4140-bb70-4775fd451e1b",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d87e7a58-7f5a-4bc6-b406-fa94cc8ee564"
        },
        "item": {
          "id": "1939ae4a-cf85-4062-b809-162d23c2ed47",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "777dde38-3f6a-4c2e-9199-a25ba92377f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ba062c-1a30-44de-b9b1-761a0079658d",
        "cursor": {
          "ref": "17d8a7ce-e98d-4064-8b76-9163c60cd3d0",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "84c28606-729a-4d35-a820-ee4b16db2093"
        },
        "item": {
          "id": "13ba062c-1a30-44de-b9b1-761a0079658d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cc8f463e-09fb-4842-aaba-c7578f7210f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ad967f-5733-46f9-9c2a-d81c7f665519",
        "cursor": {
          "ref": "9e9e614d-9bb7-473b-9f44-09005bbe9975",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9a1ab05d-68df-4ae0-b0e6-bdc198edb51c"
        },
        "item": {
          "id": "02ad967f-5733-46f9-9c2a-d81c7f665519",
          "name": "credentials_issue"
        },
        "response": {
          "id": "285f9747-5adf-4cbe-ad31-757880b94c4f",
          "status": "Created",
          "code": 201,
          "responseTime": 3962,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "4e76098f-28df-47fd-92e8-223fcf8a3605",
        "cursor": {
          "ref": "6b11fd7b-c8fb-4ac3-902b-d12a87c6736e",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "905721c5-ad90-4293-b6ff-f711069af333"
        },
        "item": {
          "id": "4e76098f-28df-47fd-92e8-223fcf8a3605",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bdcc9e76-1375-4053-8759-e802f04072a3",
          "status": "Created",
          "code": 201,
          "responseTime": 4065,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "29d1e7f6-2b86-4a1b-9ede-fbc02280fbf7",
        "cursor": {
          "ref": "7adba713-bfe1-4539-9ea1-a3f72d684c2b",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b35327bd-10ef-485d-9533-a2f2bbdd6c72"
        },
        "item": {
          "id": "29d1e7f6-2b86-4a1b-9ede-fbc02280fbf7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e7a58cdb-8b5c-413d-a7b7-bf27bd14f317",
          "status": "Created",
          "code": 201,
          "responseTime": 4120,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "0baf6a42-da9e-49eb-8a85-d22f0bfdcc75",
        "cursor": {
          "ref": "08094e26-0b0b-4728-8f67-19d9aa95422f",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "908e7134-ba23-4049-a1f0-024c007c6c18"
        },
        "item": {
          "id": "0baf6a42-da9e-49eb-8a85-d22f0bfdcc75",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97ade11e-b984-4451-b20e-dc103150782b",
          "status": "Created",
          "code": 201,
          "responseTime": 3978,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "2491fd9a-58d6-4b7e-b2d4-19570371eb40",
        "cursor": {
          "ref": "1955e677-52bf-4b1f-8804-00864b106fe7",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a0a9c59f-8b3a-487b-8b09-47f7fb809f5c"
        },
        "item": {
          "id": "2491fd9a-58d6-4b7e-b2d4-19570371eb40",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e597c7a-0bd2-4eca-9a11-c74e7537df6c",
          "status": "Created",
          "code": 201,
          "responseTime": 4975,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "50651608-1921-4a37-b19a-d63f9ceda94e",
        "cursor": {
          "ref": "a5cad2f9-4400-478f-8efa-85864672787f",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c6da3a15-281b-4bd5-9669-6a0736770ec6"
        },
        "item": {
          "id": "50651608-1921-4a37-b19a-d63f9ceda94e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "065c5587-1410-4bec-91bc-8f3eddccb342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50651608-1921-4a37-b19a-d63f9ceda94e",
        "cursor": {
          "ref": "a5cad2f9-4400-478f-8efa-85864672787f",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c6da3a15-281b-4bd5-9669-6a0736770ec6"
        },
        "item": {
          "id": "50651608-1921-4a37-b19a-d63f9ceda94e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "065c5587-1410-4bec-91bc-8f3eddccb342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b2ca1c-1851-4253-a461-ec0655a83d50",
        "cursor": {
          "ref": "a5b41916-d517-45b0-8313-49ec1c199843",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dcfe6604-d398-4345-afaa-bdf445b0b818"
        },
        "item": {
          "id": "36b2ca1c-1851-4253-a461-ec0655a83d50",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fb18aaf1-042d-4daf-b63f-8276994e303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1077,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb14e664-5bbd-49a2-a200-9d202002afa6",
        "cursor": {
          "ref": "97d37c6f-f64d-4d98-8309-030f9a7ac572",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d3a4f0d1-7f8f-4170-9527-f048d73c8a11"
        },
        "item": {
          "id": "cb14e664-5bbd-49a2-a200-9d202002afa6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a9edf35-83df-46f7-b734-ca6f7e7dcdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be6dca1-c175-437f-bb8d-edeb9c3f127f",
        "cursor": {
          "ref": "d4d034ef-322b-4ea8-93f1-0faf8adf3947",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "57597cb1-135b-4d40-8299-7961ad179633"
        },
        "item": {
          "id": "0be6dca1-c175-437f-bb8d-edeb9c3f127f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b911d91-ec4b-41cc-ba22-d00ce3cd34c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f59c3af-fa3e-423b-a79c-e5aa7e3acb2d",
        "cursor": {
          "ref": "9754c90a-544b-44ed-aaed-a04e38cc0b0f",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4bc750ed-d7bc-4071-b9c5-d942f273cf8c"
        },
        "item": {
          "id": "8f59c3af-fa3e-423b-a79c-e5aa7e3acb2d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "994ca55c-30b8-47f7-9acd-5b3342294847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0325a1b1-7a13-4a95-ac5e-934077232906",
        "cursor": {
          "ref": "caf7e384-6d2a-41f2-89cc-146ac2800c22",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "850bc765-3f02-4763-a3c6-d302bbd1febf"
        },
        "item": {
          "id": "0325a1b1-7a13-4a95-ac5e-934077232906",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "963a8b3e-c482-4d9f-be96-5f5963d2dece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e298886-25ba-4858-b59f-80a982a8ef7c",
        "cursor": {
          "ref": "dc032bbf-6cf4-4578-9377-0380637dd9ce",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b499ec05-9fcf-4eee-9700-4fbba4a4fc2d"
        },
        "item": {
          "id": "3e298886-25ba-4858-b59f-80a982a8ef7c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b05ef3f1-c468-4809-96db-d80160519d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2532c20a-bd40-4261-bdca-dc0f83c654d8",
        "cursor": {
          "ref": "4dd475a5-a318-42f5-bb82-59b2ced77648",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3be0fce6-bf81-4657-85a6-5fec450053a5"
        },
        "item": {
          "id": "2532c20a-bd40-4261-bdca-dc0f83c654d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c72ea18-3b80-4abf-bac5-65249911c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6317374-9af0-4e0a-90bf-063aded8f8f3",
        "cursor": {
          "ref": "7587f34a-67c3-4cfe-950b-633bf22d05a8",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "811ad140-47ec-4b3e-8e89-565ac742d1c7"
        },
        "item": {
          "id": "e6317374-9af0-4e0a-90bf-063aded8f8f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7bb7c7db-6f54-4d76-aa07-c33652dac445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2221e169-08e0-4bb5-a820-4f0723035a86",
        "cursor": {
          "ref": "4dd560cc-5a2e-4c34-8d78-10b4ee76ccd7",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "08e05348-e3f5-44f7-9de6-6a229da685c3"
        },
        "item": {
          "id": "2221e169-08e0-4bb5-a820-4f0723035a86",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "78253742-334a-484b-b98c-da11c473a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384aa6d0-700d-47f1-ae28-6f1733cc4580",
        "cursor": {
          "ref": "5b600193-2725-49bd-9643-65c2da187ada",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "27601811-ebd9-4458-9b94-a88ec5c2e7ca"
        },
        "item": {
          "id": "384aa6d0-700d-47f1-ae28-6f1733cc4580",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e597bbd-8357-45e9-9d1c-d13d36e3b44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7263ca9-3769-48e2-98c9-64ae7ea2b930",
        "cursor": {
          "ref": "bd3bb264-25b8-47d4-a96b-a2f9d83d9634",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4c8f0e79-bc58-4d4d-b420-7eac84f36679"
        },
        "item": {
          "id": "a7263ca9-3769-48e2-98c9-64ae7ea2b930",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b8cc6fba-565e-4f0e-a050-d00838162fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807727f2-0d6d-4b11-8715-e81385a0ac50",
        "cursor": {
          "ref": "3c1c750b-d474-4d67-9707-90f4919cdd86",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "05dcfbbd-ad12-48d7-9f2c-84377e3f085c"
        },
        "item": {
          "id": "807727f2-0d6d-4b11-8715-e81385a0ac50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aca1bde0-03ea-4688-a31d-514c0c68d446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ded016-472f-4a44-be42-afa7723c6cdc",
        "cursor": {
          "ref": "1205cef2-7d40-4ac7-9a3a-48f9c927dc21",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f00bb253-5dfb-4e8b-a24f-36d2f4c850e2"
        },
        "item": {
          "id": "a7ded016-472f-4a44-be42-afa7723c6cdc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc22fbe6-d165-424b-b900-31fb25d0dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e099685-519d-4a63-930d-53adbd4e4ecd",
        "cursor": {
          "ref": "d36ba591-a898-49e2-83eb-8828bd0e55ec",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff691b54-0a06-4e64-b829-371a56330953"
        },
        "item": {
          "id": "4e099685-519d-4a63-930d-53adbd4e4ecd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f3f3f4cc-92cc-44f2-b0d0-973ef507c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449c246-d0d4-4590-abbe-579fbc6e322c",
        "cursor": {
          "ref": "876d6f1a-b151-4582-81a0-972ac62047b4",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "36d38ebf-c295-488b-9181-a30bc7fbd04b"
        },
        "item": {
          "id": "7449c246-d0d4-4590-abbe-579fbc6e322c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "55350bf6-ee95-4e9e-9f45-0ec2748bb028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5e462f-b708-4c7c-85f3-cde5a46659e0",
        "cursor": {
          "ref": "b4f57701-fd55-4510-90d8-03fedc7d7199",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c832a6dc-887f-476a-a8e1-ea61c1033ff0"
        },
        "item": {
          "id": "ae5e462f-b708-4c7c-85f3-cde5a46659e0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63c2a746-9fc3-46e1-9a50-cf57fc5cfe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b3bb61-6d48-429b-8c6f-642f8db49f50",
        "cursor": {
          "ref": "d776eacb-f383-46cb-b42e-3b014e707d70",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc3f0fa6-5c88-481f-844e-c959ff90db46"
        },
        "item": {
          "id": "91b3bb61-6d48-429b-8c6f-642f8db49f50",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c73814ab-fb5f-4bdc-bfaf-40d53393e805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292de37c-9fa9-4eac-839a-ea0d054d2a8a",
        "cursor": {
          "ref": "9985d70d-5720-4cd9-bdf7-7babb250c85a",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5b56c145-f49e-4e4d-a003-e29f4a10e9fa"
        },
        "item": {
          "id": "292de37c-9fa9-4eac-839a-ea0d054d2a8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4c7a8885-5710-4438-b7a0-cbaaf48e0479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be682d1-f947-4e20-a2cb-913e22486311",
        "cursor": {
          "ref": "bf5781b4-7574-48e2-b314-82f4b29880aa",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "439f3ea5-f6db-4c90-95b3-57a2ab82fa39"
        },
        "item": {
          "id": "1be682d1-f947-4e20-a2cb-913e22486311",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d9765094-b854-4f56-9b41-1c4253f47900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41231c3-d581-4203-af52-e7eb7caf8f01",
        "cursor": {
          "ref": "08929191-3429-4228-b5d3-3d4375f019fb",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c6e4d087-258a-4eb7-afea-bcfa54f15dbc"
        },
        "item": {
          "id": "e41231c3-d581-4203-af52-e7eb7caf8f01",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "836c8a96-1496-41c2-95a2-9696d78fdfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f106313b-6e38-4193-8228-6a8e745eb7f5",
        "cursor": {
          "ref": "12b4623d-33c5-4bb1-b8e2-0a9690b1a5ec",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9278f4ae-5ac9-42fb-a08d-a86d8955fcd9"
        },
        "item": {
          "id": "f106313b-6e38-4193-8228-6a8e745eb7f5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aef08fbe-9a0d-4b0f-8e33-de5e904b6ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2b309e-97a7-4147-8707-2cf0e8fa99bc",
        "cursor": {
          "ref": "40496a19-3ff1-4d97-b784-8406c6244efb",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "851a21e1-9857-4916-a5de-3f09b020acb1"
        },
        "item": {
          "id": "3c2b309e-97a7-4147-8707-2cf0e8fa99bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "232969ee-5a73-403e-a058-d68c8292db23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dccbe5-950a-495a-880a-9df180f6264c",
        "cursor": {
          "ref": "c211a085-362f-4829-9b0c-30c82abeb872",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "49873aeb-acf3-4866-8fc4-bfda4492328c"
        },
        "item": {
          "id": "72dccbe5-950a-495a-880a-9df180f6264c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4703e93b-153c-40ef-854a-34059d21d63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c24fa9-7308-4782-9367-0b984a635676",
        "cursor": {
          "ref": "19afb44e-8099-4097-ac02-9a7a36a0907f",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "52dd0798-741a-402e-9840-20d6f13c1ddc"
        },
        "item": {
          "id": "83c24fa9-7308-4782-9367-0b984a635676",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "714aa33b-364b-43f0-8fd1-2ddfb434a084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62048c90-cb2c-41b0-bc31-223c2440ba35",
        "cursor": {
          "ref": "ee6592ac-757e-4f2e-8d8a-4b19741ae374",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "400d68d7-64d1-4ce0-aee9-4b06984c5caa"
        },
        "item": {
          "id": "62048c90-cb2c-41b0-bc31-223c2440ba35",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3816b743-9f50-4b01-b52f-94df4ba5063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f883d7-c5fc-4331-8654-803a7ba90c45",
        "cursor": {
          "ref": "311557b4-e135-4ca4-87fd-da4783a2ef58",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "706fbcfd-0cbd-4edc-a60f-10b56cad2a41"
        },
        "item": {
          "id": "e6f883d7-c5fc-4331-8654-803a7ba90c45",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba1b5411-286f-4bfa-9365-beabc1b1a405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197f3a9-0ed4-4b8a-837d-c293d2f8b757",
        "cursor": {
          "ref": "084ed393-5358-4382-8d51-f272adb07c5e",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "176b3418-dab5-43ba-89f4-7245f4e944ed"
        },
        "item": {
          "id": "6197f3a9-0ed4-4b8a-837d-c293d2f8b757",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69d1eadf-e3a1-4afc-bab7-abe2f09afc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03813878-3f00-49ce-870d-8c7cc7e6ad97",
        "cursor": {
          "ref": "3642aa41-1574-4996-909c-28e326692ddb",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6aee33f-394d-49a4-acdc-0db715795ee4"
        },
        "item": {
          "id": "03813878-3f00-49ce-870d-8c7cc7e6ad97",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "58e8d8bf-8e4a-4109-9d10-e6032c3fc548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5947be09-1304-41a4-95e4-fb32cefe1043",
        "cursor": {
          "ref": "a0dfe351-5981-4750-b103-885414ec99e1",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e8d5be1-be43-41e3-9619-643371270230"
        },
        "item": {
          "id": "5947be09-1304-41a4-95e4-fb32cefe1043",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "59454667-41e6-4796-b504-0689b4819717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542ea4a4-2899-418d-9ee2-77b1785944c3",
        "cursor": {
          "ref": "a1e6bb13-091c-47f2-9aa0-f52aab1af253",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d07f979-50f7-4b55-9f5b-c72af4ca9419"
        },
        "item": {
          "id": "542ea4a4-2899-418d-9ee2-77b1785944c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10c633be-eb5d-4713-b7f6-d6a050590664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27d78b-3e2b-4ff8-b5e0-672c29c2760a",
        "cursor": {
          "ref": "4ca6cf37-08ae-4cfe-a3a6-309b3f345803",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ac074041-3051-410e-9bcc-191bed79b80c"
        },
        "item": {
          "id": "cf27d78b-3e2b-4ff8-b5e0-672c29c2760a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4cad4f18-387a-4f39-a912-d742cb271c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d803ca55-e1e7-40cf-92bb-a0283b4860d4",
        "cursor": {
          "ref": "d4c62737-99d3-4d49-89cd-0e246a8e8bba",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b7bed67b-1c72-4f34-91f2-aa09e0c6ef9e"
        },
        "item": {
          "id": "d803ca55-e1e7-40cf-92bb-a0283b4860d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0acbce03-b2df-49ee-a65a-7bbbf7086137",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4002bd4f-24e3-43d9-bbd6-4c6e7cb18b79",
        "cursor": {
          "ref": "4aaf7793-0c7d-41fb-b4d3-3fe42b79a39b",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dec9a09b-97bf-4a02-ba2b-d90cacc96f80"
        },
        "item": {
          "id": "4002bd4f-24e3-43d9-bbd6-4c6e7cb18b79",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3138c0a6-7eee-48cb-b3c6-b829c7dea172",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c79afe1-1baf-430a-a791-a0376a6e2a00",
        "cursor": {
          "ref": "dc69b748-d5fd-4c8d-8edb-5ddbcedec90a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d6b21be3-01dd-446e-a207-33ed3abe1b10"
        },
        "item": {
          "id": "4c79afe1-1baf-430a-a791-a0376a6e2a00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4baee366-8b7b-4fd9-b0f4-2ef60296d39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c79afe1-1baf-430a-a791-a0376a6e2a00",
        "cursor": {
          "ref": "dc69b748-d5fd-4c8d-8edb-5ddbcedec90a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d6b21be3-01dd-446e-a207-33ed3abe1b10"
        },
        "item": {
          "id": "4c79afe1-1baf-430a-a791-a0376a6e2a00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4baee366-8b7b-4fd9-b0f4-2ef60296d39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e19aa8-4893-46cd-806c-04c7dd4b9011",
        "cursor": {
          "ref": "037a5de3-feab-4407-9bb2-7803c368e08c",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ae4aee90-4f32-4ba2-911d-af96f3e62d94"
        },
        "item": {
          "id": "46e19aa8-4893-46cd-806c-04c7dd4b9011",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "76cd8b3e-1d7c-4796-82f5-84df2e719b1e",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "95bf55c4-82e5-469d-b6e8-236a8b0c6265",
        "cursor": {
          "ref": "796ffcdb-1bc7-4383-9c6d-4b7800ad860f",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "957f5306-7d41-4ba0-97c9-f3ee08f36727"
        },
        "item": {
          "id": "95bf55c4-82e5-469d-b6e8-236a8b0c6265",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a6f5d8f3-ff1a-42fe-beb9-a0e2370ffa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeddfcf-42bd-45ab-9af9-557155dbb993",
        "cursor": {
          "ref": "452da373-d2b5-4c00-be20-8319d8a0f93a",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d9da4cb7-3346-45e2-9f7c-ab2e88383f11"
        },
        "item": {
          "id": "8eeddfcf-42bd-45ab-9af9-557155dbb993",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dd5e563c-62e2-42ad-b21b-bb29eedf49fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21c1a08-b87c-4d6d-af44-5b0ac4530cd9",
        "cursor": {
          "ref": "cb64863d-aaa4-488b-b5ab-0920be4d299a",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "00f99385-8ddf-4a26-a41d-7e644344910a"
        },
        "item": {
          "id": "e21c1a08-b87c-4d6d-af44-5b0ac4530cd9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "91d9be68-c211-4419-8669-54875c7c5d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7b8c7-10ed-489c-8c3d-06d3555f7b81",
        "cursor": {
          "ref": "fddb4cfe-3d89-4450-846e-1e7f4117c644",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ddfccff2-5538-4a59-a833-8d43f77ee006"
        },
        "item": {
          "id": "d1c7b8c7-10ed-489c-8c3d-06d3555f7b81",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63639858-7670-4b2e-b3f4-d77cff1dfa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e4c988-921e-47ac-9af5-fa62cb3fbc57",
        "cursor": {
          "ref": "1d76d7e6-bb1e-43d0-93cf-417aae1bc819",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eb0a7096-0f09-4f2e-8555-a3bb49c221c3"
        },
        "item": {
          "id": "45e4c988-921e-47ac-9af5-fa62cb3fbc57",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "07e61a8c-8453-4308-8ff9-d93ec429f6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c56193e-da03-4130-abb4-b19e5831f962",
        "cursor": {
          "ref": "9084276c-2dec-4317-8169-39ff0a4225d3",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "54c80773-8986-4bf0-a6bb-bd06f54a1403"
        },
        "item": {
          "id": "1c56193e-da03-4130-abb4-b19e5831f962",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a363d17b-1672-4f88-bb5b-234d9ffb8919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02893d1-b490-45ce-9b31-bfc4fc3983f5",
        "cursor": {
          "ref": "e43c7b20-d20f-4e20-8738-c32fec192e28",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93a3cb9e-a56d-4cf2-9a4a-2647cbd19327"
        },
        "item": {
          "id": "c02893d1-b490-45ce-9b31-bfc4fc3983f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4582b1d2-7a81-41ea-b64d-f8fdbea19dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0841ce66-ee68-44a4-8bbc-57d84fb8137c",
        "cursor": {
          "ref": "a57d1811-9808-40a3-9834-292fe82c70d4",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "79ec7431-54c6-4fa8-bbd7-f4cd595117a6"
        },
        "item": {
          "id": "0841ce66-ee68-44a4-8bbc-57d84fb8137c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "40245204-9468-43ff-8886-7607547c37c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e461a7-7c72-473d-9bab-26ec9f77e89c",
        "cursor": {
          "ref": "3626042e-9489-4872-997a-15d5f8bdf206",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "29a0d382-e522-4fbf-9de5-e5b02293d984"
        },
        "item": {
          "id": "96e461a7-7c72-473d-9bab-26ec9f77e89c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9cc6be5f-55f8-4a4a-844f-04fc250c7ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe19f1b-ac5c-45fa-bbdf-5a24c3877746",
        "cursor": {
          "ref": "85e78229-2649-45c3-b8a6-194624bf2284",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8c42b223-1075-4359-93df-55cc5555d663"
        },
        "item": {
          "id": "0fe19f1b-ac5c-45fa-bbdf-5a24c3877746",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b6df1859-00a4-4740-bb22-9520dc8e2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9c3585-ce55-4d6d-8a66-f793ea70d398",
        "cursor": {
          "ref": "f3991546-9c3f-42a6-aa3d-8d37f05b2f31",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "46932083-d19e-47cd-993c-5b8092b791c3"
        },
        "item": {
          "id": "3c9c3585-ce55-4d6d-8a66-f793ea70d398",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "54ce7c91-aa38-44ca-bb0f-f98a85e473d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f89d3a-66d7-4c50-89c9-668d5439f072",
        "cursor": {
          "ref": "1076abfe-7b04-48c5-bb37-57a600c3df6e",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "72fe6c13-cc99-49ef-9962-e19a98a5c9b4"
        },
        "item": {
          "id": "52f89d3a-66d7-4c50-89c9-668d5439f072",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bfbbcc73-fd8f-4b9d-94db-11f17ca55b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e05e04-7f72-4139-8c2d-64f59821fd38",
        "cursor": {
          "ref": "dc746264-99e1-4554-be26-698717d58e7b",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3455eee6-9ae5-442e-9427-97c1cfa9d9b4"
        },
        "item": {
          "id": "b7e05e04-7f72-4139-8c2d-64f59821fd38",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "68c08176-a8da-4729-a913-71ac046f3789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966fc16d-ed8c-4d5e-9f2a-f6d90ceacbd7",
        "cursor": {
          "ref": "bde81a8a-d43d-41c6-b13f-b6190abe5dc0",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3377899e-2fa7-4e38-8e76-5c7c5dd75997"
        },
        "item": {
          "id": "966fc16d-ed8c-4d5e-9f2a-f6d90ceacbd7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e965ab54-b53f-4e50-9dbd-d0a697cc02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e5e2c0-9e8e-4ef7-a898-5762bb1ce2e7",
        "cursor": {
          "ref": "7f310c3f-015d-4c53-81f4-4f680c4ddc0a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "da7f4fff-f6d8-4a3c-92eb-13fc6f3a42f5"
        },
        "item": {
          "id": "a3e5e2c0-9e8e-4ef7-a898-5762bb1ce2e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "85ee7fd7-882a-46ea-b988-29bac8ec7dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b83dc2-c3f3-4b12-9a05-8f2babe257d5",
        "cursor": {
          "ref": "c5a51c3b-7361-4de0-9124-e781672a3c1b",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9540c0d8-f2de-4173-bce9-d9142b16ba30"
        },
        "item": {
          "id": "74b83dc2-c3f3-4b12-9a05-8f2babe257d5",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "86847288-ac48-4e3a-9815-0fe6d2580762",
          "status": "OK",
          "code": 200,
          "responseTime": 1932,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "d45d14c2-6df9-450c-b2bb-d575f7f9bc61",
        "cursor": {
          "ref": "d2e8ac47-d4c5-491b-95d7-f672bde49da1",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe3322d2-d88d-4798-8c66-dec54f67e328"
        },
        "item": {
          "id": "d45d14c2-6df9-450c-b2bb-d575f7f9bc61",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "51bb91e7-96f7-4484-b7ed-6c885c7f7578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940b1802-3915-4b80-a444-3dd4096b9569",
        "cursor": {
          "ref": "4bdddec6-3df1-4697-a368-59abb3da6973",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aad59f34-5a54-465e-9e92-880b16e6a657"
        },
        "item": {
          "id": "940b1802-3915-4b80-a444-3dd4096b9569",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f966bb2-3706-48fe-9a5e-d249d94dd1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9a8970-60cf-4280-859a-feaf6a4430d4",
        "cursor": {
          "ref": "1b33e49e-7da1-4176-b145-678e6e656237",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "685700ef-636b-4bcc-ab8c-8075035e45ec"
        },
        "item": {
          "id": "7e9a8970-60cf-4280-859a-feaf6a4430d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "443414c8-9dd5-4328-b6f5-6aceda9fe4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67233c-c214-4446-b3f7-a6dd342e0953",
        "cursor": {
          "ref": "5a77b97e-eb86-49fa-a2a0-9bca69142a7a",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0b2705c1-b8f4-4ed9-8c0a-40193ef856d3"
        },
        "item": {
          "id": "da67233c-c214-4446-b3f7-a6dd342e0953",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9e6376d5-46c3-479f-8f0d-dbcee3c69af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b67d74-a361-4b2e-86eb-ca9b7a4f71a7",
        "cursor": {
          "ref": "5cd59a1b-1810-408e-b389-dce0d79e8a83",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "578788b5-882c-4263-9231-8adf47501202"
        },
        "item": {
          "id": "a1b67d74-a361-4b2e-86eb-ca9b7a4f71a7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d88bd5e-e986-4aab-a74c-dff060a1198b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3b13e1-d88a-4572-ae1d-29c04d74d5e7",
        "cursor": {
          "ref": "b3b32402-b16e-46a2-ac9f-c516ff416b0d",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "10956a17-15d8-4dbc-8784-645dd37125b7"
        },
        "item": {
          "id": "ae3b13e1-d88a-4572-ae1d-29c04d74d5e7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5d5cc51e-24cd-460e-b890-cabf397e1d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675f04e1-833d-4d5f-8266-1c19df0b88f7",
        "cursor": {
          "ref": "13fbc54c-5f69-41f7-b514-7872add37a8b",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c7a3691-3254-4fd4-86a0-0c747abd4473"
        },
        "item": {
          "id": "675f04e1-833d-4d5f-8266-1c19df0b88f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "82041fea-c61d-475b-b6ff-06592caef099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc684c-2046-4397-affa-1042d4c76432",
        "cursor": {
          "ref": "4876da5b-ea35-4341-bd5d-a070aa4bd807",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c85e51d2-0a99-4ac2-b1ea-1103fdfcdb23"
        },
        "item": {
          "id": "6edc684c-2046-4397-affa-1042d4c76432",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a8688ee-5519-4229-bc37-ec4353b98777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43fed47-ea2d-40b8-96e4-abb430e061d4",
        "cursor": {
          "ref": "9712e698-dcab-4254-814e-540b48fd30fd",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cd2957dd-2129-40a6-9eb7-3c96fde0b166"
        },
        "item": {
          "id": "e43fed47-ea2d-40b8-96e4-abb430e061d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "71b5ac33-d5a3-4507-8d42-74dfaf085fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac32630c-ad43-4958-97ca-9b4ead48bc56",
        "cursor": {
          "ref": "f0c928b2-cab2-4cac-917e-02e5f3dbe833",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70e9fc13-5409-47f8-9ef2-8dcbee3114ea"
        },
        "item": {
          "id": "ac32630c-ad43-4958-97ca-9b4ead48bc56",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "22887ee0-7e13-4a98-a6da-a82ef1056d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bec485-6d03-4c6c-a256-a25a62dfad6f",
        "cursor": {
          "ref": "39272907-5a10-4fd8-a648-688cc5dac29c",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "59663fde-3d97-4ce9-b9dd-ca93c31393e3"
        },
        "item": {
          "id": "57bec485-6d03-4c6c-a256-a25a62dfad6f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f964bf01-1385-4b86-8b83-0116e93ce708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f80fbb-4518-4238-8c2b-4990059bc4dc",
        "cursor": {
          "ref": "b6a67fd0-6b53-4509-b993-c6e6f750277d",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7397dc9a-aae1-4799-89cd-8d8eeedb7eb2"
        },
        "item": {
          "id": "d8f80fbb-4518-4238-8c2b-4990059bc4dc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "45480563-a106-4f64-8ca8-c224b5ae8c94",
          "status": "OK",
          "code": 200,
          "responseTime": 355,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a6debcda-2b54-4a1e-bcb4-175ce94d165d",
        "cursor": {
          "ref": "af182f68-60f6-4803-87b7-5ea8635c9178",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9ae95da7-25ab-4ead-b229-9ec2b050e8f0"
        },
        "item": {
          "id": "a6debcda-2b54-4a1e-bcb4-175ce94d165d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1bdabd74-bb95-4d1a-adc6-17935f0b086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f6766-0dd3-491b-a4a1-c6e126a98b76",
        "cursor": {
          "ref": "639d164b-8911-444d-aac6-944e10a2e9ab",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "47640c9e-47ed-45cc-be8e-2fb61cd053bf"
        },
        "item": {
          "id": "4d0f6766-0dd3-491b-a4a1-c6e126a98b76",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bfb640ab-1d95-4cf5-b464-0d0365c91820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74e5fb1-7913-47cc-8106-01006c843930",
        "cursor": {
          "ref": "1568a385-18bb-4e04-8e2a-d941c6b9120d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bdc8a971-8c99-4b21-941c-c8db2ad073fd"
        },
        "item": {
          "id": "b74e5fb1-7913-47cc-8106-01006c843930",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "baba8941-22fc-4c7e-aa51-cf14bf6163ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c56bda1-38bd-463c-b7d7-2a6828ae964d",
        "cursor": {
          "ref": "9fe2ca10-c827-4ff7-9faf-d47017c34c77",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "efea6fff-8256-44bf-97e8-4beeac1e8428"
        },
        "item": {
          "id": "1c56bda1-38bd-463c-b7d7-2a6828ae964d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "490769b9-f6f7-41e5-8f0c-0b3f6a2fe447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaab24d-f5b5-4f68-8135-6bb46cfebbba",
        "cursor": {
          "ref": "faf29244-6381-4b92-90a1-f3f59893c63c",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16edb74d-4d39-4b08-95bb-c6164214cd16"
        },
        "item": {
          "id": "eaaab24d-f5b5-4f68-8135-6bb46cfebbba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "81ea8383-d339-41b2-a3f5-dccbafd8eb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e648ed3-1ca5-4831-b6a1-a2caf90a89f4",
        "cursor": {
          "ref": "34baa81d-aaa2-4772-8d39-5e1455a17377",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0048453d-c985-4187-bf0f-e29e05168993"
        },
        "item": {
          "id": "1e648ed3-1ca5-4831-b6a1-a2caf90a89f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c2123eca-58f6-4d82-9c7b-e730abd3c7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf13262-5f34-4b5c-8b71-44b4f27e2401",
        "cursor": {
          "ref": "d679ee1a-ce34-4ea5-8366-9657739a1acb",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55099635-3d15-42bc-8502-d45105df2797"
        },
        "item": {
          "id": "acf13262-5f34-4b5c-8b71-44b4f27e2401",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "572891d5-fad1-40a6-b39b-fa4bb6212a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b716988-df91-420b-90a3-79ebecff108b",
        "cursor": {
          "ref": "96363347-9db2-4916-b014-c583893a0b16",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3554f0b-8079-4896-8b98-c815c481fc38"
        },
        "item": {
          "id": "3b716988-df91-420b-90a3-79ebecff108b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "58b67b21-e0a6-4a7a-a7e4-dbc7fc398af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f75e2f0-e8da-4ac2-8f44-f9e217b2b26a",
        "cursor": {
          "ref": "3dc81a5b-8ec8-4b05-a7a6-0055904aab89",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1f42ff2-8e16-42e8-a253-cfa8c52e685e"
        },
        "item": {
          "id": "8f75e2f0-e8da-4ac2-8f44-f9e217b2b26a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4895e897-0224-4d4c-aa95-0ade5d4254b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c17d64-fc5b-4450-8908-034f731e4265",
        "cursor": {
          "ref": "237569f1-f0fc-4a56-8321-811f0c66ce98",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "533822a3-9f5a-41a9-a6af-4c69d5de80a8"
        },
        "item": {
          "id": "26c17d64-fc5b-4450-8908-034f731e4265",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9dea73d8-5f3d-4736-aa69-d8a9990adc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff68a9f-1184-4462-95ad-de7319561b66",
        "cursor": {
          "ref": "19696853-ed09-4f6c-9a2f-44cbcde02d6c",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9e4f219a-8976-4135-9003-10913e14b26e"
        },
        "item": {
          "id": "1ff68a9f-1184-4462-95ad-de7319561b66",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4eb56994-d62c-4a57-8275-88f70aa41b46",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "69fd0ec6-a022-4d4b-b3bf-40cf602dd406",
        "cursor": {
          "ref": "f52488b7-dfac-42d2-bb87-c0d4802072e2",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e0670ca1-27cb-42d3-ba55-7c0d0d05b730"
        },
        "item": {
          "id": "69fd0ec6-a022-4d4b-b3bf-40cf602dd406",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "67cbf99e-b9bb-4412-9cf7-f5d7bd44bb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91bf406-a4ba-438f-86d2-04aba674773e",
        "cursor": {
          "ref": "b5ab53b8-fe3c-4e68-9d0f-d60d7f54a95e",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6ad53dd1-cd34-40cb-8c95-dcc2fcfb56b2"
        },
        "item": {
          "id": "d91bf406-a4ba-438f-86d2-04aba674773e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eb9df7cd-2c51-43ae-9af8-ded4390cefce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c661db88-4b2b-4e54-9b6d-1c2b2ba90fb9",
        "cursor": {
          "ref": "3715c0ca-7a45-4f42-abf2-0fafda552c23",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e7883820-0ab7-4d20-a4b9-37da2df6511a"
        },
        "item": {
          "id": "c661db88-4b2b-4e54-9b6d-1c2b2ba90fb9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aac5bf69-9ac9-4891-9899-a239845f178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af41b2f-facf-4886-bc3f-08c01f0b0a38",
        "cursor": {
          "ref": "5b2e2ba5-79e3-4323-8ffa-1bdd55712724",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "68cd4af0-f931-460a-a426-e8db8f9449ea"
        },
        "item": {
          "id": "1af41b2f-facf-4886-bc3f-08c01f0b0a38",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1470b804-2c7d-481e-9dbd-7767077a39ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a5e635-9c80-4c48-bca7-af9c34f3eb1c",
        "cursor": {
          "ref": "1f203745-fff1-40ce-995e-35ad5764e364",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "90965f0d-cfc1-4c42-967c-752be4ee937d"
        },
        "item": {
          "id": "03a5e635-9c80-4c48-bca7-af9c34f3eb1c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "001320f8-5cf0-431e-9214-1810d4dd92fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30543940-7c70-4f13-a40b-64b206a1832c",
        "cursor": {
          "ref": "77c8fcd4-5ce2-45d7-b27d-c9f5fe2e722a",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2f4d24bf-2d54-41b8-89bb-81e261f6a60c"
        },
        "item": {
          "id": "30543940-7c70-4f13-a40b-64b206a1832c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36250ec0-18d8-417e-bbe5-ae01ce9ec6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e02bcd-b360-4692-83e7-e2a2632f8240",
        "cursor": {
          "ref": "125c287d-0f8c-4525-b810-35056a44d52e",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8293ffda-0bd7-4fb6-9d7b-63730cf2704e"
        },
        "item": {
          "id": "e2e02bcd-b360-4692-83e7-e2a2632f8240",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3925c8ed-7501-4a44-912e-823e79f21431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91917fa1-cd1b-43f1-92d6-3f882d86529e",
        "cursor": {
          "ref": "278b2bf5-134a-4f7b-8d62-dc2e27682c80",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "24d92a4d-519c-4ed3-a35a-07edf73b49b1"
        },
        "item": {
          "id": "91917fa1-cd1b-43f1-92d6-3f882d86529e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5cc18b39-e306-4a4f-91d4-d71a3d34cb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ea86aa-afa8-445d-be7b-04650bd73ed0",
        "cursor": {
          "ref": "ee88454f-0df9-4c96-b5eb-49d5df2506c5",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "95da111b-f320-4211-888a-2bb13d655cdc"
        },
        "item": {
          "id": "44ea86aa-afa8-445d-be7b-04650bd73ed0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0fc22d2-a883-445e-b222-83342d1f0025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304c89eb-cd9f-4ea2-b264-de0ef57ee7de",
        "cursor": {
          "ref": "42b6d4fc-a8b1-4e19-9d4d-3803ff064bdf",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "49f3f15d-4f25-471c-9cad-f0de41297384"
        },
        "item": {
          "id": "304c89eb-cd9f-4ea2-b264-de0ef57ee7de",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d184112f-171a-4b37-8c45-fd19e8b10d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332b2e2-9be5-4bd4-89de-b42b7464d8e5",
        "cursor": {
          "ref": "f5d89a1f-d8b0-4f68-ace1-b670a4c5da4f",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "98e3b91c-7f77-4776-9721-fe2c463a1fe7"
        },
        "item": {
          "id": "e332b2e2-9be5-4bd4-89de-b42b7464d8e5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "82cac340-4204-4243-bff5-2e4e0a567429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558406c0-d636-4b94-9c54-75582118b7eb",
        "cursor": {
          "ref": "28a9f9bd-8330-49c3-a147-2a21e9580e86",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b2eb9544-5dfc-4234-b33f-d0143e0a14aa"
        },
        "item": {
          "id": "558406c0-d636-4b94-9c54-75582118b7eb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e7028117-6300-45fb-b400-39675bce24e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee888adb-b6c7-483f-83d6-c75ed0f0cb14",
        "cursor": {
          "ref": "225e5ed3-4587-4af3-9023-933566680caf",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0b38f6b0-ef0c-43e0-94a1-502021fb1f4f"
        },
        "item": {
          "id": "ee888adb-b6c7-483f-83d6-c75ed0f0cb14",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "afdfd311-1612-410a-b814-cafd06b4578e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571002da-30b9-4c76-a3dd-61d0e7a25f7c",
        "cursor": {
          "ref": "6935f7e3-8514-4932-a972-5c92764e7cf8",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e62fb70f-72ce-4b66-b19d-babb7a80f910"
        },
        "item": {
          "id": "571002da-30b9-4c76-a3dd-61d0e7a25f7c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc8837fd-38b9-4327-8fd6-6c3b1526a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0f55e6-0d5e-461d-b048-df86b70ffdf7",
        "cursor": {
          "ref": "2a6d7ba0-960b-4e12-ae54-3f58d51b3864",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f6b491a3-8433-4aec-80ae-0986f91bfaf6"
        },
        "item": {
          "id": "7a0f55e6-0d5e-461d-b048-df86b70ffdf7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62b9c859-a1d2-4ae2-8268-9c1072aa6c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d1533a-6fd9-4476-97e5-0041ae256b05",
        "cursor": {
          "ref": "2c180f9e-3ea5-4f7f-93c2-dbf661c9943d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1a9d0890-aa96-4b98-982f-1b2529390928"
        },
        "item": {
          "id": "c5d1533a-6fd9-4476-97e5-0041ae256b05",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb9bc26a-047c-4094-95ca-579d3054aaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc35469-5aab-45ac-bf86-dcb60e3360cf",
        "cursor": {
          "ref": "12e982b9-6b29-4da2-a364-9f9d4a6d3fa6",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b2fbf562-ce13-4c54-b1a6-d01ddc2ce813"
        },
        "item": {
          "id": "6dc35469-5aab-45ac-bf86-dcb60e3360cf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e8199943-9219-4734-8e5f-0efff1c5597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be578f-ccb8-4ffd-879f-e4a20fed51ce",
        "cursor": {
          "ref": "508a2e40-162c-471a-b139-291cb8b7d6b6",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6dc14fa2-a7a8-4002-be2d-58d614334ffa"
        },
        "item": {
          "id": "46be578f-ccb8-4ffd-879f-e4a20fed51ce",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b20e0ec4-ec76-4ce7-bef1-519eae477225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32db8c13-cd17-468a-928d-e93980f40b5a",
        "cursor": {
          "ref": "7215b3b2-1e2c-41dc-b93d-468a3b90d21f",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dc27b28a-006d-4cbb-b246-06c198c949e8"
        },
        "item": {
          "id": "32db8c13-cd17-468a-928d-e93980f40b5a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c2e5d1e2-020e-4ae1-b300-cf4afa00be05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadcc5a0-bd4f-46c2-b468-43a7131c8e74",
        "cursor": {
          "ref": "5a7afddb-23fc-4e3a-b299-35b0faa30d03",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3d89724b-0d12-4759-a510-7aeabe99848f"
        },
        "item": {
          "id": "dadcc5a0-bd4f-46c2-b468-43a7131c8e74",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "87acaf1e-d693-4dcc-85c0-3ba0884e0c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba5e44c-635c-4fef-91e3-808ebe95ad85",
        "cursor": {
          "ref": "4a24907e-c90b-4e7d-9879-bf3e0475d09e",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d801b99d-4ae5-4f2a-babd-dde14de59878"
        },
        "item": {
          "id": "9ba5e44c-635c-4fef-91e3-808ebe95ad85",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e84c6e87-6c30-47c1-b2a9-975ad1b5cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adae8f2f-675b-4d01-85ae-466590018891",
        "cursor": {
          "ref": "ed2fa840-6823-4c7b-859f-22f5f464b4e1",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "78dd12b2-bab5-4bdc-a020-c5f9599aabbb"
        },
        "item": {
          "id": "adae8f2f-675b-4d01-85ae-466590018891",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64822952-2feb-4207-828d-9f799007c2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da66585c-caf8-45b1-9a26-de5d93c5b67e",
        "cursor": {
          "ref": "94204568-c1e6-4f38-aa5a-607730fccddb",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5411064-43f2-47c5-b133-8d9efbe71074"
        },
        "item": {
          "id": "da66585c-caf8-45b1-9a26-de5d93c5b67e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "18927256-2beb-4876-97c9-581d4f504b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f204a1a-ca7d-4d54-8c81-276615ce53c4",
        "cursor": {
          "ref": "dd4db1d6-ad27-44a2-b86e-697fc17a842b",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7140b3fc-04f9-4cb5-97a6-52371481d04b"
        },
        "item": {
          "id": "7f204a1a-ca7d-4d54-8c81-276615ce53c4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ce940270-e0c6-41c4-900d-d4d23f30f9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f9db1e-3999-4206-ab62-ee0f34878db5",
        "cursor": {
          "ref": "0d886df2-6c78-4ac6-ac5a-2c5d327009d4",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "519441e5-5523-4056-ba4f-6ddabc64c7f2"
        },
        "item": {
          "id": "c1f9db1e-3999-4206-ab62-ee0f34878db5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a66a6af-e56a-4db0-88a7-c031e7f89f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d15c34e-e11f-40d6-8fcf-9b5ca69f9bd5",
        "cursor": {
          "ref": "7e7a666e-a433-446f-b624-935fe52c072d",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "82d57022-5d3c-4829-863e-8e6ca0160f99"
        },
        "item": {
          "id": "2d15c34e-e11f-40d6-8fcf-9b5ca69f9bd5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b29289b1-dc74-41b1-ad9a-c7ce3efec277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2ab673-0277-475f-aa7e-1677a5855fd2",
        "cursor": {
          "ref": "48d75881-99d4-45e8-a893-cef1c4d9342a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9d4fffc3-3878-4c43-b3dc-6d67d7ef29ac"
        },
        "item": {
          "id": "0d2ab673-0277-475f-aa7e-1677a5855fd2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "95a5d830-cd26-4433-a460-4b426e9c32bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf3d2ee-57e1-427e-bc76-bfaf243ba386",
        "cursor": {
          "ref": "f906394a-4a46-4189-a8c5-652707262505",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ba6e37c3-fad4-4922-a2d9-2532de1f9266"
        },
        "item": {
          "id": "0bf3d2ee-57e1-427e-bc76-bfaf243ba386",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19f502e8-5766-47d4-9a0e-7669dd3c9951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd863eb-d6b1-4b22-b1c1-347be99194ff",
        "cursor": {
          "ref": "6795960d-cfad-4275-bcf6-e669425db81a",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "524e3b18-c7de-4f2e-918f-6ba8f6e65311"
        },
        "item": {
          "id": "0cd863eb-d6b1-4b22-b1c1-347be99194ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d31c6f50-59d5-43ad-b312-754a3a54614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b58c68-e89c-470b-b88b-edf04f6e369e",
        "cursor": {
          "ref": "4bbc705c-18d2-4545-be82-1bdf1d0f3c4d",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ea28b9c-0f25-4442-af08-71e77fe1ff14"
        },
        "item": {
          "id": "f7b58c68-e89c-470b-b88b-edf04f6e369e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6446d74f-4f21-49ce-9cf9-51dd8b57f328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afd921f-54f6-4080-b245-6541a53113a6",
        "cursor": {
          "ref": "8bd53a45-00bf-4c93-b904-602ed2050da6",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "610c1077-a87f-408c-95ed-24a838db971e"
        },
        "item": {
          "id": "6afd921f-54f6-4080-b245-6541a53113a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "45604b2e-6e08-497d-a609-3ed8f8550d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940ea4d8-33af-4881-802d-d4667fc27de4",
        "cursor": {
          "ref": "edb8da9d-5532-46bf-bfc8-8c6d4b3a407c",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f0b07a64-eaef-4cf2-b060-5bbc644b35c6"
        },
        "item": {
          "id": "940ea4d8-33af-4881-802d-d4667fc27de4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b5845d04-deee-4d0b-b15f-e34f3e61ed1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb08b55-89a9-4f4d-b15b-6156f03a6e0a",
        "cursor": {
          "ref": "0383fc8d-52ad-4fee-a4ad-1ae197d62da4",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a73e99b3-24c8-4880-98a0-859eb3f6e647"
        },
        "item": {
          "id": "1eb08b55-89a9-4f4d-b15b-6156f03a6e0a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e079d297-cc00-413a-8456-72a67ca80a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6108299-0a37-4695-8fc5-7c3f5404cbda",
        "cursor": {
          "ref": "4bba290b-3193-4798-bd5f-a3e47d47f61b",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "be80cd24-cb4d-494c-bc7c-6456b3118340"
        },
        "item": {
          "id": "e6108299-0a37-4695-8fc5-7c3f5404cbda",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a873aa52-7c1e-4669-8820-224d3fe2f4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32854f8-d6e9-4e5e-be4a-4f2306295883",
        "cursor": {
          "ref": "42ce9bfb-c739-4f61-9eec-25a42e226cdd",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc639ae6-e930-4dc7-92de-79be1c21920e"
        },
        "item": {
          "id": "d32854f8-d6e9-4e5e-be4a-4f2306295883",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83cd41f4-4604-4266-b4b0-49add6ea8d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63a987-4853-46ac-9b77-5c7900efdc46",
        "cursor": {
          "ref": "b2c7406c-0306-442f-a56e-c93bd7d060fa",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "187552f9-1968-41bc-bea6-9452fc0d4176"
        },
        "item": {
          "id": "3f63a987-4853-46ac-9b77-5c7900efdc46",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6799d28b-6b27-42ea-9fd5-0c268822ca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be787813-1b33-4498-ae31-5e1c724b79ba",
        "cursor": {
          "ref": "c5a68646-58f0-4456-89a8-2d0b992318cc",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "05c8932e-d4f1-4928-a32d-119ea19ed507"
        },
        "item": {
          "id": "be787813-1b33-4498-ae31-5e1c724b79ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5b7e96b-aab2-4f72-8ea5-855d45ff1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64715edd-ba34-4ec1-9d87-110e18a21539",
        "cursor": {
          "ref": "3fda66e6-36fb-49c5-bac4-dbf30161f383",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3eff4b55-0611-4c13-b108-8c3ed670dc1e"
        },
        "item": {
          "id": "64715edd-ba34-4ec1-9d87-110e18a21539",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "332572de-713a-4247-b30f-9c3a32613ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1124b576-68db-49fd-b402-f2543dc36bcb",
        "cursor": {
          "ref": "693e2dd4-8217-48b3-9609-95baaa0d6312",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f813b74d-4996-467e-9e79-b8f1c87cd15b"
        },
        "item": {
          "id": "1124b576-68db-49fd-b402-f2543dc36bcb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "97d72dcd-9fa0-49f2-97ef-bf8d72c32eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7756efd5-4da7-4ab0-81a7-f3692f315daa",
        "cursor": {
          "ref": "6bc510f6-4330-416c-9928-3c2582e8fb99",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "59ce8f61-a9cb-46c2-92d3-ef66eac42be3"
        },
        "item": {
          "id": "7756efd5-4da7-4ab0-81a7-f3692f315daa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7f34e1e1-3463-40d7-bb16-1e89d1fbf54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a258e29f-bed7-43a0-ae70-3582102deb58",
        "cursor": {
          "ref": "15674384-73e0-4db0-9441-ce2e3185be36",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7d6b7a45-2bd9-4be2-a667-f801b2378286"
        },
        "item": {
          "id": "a258e29f-bed7-43a0-ae70-3582102deb58",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "610e0b10-f14d-48df-a4d5-d67105db2ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe03630-31e0-47bb-97e6-159a5326da91",
        "cursor": {
          "ref": "0aa52579-f0ec-4baa-8b11-ece64aa48cea",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e55a9104-e73b-4190-9fd7-13fcc9ed75bf"
        },
        "item": {
          "id": "fbe03630-31e0-47bb-97e6-159a5326da91",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26bc24f5-3470-4e94-af9a-be13c304009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af98f37-1232-444b-bc71-4426f62e23ff",
        "cursor": {
          "ref": "7fda3737-065a-49f3-9546-623b1552fe6a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30265597-5a2e-4155-b49c-9e601d03fff4"
        },
        "item": {
          "id": "2af98f37-1232-444b-bc71-4426f62e23ff",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee38007d-7896-428f-8a17-5b5d37f5cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252872a1-0ac4-410e-883a-6120fc9891af",
        "cursor": {
          "ref": "89571f94-b13f-4e4f-bdd0-6e1c6e71f8e5",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "895f06b6-ca24-4381-8d02-aa8c19fe4ed2"
        },
        "item": {
          "id": "252872a1-0ac4-410e-883a-6120fc9891af",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "828d6f0d-d3b8-473c-b623-296d2dba5cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3e04a2-e958-4f5f-972e-16f2e20da665",
        "cursor": {
          "ref": "0489f741-bbec-42f0-94d7-bf9b7c57f1d2",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "84757faf-597a-4e13-b630-3064d87a4ea8"
        },
        "item": {
          "id": "6e3e04a2-e958-4f5f-972e-16f2e20da665",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "738badcc-c063-49f8-906b-b2711b804022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c158d556-598f-4a8b-898f-f8b200a558f8",
        "cursor": {
          "ref": "38990665-5593-4a44-8b1a-d9dfd2f7f562",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c54a0e6e-f75a-48cf-b669-a5fcffd71ff1"
        },
        "item": {
          "id": "c158d556-598f-4a8b-898f-f8b200a558f8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d0d2d61b-de6b-4c1d-b33b-e5b0d8b97b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab19792-9b11-4478-96f9-190e0e1735b8",
        "cursor": {
          "ref": "3eea3b6d-1562-48c4-b856-496f61e101dd",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "46ee8c80-f3c5-4ab5-8444-d9108321526d"
        },
        "item": {
          "id": "dab19792-9b11-4478-96f9-190e0e1735b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "acd3cf79-99cf-41c6-9a6b-133721b2e938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7dcdd-6b33-42d1-a914-f3c39266bc71",
        "cursor": {
          "ref": "93e34fa8-6751-4d15-ba8f-29e82ac5757d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2fe1356f-e153-43d3-a929-b92f5629cf97"
        },
        "item": {
          "id": "3ca7dcdd-6b33-42d1-a914-f3c39266bc71",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b18f6b6b-7660-4c62-9dba-d637a1503503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60927ad0-9254-4e74-a386-43006912946b",
        "cursor": {
          "ref": "7dce982c-3c2d-4c7e-ad4d-b2002cfe4b22",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fa18d1b5-39d6-44c6-a42a-06d25e3d9d5b"
        },
        "item": {
          "id": "60927ad0-9254-4e74-a386-43006912946b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b030ec54-c4f1-406f-8510-09fe1dc8181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf61823-7c4c-44e9-9962-e60c53e727f5",
        "cursor": {
          "ref": "19ffe4fd-0832-4e29-ae2d-cc2c9616c855",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40c2d95e-31f2-48da-a50e-f312653a7c9b"
        },
        "item": {
          "id": "faf61823-7c4c-44e9-9962-e60c53e727f5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ed5f863b-ff49-4b3a-a9e8-7a51ab8dc68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4fb7fc-a2b5-478a-9811-8d9ad9f7220d",
        "cursor": {
          "ref": "16277922-f7b8-455c-9a4a-1543547794a5",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd1cdc83-49fb-4da8-8aa8-3d9dd24ed292"
        },
        "item": {
          "id": "df4fb7fc-a2b5-478a-9811-8d9ad9f7220d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae14d392-5761-4c8c-bda8-8665dfe35cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85841df1-6951-4834-9f75-235f133c18b3",
        "cursor": {
          "ref": "f1349f8a-774c-426b-ae10-d89ac833b813",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49aa4f22-b380-48ec-87e0-530728193bae"
        },
        "item": {
          "id": "85841df1-6951-4834-9f75-235f133c18b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "37643a67-7f43-4d62-9467-4741d9a8b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523f8432-a8dc-41fc-95a1-40723eb71e89",
        "cursor": {
          "ref": "3e933a76-6140-4947-a8e0-e279f5af2485",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4797a040-b546-42a0-89ee-ae8314905483"
        },
        "item": {
          "id": "523f8432-a8dc-41fc-95a1-40723eb71e89",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "56851b82-fe90-45ea-981d-4089654e6e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51937ae7-f1b8-487e-bd54-9c8354bb5926",
        "cursor": {
          "ref": "c81ad8bc-7648-4750-be06-926f466819df",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b2faa84e-71bd-42ea-97da-c8dbe08b9164"
        },
        "item": {
          "id": "51937ae7-f1b8-487e-bd54-9c8354bb5926",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "86f9e1c6-d065-4965-aec3-d1bd3978f342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8a5fd3-9f89-47c2-9ce1-1e79fb799b54",
        "cursor": {
          "ref": "a4c2de2f-f762-4704-88cc-ad7f5a8cf075",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "25d44892-92d7-4291-9238-6b0c23a06d2f"
        },
        "item": {
          "id": "8b8a5fd3-9f89-47c2-9ce1-1e79fb799b54",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b8b236a-fac5-467d-a3b2-216b62eb50e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85337047-eb57-4a0b-99e5-e17aa8f0abe8",
        "cursor": {
          "ref": "8b53c7bb-572a-4c62-aefb-9fc458e400c4",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a53d4128-38fd-4ffd-82f6-119ecd0f6510"
        },
        "item": {
          "id": "85337047-eb57-4a0b-99e5-e17aa8f0abe8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "44d5e089-d3e2-4c0a-a912-4d4c28a3acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b94c83a-fc0f-4015-bd18-f22e2a48f34d",
        "cursor": {
          "ref": "d737e93d-af5a-483f-a3c3-b405442de67d",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "26cabb3d-c35a-4374-b4ad-fca09914de57"
        },
        "item": {
          "id": "4b94c83a-fc0f-4015-bd18-f22e2a48f34d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "27800986-a58c-47a6-a85a-c633fb339f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb50df0-7bb2-447a-a47e-6b0210eef008",
        "cursor": {
          "ref": "544194ba-7864-45d8-874f-6c941a44c592",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a4186680-3363-4a4b-b05f-2ea389662b7c"
        },
        "item": {
          "id": "8fb50df0-7bb2-447a-a47e-6b0210eef008",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "18abece1-6dfb-494d-90de-2ef3dbaec50f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faa0695-2654-4c3d-abcc-f12605946bc9",
        "cursor": {
          "ref": "9dcfb8bd-339f-4ba3-807e-352f632541c9",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13896f90-f275-44cd-a15e-d8f1857a69fa"
        },
        "item": {
          "id": "6faa0695-2654-4c3d-abcc-f12605946bc9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "59624466-fd8b-4fdf-9129-cc295108f56a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 346,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da5b091-37f4-462b-bb79-db4c60bf9f4e",
        "cursor": {
          "ref": "6a8f55ac-9ab4-4acd-8009-04bad0a1c990",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b291ad4-6940-41d8-b112-037146da654b"
        },
        "item": {
          "id": "6da5b091-37f4-462b-bb79-db4c60bf9f4e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d00dc23c-7685-48fd-824e-fb67cd18086c",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7878ae08-2e1b-47ca-bd18-237cc83e51c6",
        "cursor": {
          "ref": "aa63c2f1-8726-4315-88b5-77e0612b8864",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "819ec6f9-39a1-4833-b967-c8a0927d327e"
        },
        "item": {
          "id": "7878ae08-2e1b-47ca-bd18-237cc83e51c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2e52b97a-c602-4180-980e-eaa6b098a60a",
          "status": "OK",
          "code": 200,
          "responseTime": 1947,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "156f248b-5cfa-4e1b-8f6e-913a8df635c2",
        "cursor": {
          "ref": "5f5ffeda-3bfc-4b16-bb9d-85196b76d05e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7468363f-9704-443c-b06e-2dcf87448eef"
        },
        "item": {
          "id": "156f248b-5cfa-4e1b-8f6e-913a8df635c2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef47c537-10be-46de-b70c-3c64f31ed1d7",
          "status": "OK",
          "code": 200,
          "responseTime": 1805,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
        "cursor": {
          "ref": "b82a1dfe-877c-4c31-8514-fefc60080310",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa459145-1401-4fac-a406-54bad9b612c3"
        },
        "item": {
          "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "68ba36be-d792-4bdf-a83d-eaf363ba7395",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 720,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
        "cursor": {
          "ref": "b82a1dfe-877c-4c31-8514-fefc60080310",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa459145-1401-4fac-a406-54bad9b612c3"
        },
        "item": {
          "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "68ba36be-d792-4bdf-a83d-eaf363ba7395",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 720,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
        "cursor": {
          "ref": "b82a1dfe-877c-4c31-8514-fefc60080310",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa459145-1401-4fac-a406-54bad9b612c3"
        },
        "item": {
          "id": "495bc1d8-f9d2-4498-bc1f-2428ebefdef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "68ba36be-d792-4bdf-a83d-eaf363ba7395",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 720,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f0f438-5609-40d6-b507-709622598438",
        "cursor": {
          "ref": "b24aebec-384d-43c7-bc0a-1339a09ed4a4",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3c342682-a861-4c8d-8354-c0fc07926411"
        },
        "item": {
          "id": "a9f0f438-5609-40d6-b507-709622598438",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ea8e1104-92dc-49c2-ba8b-9c358b52dd88",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c029d14f-c268-440b-b367-2e703445a04e",
        "cursor": {
          "ref": "175ea4f5-17b4-41bf-92ea-50b812e64dec",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ec24fbff-6f59-45e0-9118-9fd0ef1690b1"
        },
        "item": {
          "id": "c029d14f-c268-440b-b367-2e703445a04e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e36cff3-5b5b-4909-bc1b-ae8c6b569c67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 112,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c029d14f-c268-440b-b367-2e703445a04e",
        "cursor": {
          "ref": "175ea4f5-17b4-41bf-92ea-50b812e64dec",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ec24fbff-6f59-45e0-9118-9fd0ef1690b1"
        },
        "item": {
          "id": "c029d14f-c268-440b-b367-2e703445a04e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e36cff3-5b5b-4909-bc1b-ae8c6b569c67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 112,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8f648c-35be-4272-bbd5-232aecf85509",
        "cursor": {
          "ref": "b5f3c0de-ce2d-4d51-a615-2ff7499091f4",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1241c412-74b8-4824-b89b-f225321b2532"
        },
        "item": {
          "id": "fd8f648c-35be-4272-bbd5-232aecf85509",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f2e7c98b-2166-4fa2-829e-46816ed31bc8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 661,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2028ae5e-82fb-44a7-90e3-ae5552cebc7b",
        "cursor": {
          "ref": "dec9034b-6cea-4ee9-9b82-38f37d9c3330",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b4ab4709-f17c-4258-a202-52b6cb7f116e"
        },
        "item": {
          "id": "2028ae5e-82fb-44a7-90e3-ae5552cebc7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "297b1880-0baf-4f01-bc3f-acce818aad78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2028ae5e-82fb-44a7-90e3-ae5552cebc7b",
        "cursor": {
          "ref": "dec9034b-6cea-4ee9-9b82-38f37d9c3330",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b4ab4709-f17c-4258-a202-52b6cb7f116e"
        },
        "item": {
          "id": "2028ae5e-82fb-44a7-90e3-ae5552cebc7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "297b1880-0baf-4f01-bc3f-acce818aad78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb81ab42-532f-4e8c-b481-6f81de3ee7ea",
        "cursor": {
          "ref": "3f0c7e1b-f89e-482a-a211-4bc6d62d85e8",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "63c44d4d-9c60-4059-815b-3ca7865291fc"
        },
        "item": {
          "id": "fb81ab42-532f-4e8c-b481-6f81de3ee7ea",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "df35c8f6-ac55-477b-85be-fcb118c97786",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}