{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56a0dd5c-d268-4a36-8ace-c116ed8dc250",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e13fb757-456d-459b-84b5-443abb688e4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bb043c0-7079-40ca-ac76-dff7fbb3d72a",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e7506c5-7f84-4337-86b9-fc63b81aba51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4ef17cf-c642-43be-9e81-fd2f54893bd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "703c1ae5-8d43-4757-a64d-a333ae08d98b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1b144765-9b74-463f-8784-1adef83bb2f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "634c0609-22d6-4030-b91b-ddcb1be9aaad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d445f35-e617-43cc-9151-ba57eae97799",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9848ce-36ca-4a99-817a-b21301eb77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91157d94-a3a9-4d34-9da8-1e56e55b8977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e1928-72a3-4975-b102-11e1b7753928",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f89bb-5b4e-4faf-acd7-a746b3c621cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dccf78a-4a6a-43b0-90c3-4438cb568151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc991ac-b1de-4187-a6dd-aa3b25dff061",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8aaf5-5dde-4717-9044-830a46e3cc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514cc2da-a8a3-4593-b45c-1865c056963b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74a790a1-56f1-40f6-99f7-99b0477b923b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a32149-8c52-4336-8c8c-49f3dc9147e8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77ffdf-12a4-475e-8764-ad4667cfe685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe4fec37-8d3b-45fe-8b96-05f015d8058b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ca9e31-ec72-466d-9663-cf56d26e2637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94764478-5ad5-4f7a-b44b-42049b3264c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd77d19f-f418-45ca-8dce-c7dbc32a6b6f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e0782b-0196-4a5a-88d9-99bec52fefee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e0dfa04-db82-49c6-983c-32e9241b8a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d9aca4-ccf6-486c-81ee-061908a56269",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b0f2e68b-1b54-4742-ada4-7b33a04f2789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38225630-9351-44ea-8145-3a80eb7c11ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4aab860c-c4f2-4016-944a-d3ee8c531d56",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52f99f65-f8f6-4ea3-b922-9479d0252daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bd62349-6e85-4aaa-b672-72d112f7b22b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29efdc1d-3699-47a4-a8c7-717421aa35c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1c9e112c-dcb9-4e3c-bfab-7f25b0331163"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b609c6b4-263b-4b75-90ea-0135dee5ca11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e53f0b5-192a-48cc-a58f-266081c7c1ae"
            }
          }
        ]
      },
      {
        "id": "7ccef751-de34-4441-8682-3142ca468207",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "686b2a25-d1cf-465b-a854-98b2fb35a6cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "999790c9-6c95-42f1-adf9-4d214930f9f2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321f3c2-a369-4b40-8ef0-b9d095e9ec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f25593-f0da-451e-a8aa-2bda1407eb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062a287a-1d38-4a39-b2e9-d75f6d5d073a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7c2991-321a-4168-9de4-b6fd65949f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22626f11-99b0-4cc0-a334-6c350331dc4e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43b14da-c04a-4f6e-b701-2b1eb6ed56ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d70354-4d65-45de-97a4-cdd9b7d2eb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd0b60c-0b49-49c0-bccc-cb5dfd394b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8144a287-66d2-4798-87dd-e34f3b6b7072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e74465-9da4-4a35-9dd6-b268d17d3b64",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ed821a-1f8f-4afa-b47a-eff88041190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1d3470-b5b8-4798-ac85-f0cbf6beab91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c53a5c3-c220-4050-b6f2-05e2a1ef9fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f60afa8-f734-48f0-a670-976336ecc301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0199af76-7cd5-4fec-b4c3-0603451d1c3d",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db281ec-07af-44fb-874c-1cf2d90c1802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52be4dc-12e1-498f-b7af-4ddb5882ae17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f612a7-ea76-4a16-a7db-e1c5da84957e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bc59e0-a98e-4f2b-bed3-89648ab18c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5b2549-268a-489b-96a7-fae5f35a4523",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604243a2-b1ea-4a19-a9f6-7eb462b55084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0d593a-5aed-4893-8c52-167ab5b42faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af26333c-4477-4605-93fb-20d07c7c52a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3449e7-263f-40d7-a557-94ac212ea987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0eaccf-df69-4503-a4a5-3ec7aa3bbf03",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e393eed-4d46-4628-8f42-b1cf0e9edce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21edb9a0-1fa6-4f68-87f5-1aed7503bf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3924af-0f91-436e-bc88-bd809b9439ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025662df-0a7c-441b-99c8-8f57f2d9bab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a7126d-892c-4e3c-83b5-b2b2ded27ddd",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea6e26a-3b66-447a-8e5b-82b904f82b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc82a1e-6d46-48d7-ba2f-5689b8130962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317a019c-450c-4068-82ec-b5ad72135191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0625785-4580-4e00-aeca-d2839d351088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c20b9d3-6791-48e4-8d38-af0dd7645fed",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dd3468-c386-40e9-8fe5-810f96668e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dcf2e3-4988-4145-bada-15e2e5f814a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b3a2a2-4f23-4235-a7d2-c00e13e9ef4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd08b9b6-a6ef-4c75-a755-d44b1928a549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8d1d73-1d1a-4b12-9e2e-65d84e98881a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b9cd6-b708-4053-b8ae-df358f520279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e31d21-d886-4fb2-89f0-3d14cf382351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbefb8fe-716f-4dd8-aad1-d40fe8fcc5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e8c704-cf1e-47bd-b242-d3a80a6edb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b51c1ca-037e-41d3-a74c-79ba16cc0e57",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f037efdc-3274-498c-9fd7-7eb91ffa71e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9c59c6-bdba-4431-a853-79df1d81ab69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e8b66-3c24-49a6-917e-1209c14993fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b876228b-9be3-48dc-8405-3912bb4d907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4273cf-0f70-4294-8133-54fbf9891a61",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dd04b5-7e7e-4d81-8cce-39b4d8124f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc20fe9-5d08-430d-b1b7-f9d5dbc72c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594f0c4-c0d8-4e19-bd25-f2ba3644f638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "44713155-c798-4244-bd2d-f5f7577b4cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8d8e65-8ee7-41c4-b669-64429a85431e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0126577e-72f1-4814-beb9-bc33063a6a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed1a78c-f782-42d8-8b20-832d08eabf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcd4e8-1253-431a-986a-a0a7f470dcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "3517212d-c818-4861-81c4-c847d563c10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e1cfbf-80e8-4be4-99f9-041a9736a67e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7098652f-d70e-49a6-828f-b0d7e289ec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf945f3-570a-417c-81c7-38fa97527657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7b5ca0-9357-4c68-aee5-b243dffba03e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee2df13-d2dd-4620-806a-0279922a10cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f875329b-d66a-4577-96f8-fa2e92577db6",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ee24f-a92f-433e-bfa4-42ac5862dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461484fa-d343-4300-85df-1a3762b65d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ab2057-ebdb-4eba-ac37-d466c23f9a81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95f0bbc-a843-4054-b75e-7f279eb54c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a8a2c1-41ee-4cc9-a09c-0883876675c5",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3b7c8e-f79f-47bd-9368-a475f57a67dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30175d44-c1a7-413a-b852-674a7fa37a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7afa10-3db8-4a3d-b2e1-b31406b92d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "9a28fd4c-ed38-44fe-9e66-bbd1541c2877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d46862-ce71-4579-bd28-909c6aae8d43",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb7015c-32c7-4cac-a950-7fc6792caeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0ee3a4-c5b8-4f27-8a34-abb01800433e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b85d19-716a-4631-9f04-5ffd7103c72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "1635acf5-6d82-4c83-9444-e25b344a9b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab85fba5-9f56-4025-83ec-01a0a3a62b12",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce73c45c-8d1f-433b-9621-0f2ae2e22167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbb9099-ca10-4c7d-9b07-bebdb0215e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca95d7c3-2266-4d16-80f8-06f54c6f41e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64718e30-79e0-4436-a969-1c477fb48e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41740ef8-52de-4266-91f4-343e5c5476e9",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc661e-b19d-4876-8184-0a2219b4ae7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefd875a-dc3e-452a-a052-90b326cb7f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68cb874-0f53-46a2-b6a6-79bad952b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea804449-0d0c-462e-99a5-6325335acbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e13969-3bbe-4a01-9bfb-8e4e05ae80ca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f3eccb-1291-4e86-b7ce-6bb4be1bc95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bfdc41-d96b-4ed6-b94d-aff4211549ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0261b0e-e649-4fdb-913e-8e0cf69a2c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09f1ebc-cf01-4d4b-9730-04bd861719f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f809d990-5045-4053-8a1e-b4c84a9e5e92",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55618eeb-a2f8-4ac8-bfdc-f5d44e6aed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7351be-a614-432c-bc1c-33e9f9d195d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e599ee2-006f-4ff6-9f04-8106487e22c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3182799a-fe77-4185-9e63-0779f020f787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40667ab1-064b-4682-996b-204eb9fe9699",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520e7512-81a7-48e2-87d9-f5d7bf1609b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778b4a1e-a8e9-4a5d-a1cd-6147de840154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffee1d01-16e1-407b-bf93-ae1e0882e980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edee0be8-71c2-4dd3-b186-944ccb5ba918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c301284-2d20-410a-abc7-7e6fd80fe8ee",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1090984e-09f2-40dd-bed5-d932ca2e1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222aea89-5858-4d53-ae0c-8f40445c9b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e64345-33c4-4a08-b516-a38e6486cb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f86057dd-0f52-43af-937e-23a14f589380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79abc0de-4dfd-4a55-9bb8-9face133103d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac5a60-1a6b-4fa9-b997-e1b128e53cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4027806-a7f7-4437-a5b4-8771ff9cfa24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc80701-b40b-4d61-94ef-95e1eecba18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd87c01-2d0a-4eb6-974c-a02dee9e60aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051bb47b-3295-4cb3-a21f-ca172a1cb5f7",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615534b-3fba-4d61-8099-aa0ce07e0c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7a693e-ecf4-4392-bf2a-b759c747d1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fde9c5f-d2cb-4c10-ad3e-f97b43b0c766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda4e860-b892-4d1b-a244-7f2c4acc1e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d395ed-d858-4881-beae-ebe779a5693f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ab90f7-3bce-4adf-8382-6012954f2de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a851943-8d54-4a91-b55c-bd5e3948175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94925a0-3fb0-465a-8636-4f58dee5f4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3df544d-e61f-42d3-9f22-5bfbfb158fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec92c74-9511-4ebd-acb1-dea23c6df709",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc97bfa2-6c46-4700-87c2-c7c32acfd887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711a50d0-e5c6-435e-a832-0778990966fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f1b32-b9cd-42cb-87ca-784c62bc7965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba69b517-e1c0-4171-bffe-163edc5cb745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5afb406-dfe3-4d61-b380-d6fcdcfcc733",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d8a585-386d-48df-b429-4f546eb48d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9c4f0a-08a7-4f33-9dfe-3f27295b3714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6274a-4c01-477b-98ba-6872b96b2d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417694c9-7186-4552-a19f-bbe6b7909727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea0be16-6c36-41cb-af6b-86c568cd96b2",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8170cfa-1c4c-4161-bfc1-ee5f5995c3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a8d550-d4f0-48d3-832d-fcc2e1803f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb116bc-98ca-4fe5-aba9-b3bb85e6a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b67ba97-4049-49c8-b307-1ffb7ebac2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98585ebd-9988-4b9c-bc06-724fdbc4a827",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68da969b-b40b-491d-a565-5aefaedf3035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a266e7c-b97c-444f-a3ed-4ade72b377d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c59700-118a-4f01-a4ae-28816651f473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da63cb2-4773-42dc-aff8-2b0bc5f8526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b087dd-3600-441e-bcb0-b12b9b9baeaa",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77b9039-80d1-462a-8e87-f7ca19cd9cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2554225d-c358-49b2-b2ed-20d1ca00001f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24be4076-81cd-411d-9db1-d34ac43a43b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed9c16c-4f14-45de-82b8-3bec760bdda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aef6a2-aef2-4ba0-b16d-74552d4a86c9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bced3d-b3e4-46d9-b317-be74aa465f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "24ae650c-1351-4bc9-b210-6cdc2075a018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4467b6-f580-4dfd-9bf6-b9c051aab7df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed827a2-a2ee-4d13-9c8a-37ea324394b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f61a60fa-342b-41fe-bc79-bd43b40107bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "786a9df2-6a60-4213-9ad0-d81a5bf1400c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2011ccfa-a8a2-4e53-a1de-ffc1aa27bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "256ad13c-659c-4d1c-9bdc-9ea4b4b74896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7621a7ad-7769-492a-bcf5-86629ad2a784",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e46b13a5-8a88-4ebe-b715-835fb2469ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47b8eca-ccf8-4c43-87be-ad2e6748bcab",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f4c04-435c-4707-8c66-348e202d5f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d147ee8f-dccd-45af-9c53-90c612805abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c53099-0a1f-4d61-8fde-c77a363b000b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e635c862-8bb3-4993-b310-67e6df57d4bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2429e770-e3b0-4dab-9778-5872a30db586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81a5540c-192e-422d-a4ef-552df66ad9a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "361b4467-13ed-49d0-b817-867fb9e53444",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c83187f7-f13c-470c-8e69-55de145d50d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "732b1f32-07d0-42f0-b5fd-9dbc70b8fa13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9ef5420-802b-4595-a7c3-502d7e49839d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "782ee42f-93f6-45af-b8b6-5559499501ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdad4876-37f0-42cc-b3be-ba1b59850716"
                }
              }
            ]
          },
          {
            "id": "249019e9-512e-40cc-abc9-a27419f08f15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b97b4bb-0a34-4c8d-a3dd-fa77cd0a048e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce46723c-f122-4d2c-8eb9-555043980afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ba2142d-fbcd-4028-b6bf-473bd36f4f1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be3abf5c-0193-4e72-a4cd-638c2a400dad",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "292c08c0-f3ed-4bf3-b40c-0df59ae25d4c"
                    }
                  }
                ]
              },
              {
                "id": "15a2ea75-33ec-4cf4-a54d-84b538b1a7cb",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e2b9c72-2a0d-4e49-b4fd-a4c61c7e5a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6ec2118-4aef-4d39-9c88-f7997b49a969"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "404a61c8-7c64-4201-ab68-87873ea5bd03",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "e24b0766-d9db-4ad7-902f-529150bd984c"
                    }
                  }
                ]
              },
              {
                "id": "a2e40232-f3f1-4c3f-af96-ad36472b67bc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93763e78-1396-4e83-a886-6793ac8b73bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f9027ff-aedb-4e36-ad91-0881ead26933"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54feebed-bdee-490f-abc5-f66970ade25b",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8f4c4c6d-6b83-4aed-b200-dc60eb7ccaa5"
                    }
                  }
                ]
              },
              {
                "id": "4a5c23ec-5190-41ad-b59c-ef965ae37278",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86fb8de7-9455-4690-95b6-525f44a8eef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fbc495c-08ed-4228-bb58-95b89edddc6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c624ac9-b08e-40ba-b6c5-f9284872e986",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f16d5714-947f-4b40-8e0e-a61da94f83b1"
                    }
                  }
                ]
              },
              {
                "id": "1876e4e8-d476-4ec5-adea-df0aebb2657e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30298bd1-f13d-48b9-9a59-567e6c8f952c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27ad457e-8cc5-4156-82d5-b312c04019b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd60a189-87b0-4be0-8929-5aa481c8a44b",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8a6bd0b9-352f-420a-8a32-fe9d35b28e8a"
                    }
                  }
                ]
              },
              {
                "id": "6f735793-9b77-4a4e-8dca-d13aab1e1fae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15ddd7c-b104-4850-8206-d1cb64928745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9668a0dc-f90b-4221-a98c-3e4437929a61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad5f33a9-abec-46ca-a115-bda9cef82bb7",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "42277d22-c9f0-4669-b4da-3a54d910a005"
                    }
                  }
                ]
              },
              {
                "id": "730e5bb5-4a83-4be8-9231-44117ee82f84",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee029310-deb0-469a-83c0-3964b6bc4cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bcf918a-2a29-48f9-a595-7e116f106cae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dedf2964-3f56-4e39-a240-78bb78bbcbd9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a5145cd7-f8a4-4747-a9f7-fc385dc19b74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec1ae8bb-0004-47a0-8d83-e2d485d37c24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1edf067-d99f-420c-a1d0-d248d143972e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e140895-7208-4320-81a5-bc005dfe1c91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b13a2c0-6f24-44c2-a2a6-eda0e44dce0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b3fb6ca-7f85-4cc1-af98-f0aad6ae6c22",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "fd2e76d8-cd2b-47b0-ae10-7bcb7d7554d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d024159-61bc-422d-af92-1ede7d76e6fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2eba105-664e-4571-85a4-392c115a8094"
            }
          }
        ]
      },
      {
        "id": "e38b38b1-2ec2-401c-92c8-ccb3c8be0b94",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2d1993ca-7aae-4ff1-87cc-b40aca177c0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "270bf902-bcdc-4e09-9fc8-5dee603a0098",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "849b2dca-309d-4dd7-80ab-58f278d801c0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c930fb3c-3aab-4208-b0f7-29b8e440533a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef51624c-2521-48cc-8b12-88afe68f2dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bb0579-6c67-40ba-9c7a-c70eedfb223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7126b7bd-8d81-43c9-be45-6a1c53023117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4acdb8-f159-41d5-b797-273ab1a521f5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee5deaa-a7ce-42b1-bb47-e31c5987677d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "2d7e0662-27b4-4590-95d8-ef826f285b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde527ba-c792-41e3-8043-02af0b5a4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55acc34a-fe8b-406f-b853-0ae812999ff4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc753a08-b88d-4bf6-b31b-7abf50e8a276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626d557d-4527-4615-8219-da891579032e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f56b5386-9c38-49c2-9f21-0a90330abc42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02ca63c7-9d03-4e4d-bc0b-b9aeb4922ce7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6757d315-ce03-4a26-91ea-befe17adf335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "d1929ef3-714a-41d9-945a-ed7598564f5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56443bb2-c02d-4b5f-a33c-e1777518d6e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5910bd2c-1949-4a62-b6af-5841ef2ca098"
            }
          }
        ]
      },
      {
        "id": "b5d940e4-4e67-4de2-b097-d5777ddf0edf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4dc4a603-17b6-4986-a877-0295300cd8f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5a1b048-2701-479f-91a5-52715eb35942",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ff768f4-f67c-44f5-832d-e49fcfb3af10",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f7f96e-1953-45bf-ac6c-a1a173f16ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66c382d-61b0-4813-9585-c27bd21ea1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab40bb-dc8b-419e-b187-a6d47fc7a3a8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5993be-2402-47ed-adc1-e2f818c03650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96971fde-c3d9-4406-9677-28a45ce9a9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9e7428-3233-43fb-866b-ec13bd9ead80",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db454c99-d107-46f3-8cb1-c1772455d854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc30e9f4-95fd-4757-add9-97adf58a7c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202629db-f240-4d48-b2fa-95c9d7512900",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d994175-d461-4edd-a1bd-ad151ce4e432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7613cd1-d76d-4a16-8fc8-6f7d62efd337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c821f-8cac-4e0d-a737-d3f5c7337c01",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e13746-46fe-4590-b9e4-8efe285536e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d04073e-8e8f-4556-96e1-5fba3ea11650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09615175-fee6-4bfc-9e08-b304ca3d1a05",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f23835-a90e-4d24-8382-a17ca148096c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fb75fa-a125-42bc-a79c-9e3d847074fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1648ca5-ad5d-4126-a1c0-296a88fb9f36",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f180ed-255f-4bcf-b5d4-52388407e97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645da45e-8838-4891-8191-429e8d8673e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11f4886-7249-4214-8778-5545f49f8d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9487c6eb-3646-49e1-94dc-0961ef430f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca383d8a-23da-453c-ab04-26fb891d2703",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e30d95-2e0a-4a6e-b0fa-8fc534f44df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2f7856-7132-4a33-a196-5b8d45b09240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7fd5d4-9f1a-49bb-98d6-0dccceefd26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a14965-716c-4d64-8227-334fec93b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3837e90b-c0ee-4036-a7ce-c7eacb925527",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8db715-666c-4b8c-8d8b-b3c42e96934d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a683dae4-e785-4898-bef6-23e5829ef9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b2ab23-02ef-40b9-ad10-d86d280c0ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77efbfaf-b4a2-4108-9e98-2059908a7152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e39e6-0347-4ab1-b64f-20ff8e26298a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea8dc22-fff7-4e27-8c33-9183aab0d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18eb643-cf6d-40df-8a41-793eb25578e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daa6f20-5608-4f92-90e0-cffd350a304a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63976e2-0cbf-4c6c-873c-0a92031e7a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91e57c9-aaf2-4c04-8b6e-95b630dd9d9a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1badf62-7283-455a-8f84-97a6707c1871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a696dc-cbab-4666-bcf2-b412bb7c6b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e9b993-cc22-4d44-a7df-76c40ae8298f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfa498b-28d5-4e64-8254-fbcf44134f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46ca91-e936-4452-a1bd-6ec5bbe6d766",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d5d33e-c31c-47e2-9c5b-e24ac468514e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a775c937-0654-4750-9023-f34e3ac50465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af648e32-9b97-40b6-834a-e351ee255fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47f5a49-c3fd-415a-9375-276408db728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee1294-d876-431f-a3a0-4eef85e31618",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4613146a-0784-47c4-be47-92b7e847823d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bdf725-d45d-4dee-80ea-c82ddf7c519b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f0763d-d287-4b7f-a3e0-63db139e4852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a814b238-de83-453c-891c-62e91f65bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc52cb0-a103-418f-be2f-5ce2f7db9acb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8ea895-7c37-4366-b82b-9f5b3b0b778b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa43d722-5236-4902-aef3-dbb8ff49724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202417c3-d9e6-44d3-adb9-7f8c4787fc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3aa9aca-f007-4b14-a543-24cf632428f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1b63ad-639b-46d9-b50f-11c14d08153d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d0d312-45e4-4c92-940d-43b4940b6efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ae2805-7a39-43b0-8edc-371cb307c326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f420a36-5650-47bf-a5f2-1f36b6b46553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4735cf36-d4c8-4e58-a371-1088f30544a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28bdb36-0046-4d93-b6f3-1de2c4bc0faf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5a63e4-0747-41fb-a33d-0238a0e7bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12c644c-c024-4880-a6b0-5c45097a7daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e154a6-2a0f-44fe-b73f-cff675ec1e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b28f606-cf18-4267-a0d0-c309db1defb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb9315-76f8-4c07-ba96-1288ead9f932",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6454368e-6f84-466e-b7f2-03b6d9b0265e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812439e0-1806-46a6-ad99-6a314b3a2153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56086dd0-a56c-4832-bb77-cb9d2d587a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dcdcf7-55b1-4e3c-aa25-0f321644f848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3f79e5-a77b-4861-9ede-d127e220968b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5e7c2-7150-4e1c-b96b-1e5c4a6bd783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da18310d-b6b9-4353-b288-5d857d54c619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace5f421-beb5-4b95-82f9-ecdc3de49f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5839f0-304c-4c13-9b48-72937cf16993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adaeeea-9478-4caf-942b-58e983ed348c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594af52d-6982-448b-b691-828ed5e7ac40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0261fd6f-ffb2-4224-ad8c-692dc0ce63ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb12c13-b803-4763-a959-1cbb587cbea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b49f98-75c9-4703-bd09-7355752300e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7a85f6-ff8d-4d69-a34a-f13f62ed8f9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7955731-f92b-43de-892f-2d0e667b5f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c921b9c-d83f-4a80-9fd1-148d7b6b1aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5dc0c-065d-4621-b43b-d08e99efa803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc1b149-0fdd-4248-b80b-39350835aecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648a72f-adb0-42ab-8890-7a0264749fdf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8149a01-a292-4c49-8d74-94fac28af115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c397e9-0b00-4445-a17b-e79a02b926ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc693d8e-1808-4e92-aabf-d8e335ffe713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1224318c-5bd5-41f1-978b-be935bf35448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a5735a-9858-4f14-8f7c-2e4a809120dd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edfb3df-6e98-4055-82d6-b73f8507e9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d12b9b4-bdf1-492d-b4f0-8f0112b0c603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442ad899-1d7a-462c-9609-5e2706d10b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a84041-31c5-4b86-8aa9-5fcfd719daa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61edaa5f-0e78-44b3-8603-532a5b5ff71c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403daa80-0bc4-4160-a95a-f1f971be2816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663fc694-155e-414d-be36-ef3635b1d409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54360df-c0aa-4384-9204-6c0f8fcf8deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66ede1b-e100-4e9b-8bf4-560fcfa4b180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a355c-d156-4fbe-b4d4-b8534f60d5ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd8d8d-c897-4159-8e08-93bda43210df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf06c15-1e41-49a7-9b15-8fe080da9913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69e6a46-1fb0-4f88-9f17-fbbd9c43b400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f917b4ec-15d4-4565-b96c-e930d83d7216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b77d6b7-4b25-4fc9-8d31-1d9c03a55409",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a7c6c9-9484-46fb-818a-4cac2bb1a195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3351a816-1c04-4d53-a1bb-899ab9a27d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eaaa53-c91c-48b0-9850-df736171f74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9206443-18e1-4e57-96f0-6b4161b3c1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6283b4ec-14e6-4e0d-9898-2166a8cc9abc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4582e0b4-ca70-45f8-a5e7-f4966e566073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81be9159-f9f9-4a71-b8d3-4d8b220e84dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32347145-1e55-4881-8c67-cdc20f0ed3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe4b586-0825-477e-ab2b-1d7c35330ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb396da-d499-4b78-950d-1e3e46f59a98",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc40d22-e735-4ea6-9097-210d951133dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75c8b40-7ebf-4589-8bcd-1f225424c8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11375350-4bcb-4b1b-b044-be5720760b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662fa823-d7df-42d4-ba9e-a794f8af2257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f2ac64-2f6e-42e5-8b82-7b2148cf3756",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd7066b-86e4-417b-b283-09a8552893de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c63d8d-158a-4626-a181-be2d228b2eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5a91ad-7706-401c-8dce-d3faf8bedc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163c421e-b7a7-4a0d-a2f0-4fd72fd14c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df387af0-e682-4d3d-a6cb-a8d3b94117fd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b33e1bf-bfd4-498b-9e85-607e2547a128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9c1bb4-b2f5-4c6f-8f3a-5922ffedd637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61249ce-5ae0-4d3a-9b33-bdd298232447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e42972-435c-4b07-99e5-d2c3f2db895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f340e8eb-7b89-4e64-a234-8fc0d515ae69",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec4fc08-551a-43a0-8c20-769845f60fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169f629e-a9d5-4b81-bba5-229a7e134971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d77d8f-1898-4de1-b8ce-2e51e592a161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e746e57b-d4b2-431a-a8a3-6aa3e073af30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114db3cb-ef8d-4a34-8992-989ce69a0c6e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3a3bde-fadb-49c5-a1c5-62c3ab731bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3a9107-14c6-48ef-af48-0dbf0b202818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e42255a-c971-432b-85d5-a8dbef5a01f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e852cb03-7c85-49d0-87c5-879aa887961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e17fbb8-c31e-43c5-ad1c-7bb2c6111560",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694d8da0-bff0-4ecf-85d5-0312c6ad140c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd0a89f-3804-41ae-b261-8356aeb4fe08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aaaa6e-50ad-4b92-a061-a3ec5404db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99abe599-1bb8-4f3b-8621-d24808bdb9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62de86f-ca9d-4ec1-ab61-512587a6c6af",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a40985-6011-4b71-a351-6d1179ad27b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76affd5-f25f-4458-ac88-a1cdf21691f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef743fe-af57-4446-9875-48b0189302bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb035bf-d80c-4492-a554-5171fb36e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c995851-09d2-4b3b-8c55-ceb23b26e380",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681d27e-76d9-460d-9ec5-b71c036ed061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1a12eb-8229-4358-8d39-78fc6538f54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c0592e-8254-4171-a7dd-d0db14ec5c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19076ce2-a2aa-4b8a-b86c-6624f3d2ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7201923-0d9c-4dd7-8271-e23f6044665a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8656ae-b829-4b20-bafc-eb7944956e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d9370c-858c-477d-ba39-c2fbf7c1f1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a9a53d-5b12-40d1-9ede-88c6759741a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cad8086-df78-4e72-86f9-873bca52ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da991360-3174-4e4d-8849-522d2910d298",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff60ba0-3caa-4d20-8d65-c48649a57252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1acb5a-a9bf-452f-9cb1-9fe2769da37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dc6226-c998-42d3-ac15-b0f4be4f54fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb05c8a-857e-4745-9def-f0cc9a7cac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df08b5-d886-4db7-a661-95bac2cafbf7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41713913-1d71-4332-9f47-6e222c5cc22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47495fb1-79a1-4eba-9cb0-ed7ce0c3cf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed275d3-61ce-45e8-aec8-1ffa25b0f15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e5d566-88ce-46ee-9cb1-69b395daedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccca5e2-0470-4047-ab95-0749897f40b1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bc8f3e-91a7-4a05-b551-5e8cb4cef14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a5adb0-415f-490f-a924-9c089774f713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539973dd-8b5b-4f90-b70b-b21e704e4d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc47c82-fc14-4fb5-af6c-49d0ff82cd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acedd12-bc62-447f-957b-3ccec0382a9c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a0f719-21d4-4a0f-ad1c-3fdac782595d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed696dbb-cdbb-42d0-b351-f9a0cce1ce51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8be02-a871-4c7e-ab96-76a8f80ead24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7627f297-6177-4663-a8d9-41d869feaf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7c0483-9f32-4625-863e-6ee44c438680",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2226f509-9c29-4c1f-a23d-af4c748aec4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab80cff1-f205-4ec2-881a-f4855495e880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc96abe-8cc3-42f4-b373-2032f85b3e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b891df47-303c-4238-b61b-febdd215d8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbf3bd5-e4c8-48d9-affe-768c93b3761e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85050d3b-81ed-4eca-8ea4-ba40ea021651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49028df0-d4ce-4ed5-8ad8-3b25da054f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75619932-3a70-4dc8-a55c-00e3242baf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240afac9-28c3-4e15-879b-47cbf1c2e37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a666c5f-ecad-4608-91a3-6e0a91aa480e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387ae73c-bdf7-4d11-8703-474959b63c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505c1da8-dab2-4a0d-afd5-f65b1440568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d26c218-198e-41d2-ac5c-58778d176acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e58360b-f6f0-4aa8-b6d9-e718d1f198e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b14c62-22bf-4651-9276-1efcc35568a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe794eb6-fd31-47ec-8756-e2594b652a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1197db1f-d7c1-4c81-a97b-3c60513f9d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d2acda-2563-47e9-a077-dde35d53d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fe20e3-07b2-408e-ad5c-7edb58841a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46b4fdf-c7c4-412f-99e6-263441c9fb88",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4acbd28-20ac-4834-9d78-ecb7e43ff3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe3df4a-6a6e-4dce-90a3-462ecbfc4ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f97b0a-4781-42a2-a476-8714fe52c3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b07bdc7-d33f-4661-84b9-c2b2ffe96aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008d164f-7bae-48a0-ac1a-bf4c0bd49419",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba074ae9-87c4-43ce-a500-325386cbf2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f316d8a1-fb87-4c95-ab5a-a0ca2992d823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9722f145-fd23-49a9-bfb6-8947eb982fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c5bfe1-66e7-4af7-a22b-9c29154938d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b4d111-691b-4d61-878b-327eae26768e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9f7e13-24df-474e-96e7-f91185c63952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303c85b3-04ea-4592-9268-09780e3389f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232d6883-2317-4af9-bec4-19295b61688f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16eaa44-23db-492d-917b-a3f9c6e452fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b53eee3-6a8f-41e2-a90e-0dfd41363eb9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e469ca-91ad-470b-90df-a1a1fc600e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1991874-94ba-42e1-b0cc-01d8f41f35d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971979f2-90e7-4d3e-89e6-d925021dac09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d369b0-16cf-4425-a470-d638476af54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaa50de-3ccd-4d5a-abaa-2f08b3d95cba",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ceb1e4-ee06-43c9-8f8b-8b84f9f161f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73db8ea2-e9eb-43ed-944c-9d6b61a4b2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739efa38-243b-4b45-a531-12f1d9b4a6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac273a47-7d4f-40ed-b9a2-0abe3e5162fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc86d4cb-33d6-4e67-8ab4-445e8b4addd9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d62d32-5c7d-4915-91d1-65534b3e5447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05f1cef-99b2-4fa9-ad12-65ac42416ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98881eb7-e628-4af0-9b31-6f04b95667e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3019a610-99b1-4328-a608-a5cb48676d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081c215a-4401-47e4-aca8-9ce7b7734007",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e79a2-c782-46eb-8937-471a4275a7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b92111-756b-4e9a-844e-76bd91f4710c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f2b5f1-b90d-43f8-8918-4f493c34b036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9abd4f-a729-4e54-841e-c339d869a31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85de667f-d146-44b4-8e1e-90649ff0f2dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870fbdb-8cc2-4156-86d5-38fd0e4eca05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0df978-b4a8-4767-94aa-f86c899099c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9ab493-6a2e-4c6d-9aa2-729a5a79be6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86392d2d-4cb0-4cfa-9834-52c9a90e7005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7050fb8-0708-43e0-94d3-904f16d80a94",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad000e3-ad04-4943-a28d-2b803f72d183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8676b8e0-0c20-4c40-8fe8-36520c235552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0d2b35-650e-4e26-91b4-530f1ca7e631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523964f1-4cc9-490c-a31a-a5e078a84bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1223202-6de8-4fd5-bde2-90314503e9a7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f640324b-d39a-4471-a752-90e8163501f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0fdf11-e584-41f2-a0c4-6be358954637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f7242-0a2d-4b88-8afc-06e4530385fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827fd1f6-fbf7-4e26-88fe-c753abd05733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8126bab9-0a16-47c5-99ab-5cf3bd3052a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c85372-d1ff-48fd-8019-d0a6a1ba75ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ce4a06-b3f2-4b82-9dd7-c1496d1c0e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b77e8-c7cf-4dc7-b982-3574fc24fca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb03da9d-4c6a-4bf7-baac-77028de36f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e740c4ea-1803-4c93-9758-01fbb5c2edd8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3143585e-4006-405c-ac98-99d7ffc6b8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0a4bf0-d23f-465e-998f-162c97583f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05619ca1-ca24-4d9e-af4b-fa0c2e0ba2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3714cc43-cf83-4a86-8500-fda50d518428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8696074f-9da1-44d8-85b6-01454d0fb19e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e95b96-0826-4673-85ef-6b6398d58457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216ebe11-ad20-48de-aa84-e2ef95cfce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f9cb5-140c-4197-a681-2d318e3fc0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7abebb-654a-41d4-91f5-ac4796fc8d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fc5fe2-b7e3-4c79-a2f3-2ee7d0e9592f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7329325c-b0a0-4818-8324-f927c083b714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ac6c1c-adf9-44d2-b173-3057a8276e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f25d70-bf29-4f96-bcde-11669f15a8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b784f3-d1c6-4da7-9323-da44c0fe2062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f8da4-5576-4080-89c2-525fa3f18e08",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843b87c-b012-471e-aba4-2ccadde4fe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37b7fad-a98e-4dfd-98ce-01beade8e827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87821c22-0fad-4d7b-aa44-cba4b94562a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6a4941-40a5-4e1c-93f9-ebc4b6ac19a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028131e3-51a7-41fc-9ae1-ddb0231a33c6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b518f48e-9501-41df-b17c-cd1fe0dd3446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86366bc7-56db-4811-b7bf-0e6a43f999a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972e46a-2050-4665-8560-399350ddc902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1326f76-80fb-448f-8f70-6426ae7fe32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a212ec-f43e-46d3-8e40-8859016a1082",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274e959a-557f-4f9d-a1e4-a6435f1c4ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e8284e-ba3b-4c62-b3e1-739a3205724f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c4024b-0c2c-4d53-a9ca-e596654197b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e35bcd-aa61-47a7-9aab-ba5a0b83d4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313f485-2601-45a9-868b-a6e8685d0f4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d63cfc0-e2e2-4e67-afa1-5745770e02f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5a98a1-9b77-4c3e-b997-e9256c835089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d4b66e-30af-4fa0-9599-857dc874fc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81adb518-f2ab-457c-ae33-34659a53d4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95d9cfb-7507-47ab-b7fa-31a08bddefdf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394f3f79-2535-4647-87b2-5edf2350fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d254ce-be6a-4ad7-9f9a-99f175aa5999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb77f9e4-e607-431f-a5a7-d5fe49df75bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74f84a2-cdaf-4277-9c66-a0212521cab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c7e3bf-59ed-45a2-a711-62d9b04b9593",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2924804-31bb-45cf-a6f1-9c31a7a79e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10e0f0cc-4a14-469a-afa6-5a810f6ee82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3aeab1-e40c-4c69-a2ac-27c8dc1304f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcbf3b0-ea76-4846-b70e-200bb930a583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f2bfd2-822b-44c0-a0af-593216e1424e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44fc47d-85b8-46d1-8767-5fccdd540291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53cda253-d8e5-4344-be70-373e0d0858b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680e25e-c474-4fa1-98ac-192648d8db36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b43565b-e753-406b-abda-3b1a7b93b177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8985bf5a-2640-4314-b404-6f0afe41ddac",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da3662f-6b8f-44d8-bee7-d5d51d7d42c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f40acc-ee4b-4f28-8482-24547a296b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59aa3d0-a5fb-4620-b6a9-b183fd536d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e08f9f-66c9-4a73-9611-153051623a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c774a0-f369-4c11-8f7b-b1e6907f8ba4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb3b00a-a04a-4a28-9528-04ecbfbdff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab40be3-20eb-429e-a2e4-7c9dc3c78dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c14637-6143-4945-8f75-420e88facf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b71659-be54-4870-b8ec-6026874b1c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032fea9b-bb2d-4da1-8bc5-bc6771a5682c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e64e9f-869b-4b36-bad9-70d83cb44936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71136285-d78f-4625-bcd4-6c8503be29c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c59e3e2-a664-48c5-a34b-49c1aa8ce9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a0daa9-4d09-4326-beb8-79c5a1181b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50037766-5180-415e-9998-5d8bd69cde5c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31096e39-3521-4506-8496-a0bcc1530203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7add64e-f733-4a05-b926-b4e0ad74f79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be2c4e5-efe4-4ab6-9749-a8d5ae1d459b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eccb8f0-a4e5-427d-8480-46018b0e0cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e5a38b-a1b3-407c-a2f5-ac284d8213b8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d675a7cd-b7a5-4368-920e-0edef95b42ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76611094-1796-4b06-94cc-9f2e6a04e2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de316cdd-eac8-4719-9c25-6a7e302a142f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ae10aa-1fb9-4bad-b846-f7fc683d52cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7b2e5b-50cb-43f6-9c53-65ea3f3aaf43",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf4c9b2-c427-455a-97e6-59e3aaee01ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5905eba-a813-478f-8634-a14aaeb6541e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2a393d-17ce-4e71-b120-83ffabdb8b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66905444-3d60-4675-b1e1-e7a5576631af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08be9489-26ed-4e9a-838e-281970b5cf14",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011f705a-7813-4825-af64-e20e35217bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b807213c-e90e-4934-864e-9ebcdec2b4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6904657b-4e5a-4735-bf12-8dcc0b6860d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbe30e7-0bfb-4c26-a348-9a5e31d7dbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28347ee5-7e84-4ae4-a92f-310cd061f254",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c09cd4a-43b1-4bdd-af5d-bfa1de8d88ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6319124e-82c1-4f4b-be43-ee6709166c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2afc9-aece-4c64-a92e-3574040e3614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5f4e7b-e0ee-457c-b0fa-b71044a3da5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ce2cf9-b624-485f-b980-261a91f4333f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba636e7-cf13-4c81-987a-baee8418cec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b59446b-1f2e-4716-912a-49249dc93aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe10d1c9-3892-4de9-a950-346c3c9c8f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dac7dc3-4c0d-4f89-a7bc-beaf840982d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b36190-4db7-41cf-a562-63a07e96d06f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0426fd-b085-432a-9016-81ef22c3af7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d91ee6-26c9-4641-94e8-9780c4c87b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb71a97e-f001-4d11-a964-fc07ffab81f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313c1733-f290-4908-b22e-bcd5c2ecf4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70858cba-b3d4-497a-b3f3-60a496ddc500",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001909c2-9dc2-42fa-b149-79b1d44ba47f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8b2d66-c234-46b7-baa6-a4a68fac6191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09839f47-c361-4803-88da-1854354e38cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c314ce2-c03c-4850-bab5-e7e840bf8793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f409b7-ec91-48e8-aa0a-b9c0c83ee48c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c61ab25-99c1-491e-9545-bcb51606330f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75102762-a8f0-470a-b6e9-bb872b870fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012d1dad-efda-4e93-88cc-dd82e667648f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c71a0e-a952-4263-be49-9dda74843e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0e374b-27d3-4b57-9398-fc8e34454b14",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f570e8-11e7-4bc2-aced-7bc529181ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79a5e1f-6b9b-4531-ac05-642b495a486e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7916b8d-5ba7-4299-a98b-2c634f5844d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eca8a9-c35a-4ab4-a983-b4b0c7dd79df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0a76d7-6d65-4ea3-8666-bdf587e47cbe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b88f2bd-a65f-4d23-ad83-de86107fcbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b6beed-0c6a-4c31-8104-6f658e7517a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810b7e76-abb5-4bda-8787-06572a98bf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853b7951-6e3f-4b0a-9121-ec6df8f980b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763f2b9c-b910-420b-b87c-3607947b50ea",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01646ea-6129-4d50-ad16-60c34eccb8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3acf322-c87a-401c-87f3-bc07abcae023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09209740-b2f1-4829-89c2-a088c10f4613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb92438-702e-4d75-b6fd-0a34bb80f330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8fe8c6-b62d-41de-8eaa-5cdb32607a8d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2548f8df-3eda-428b-b80c-fa00a3f3f9fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d886f073-ee53-451e-bfb6-8203de7997ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e16f46-63cc-41b5-89a0-202b409af8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527a2e09-3309-45db-8b64-bf980030ad96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c97a5c8-0d4d-4d71-8bc0-685d0ef8c85c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448f8b4e-d7c1-46e9-8b56-4e1e41175c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a31a5d0a-6468-4949-be71-f1b1e5d5bd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2dff17-4b51-45d0-9657-004184fdc3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b85a6c-f986-46db-afdd-a7ac96b9371a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebdef4f-f743-4a8b-bf18-6173e94af8ee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b048fd1-b68d-4ca1-9ce0-a4454bf2898b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75c7239-f850-4eb8-8904-a0bdca9d5ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4fdfe6-9435-4420-b913-44449d740f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51adea3b-a841-4fd1-9f97-6e389b4244c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2885f25c-5e48-4ddb-90f8-c1b4552163b0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e31935-ef04-43e9-94bf-f7c978ec5564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fe0f99-7144-4c61-a0db-602aa7d2c53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5100c735-c9c7-48f1-b10c-989df03d31f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996cb082-076f-4237-a7be-2f3c4921c6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b6bee-f54a-4e6a-80a6-96029c0a16f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984093e4-9515-4792-909b-4fea83886fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51773095-be3c-4968-a388-28f0ec8eae17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0874ce8-81e0-4421-be5e-80c3606a07f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c1a5fd-881e-40b9-86a7-228665ddbb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00936bf3-f9d6-4fda-b135-283b297e6a7e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9bfcb8-d43e-4d27-aa9b-6bd06d70c89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc430a1e-b2ba-44e8-91a7-17c9603e192f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0961c3c4-f241-4a22-8977-2562cbe22f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021a8758-9ab4-4d71-89a0-20578436c857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15871b37-eb12-49e5-8a20-44e207701864",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a726af2-bc13-44fd-a615-3c145fec6b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8722185d-c765-4862-8a8c-f824574172c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72c27f2-1f86-4d68-92af-d8c8e0c8c8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d43e96-bb4d-42c1-bb01-257c0ce8e24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f56d7c2-89d9-4e04-bde5-49cd8055ee28",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc221f7-9c35-4039-aa2b-af8571a2a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea355cf4-6e97-4cd8-abff-e7fc743ce90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e989fc8-bb4e-4c6e-b4d0-ff7ce7840335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1b126f-a785-43a9-baa1-881e02ea84e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18196834-e1dd-4b8b-a848-f6e66f2f90c2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836ebd38-9bc1-4009-b818-b7bc09dbb567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9db11c-7e7f-4600-a22a-dbc0c9c9e631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465f2440-6eb5-4fc4-b6e4-a2769c649da1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e734d7c-da2e-4b85-8730-fd92c3ba7407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84df83-7433-4326-b41f-61abe3a07c8d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8cae35-3ca6-494d-9454-469216083299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12846dd8-5889-4714-ad89-28a65f706617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5207a2-f264-42d7-84f7-b48f59ab7b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8184a0-d0af-4fdd-9c5c-3c9cc13ddcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c78b31-9cdd-4895-a211-d1be456460af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7b9e19-4a81-403f-96af-396194180724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32560fc-82f7-459a-b250-01a2377c3778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7993ddcd-15c4-4502-87e2-aa7e74c6b073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91927ce-dc58-4ea9-b016-6eead82ddc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb3c6ac-e1cc-48bf-ac0a-49f13104130a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b28b2b4-506f-4426-a866-9a847c30c2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d20361-1b31-40ed-977e-4cc9ce987470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356f8326-2d5e-49a1-ae1a-1fea168a7b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12be518d-1445-49e2-b493-f2c08aca141d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44439f1f-60a5-44a7-b8a6-41bbd2abfffa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08395717-2de6-4137-b4fe-e1eb6fabbf67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5367b079-2f92-42f3-8aac-c18af85201c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bfbfdd-fdf1-4325-97a5-7bcf8e622830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9999460-7fce-4466-b158-1651f0c52f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3842756b-8d28-44ca-a3af-84a08caabdc7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4f24ca-bcba-4f96-833e-3f71202970b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf13fde-191e-4ee7-abb9-e072c14cb559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca995ad1-fac5-4ad8-9a50-7c654b70a266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f72da5-3705-4d35-b24a-d90f5be2d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadc2acb-47aa-440f-9f50-e908fe80d9f0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24971da0-1768-4241-ab49-3110a43d2ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf22a41-574b-4883-9094-e7a08643bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d7533d-81ef-42c9-88dc-f20b366d9a29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4bafe7-0d1d-4ddc-99bc-73219bf1b040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e090940-09a6-4c5e-b65e-6a38ecc592a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafe0837-0395-4eca-bbec-7bffb3eb409a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b31bcc2-7420-4539-93ad-fa780d32dab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1272be39-04fd-4a60-b10b-9aa0af915599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cdb91b-e0ad-4a3f-883f-8be97a58e90e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c19a2da-b772-47eb-ba67-66e5414eceb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31de5ad-d5be-4557-ad9a-53d210d8d32f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0deefe0-2998-4048-af67-9dbed5a72cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cf23a49-5aac-442d-878c-7f95c3dbc98e"
                    }
                  }
                ]
              },
              {
                "id": "63385caf-7c65-4717-99de-b7fb88e374fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a86597a1-22a7-454d-a408-250d7103f82a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5861459a-783e-406b-8e91-51a3b2228e29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d9a47aa-44b8-447a-b8ca-b7dd63139855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e35a6a-80d3-40f9-8c30-71cbbe820ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0fbec8b-b386-49c0-a4ac-0c5f3cce1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51999764-c86d-40cf-8811-a1e10eb0cbae",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b09aeff-1a36-4e4f-88f9-63a5cb58a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3024406b-25dc-41aa-961e-364013217310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28fc316-e231-4cf0-a040-3437f155f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09b48cb0-d56a-4ed7-a4d7-8f657c66f1c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b4ff7ed-4a46-436e-91d5-ae8ad6b9828c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40020537-a232-4bd5-945f-7424501f9ba3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4f429c-abb6-4faa-a728-c45d2f086578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "188e9f19-7059-4de8-8e40-dbc2a183c1a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1679bac6-aad7-410e-9e40-d943687d2ecc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96d496b9-b407-49f0-8d41-c10add85359b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e0643f4-fbcd-4148-915c-5663062d54ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "597df6be-4dba-4bfd-a9b8-0c7198c138b4"
            }
          }
        ]
      },
      {
        "id": "f7d68e55-4a69-4d47-8c0b-3e5253c9eb7a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a8720375-dbd3-4496-a9fe-38ea76c12301",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0382b733-2486-4c15-a611-def2a9f14521",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d938de92-0693-41c2-9d74-140e4809d29c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7889b8-61b2-45c5-a6ad-6967b519ea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb14c517-a153-4808-aaa2-d44e3626fa71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cb7c12-a3da-42d8-91c2-df55729fd30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76cdbae9-5806-458e-83d1-3bfbd43b3ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40edba3-b0df-419b-87cf-8aea693e83d7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c33b96d-7470-4e8b-ad7d-1b8a88aaa42d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c4649de7-b882-4e64-9a1d-aa6c25b6fe02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6204e6-8fd6-4688-88ac-6f608c6288ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8dc6310-333e-428e-bc4c-6bfb25b2d1c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "788cac33-6f2e-42c3-8862-16ad6c33da0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b5dac09-3605-44a7-bef8-6808a5f38fbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9319ceb-5e0f-4818-8f23-67ee402dce54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba1ec347-7855-4e23-b671-51f405a9c987"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a76be8b4-67cf-4f9d-9660-0b1a9e343d9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "8942b0f4-77d0-4190-b8ea-ae9e6fc8b9b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4321d5d-9ea4-4a0d-a344-581daedf72a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81162689-94ef-4fc8-a09a-6cff12ec9148"
            }
          }
        ]
      },
      {
        "id": "344b7bde-3e98-44f8-b468-bedf2d564bed",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f5abb36-3ad3-472a-84fa-74b87efd594f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04b66db7-e33d-4166-9560-b10f95df7119",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4bcaa05-f765-487e-92d6-bfd48b428f87",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaf16fd-d16a-40ac-aa9b-981ea024867e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50b41f1-12ca-43ec-b403-e576a31cdaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707a34bd-eba9-4928-86e8-c9b0f231abc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32f13f5e-af6e-4103-bdb7-ded32e405383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4371f0d7-f550-4ac6-bfaa-146db4c84363",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93b9d5d-0503-4850-bd1b-40607963cd54",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f03cc65f-a6bb-4f3a-914a-f8bdc9509c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38623e99-02d9-43cc-b697-8a49cb310e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "152fecb7-0283-414f-8cfd-1133869b3009"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca820185-4748-43f1-b447-bf07f0b7152d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbf54eaa-53dd-4c8a-9897-ca8cb1933151"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c95958e4-fb26-4c80-851f-f22974f5833e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dbb2c1b-30cc-4c7c-af1b-173d2b36ee8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8383b6e-8266-494c-83c4-bf03b93a7b14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "00716348-c6d2-413f-8eab-16092c31a367"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7caae11e-532f-4e96-a0b6-5b7cab454d03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77222bbf-7c03-438e-b04f-4912991b56d6"
            }
          }
        ]
      },
      {
        "id": "6506cf32-abdd-4cf7-83a2-b973182e3131",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ae19af0f-2f2d-4662-89f4-8178045fd483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "937310e0-7fda-4339-8b3c-c6152ad72a12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dd1edfd-b053-49fa-bb9b-3a21e6d675ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc61df8-711e-4604-a541-2b6040086198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ced856-2656-4db4-bb71-d944dad799a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67c2b34-8bb6-4635-a76b-3a776a6357b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade1d1e2-5e1d-4e7a-b4b9-f91508fa9a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0095be4b-46df-4ff8-ac32-87cd4a8755f2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79cd971-8edf-4991-8a33-392665fa9a2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "d0c83e0c-2c3c-48d6-b54e-5da0caa89df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db078529-d6e4-4aec-bc70-25fb85a9ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a795fc7-9412-4387-a8f8-a3814978baab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e192d7d-2afa-449e-9b01-d615835a5d38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59d9a5d5-155d-4d88-93f5-ebe87a25a2b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0920325f-815f-4d09-9c39-c8b10d6c7c8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17fbb0db-3883-4230-8500-c63a886a9604"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4232ba9-74ac-4298-8807-d66e052c7c6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "07be84a2-56d2-4367-b438-978122d4bd7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfb3dd02-00f5-4769-bbf3-7ebfe731eb29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b02fe320-b7d7-404a-b082-7edee699c5ef"
            }
          }
        ]
      },
      {
        "id": "d7ab94db-9f84-43f2-87ad-cdd24b10d0d6",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "30b22951-3224-4117-8c55-000950879b3a",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.64,
      "responseMin": 5,
      "responseMax": 654,
      "responseSd": 90.39187131595409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663980904006,
      "completed": 1663980921343
    },
    "executions": [
      {
        "id": "5bb043c0-7079-40ca-ac76-dff7fbb3d72a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "61eb2fa1-4fec-4a2a-a056-72e8abf21aad",
          "httpRequestId": "d7c2bf74-4a7e-4f1d-9c82-2a4df1a58e64"
        },
        "item": {
          "id": "5bb043c0-7079-40ca-ac76-dff7fbb3d72a",
          "name": "did_json"
        },
        "response": {
          "id": "e84f3f88-7ec9-495c-b07b-a032374ea3a6",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "9d445f35-e617-43cc-9151-ba57eae97799",
        "cursor": {
          "ref": "08c1ca6c-49d0-4953-98bc-c00b87de9687",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "765d473e-3de5-4f0a-8333-6fff19d59c56"
        },
        "item": {
          "id": "9d445f35-e617-43cc-9151-ba57eae97799",
          "name": "did:invalid"
        },
        "response": {
          "id": "170ece2f-246c-4a39-8228-7c5663d828a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d445f35-e617-43cc-9151-ba57eae97799",
        "cursor": {
          "ref": "08c1ca6c-49d0-4953-98bc-c00b87de9687",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "765d473e-3de5-4f0a-8333-6fff19d59c56"
        },
        "item": {
          "id": "9d445f35-e617-43cc-9151-ba57eae97799",
          "name": "did:invalid"
        },
        "response": {
          "id": "170ece2f-246c-4a39-8228-7c5663d828a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e1928-72a3-4975-b102-11e1b7753928",
        "cursor": {
          "ref": "7e83d9e2-aed5-4f05-bb89-a5d21820aa8e",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c69e9852-cfb1-4d9d-9122-e2a3eff5a28d"
        },
        "item": {
          "id": "246e1928-72a3-4975-b102-11e1b7753928",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "79e19468-b7e9-4514-ba0a-45694ee7e157",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc991ac-b1de-4187-a6dd-aa3b25dff061",
        "cursor": {
          "ref": "7c71b747-3197-4cfa-b52b-97f1f4d84c02",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1380c18d-1208-4d77-b9f9-581cde403f43"
        },
        "item": {
          "id": "2fc991ac-b1de-4187-a6dd-aa3b25dff061",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "78d60a2d-d4e0-4206-a87f-4242dff891a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a32149-8c52-4336-8c8c-49f3dc9147e8",
        "cursor": {
          "ref": "9a20b954-eefa-4bcd-b09e-e97af1e8a9ec",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4e21fb8d-68ae-41a5-9066-5bfeb1336d63"
        },
        "item": {
          "id": "60a32149-8c52-4336-8c8c-49f3dc9147e8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0046610e-7f1e-4a31-9a59-b21372ae511d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd77d19f-f418-45ca-8dce-c7dbc32a6b6f",
        "cursor": {
          "ref": "4fc5b09f-a8ee-4294-ace8-4f1a5d4bec49",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1aa541e8-aac3-4dd4-a856-2460e78c2f6a"
        },
        "item": {
          "id": "fd77d19f-f418-45ca-8dce-c7dbc32a6b6f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0e652a8c-407b-4e8b-bdb4-efed31aa911b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd77d19f-f418-45ca-8dce-c7dbc32a6b6f",
        "cursor": {
          "ref": "4fc5b09f-a8ee-4294-ace8-4f1a5d4bec49",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1aa541e8-aac3-4dd4-a856-2460e78c2f6a"
        },
        "item": {
          "id": "fd77d19f-f418-45ca-8dce-c7dbc32a6b6f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0e652a8c-407b-4e8b-bdb4-efed31aa911b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aab860c-c4f2-4016-944a-d3ee8c531d56",
        "cursor": {
          "ref": "c67b52cf-2cf9-4b4c-b674-7d9ddb8db5a4",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "56b1d6f7-7595-4816-817e-f26ff56436cf"
        },
        "item": {
          "id": "4aab860c-c4f2-4016-944a-d3ee8c531d56",
          "name": "identifiers"
        },
        "response": {
          "id": "89b7b6c5-1886-45df-ac56-3d14f364ebf8",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
        "cursor": {
          "ref": "f36e4e66-53e7-49fc-ae60-e073e5c29119",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76ca2dbc-23d7-4be8-b490-15a0c9c26496"
        },
        "item": {
          "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "02cb3e26-cc9f-4652-9611-ffa4bb8d1bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
        "cursor": {
          "ref": "f36e4e66-53e7-49fc-ae60-e073e5c29119",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76ca2dbc-23d7-4be8-b490-15a0c9c26496"
        },
        "item": {
          "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "02cb3e26-cc9f-4652-9611-ffa4bb8d1bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
        "cursor": {
          "ref": "f36e4e66-53e7-49fc-ae60-e073e5c29119",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76ca2dbc-23d7-4be8-b490-15a0c9c26496"
        },
        "item": {
          "id": "4a0729bd-36a7-472a-bb5e-f6f1b96721d5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "02cb3e26-cc9f-4652-9611-ffa4bb8d1bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22626f11-99b0-4cc0-a334-6c350331dc4e",
        "cursor": {
          "ref": "52bfc3fd-0e53-4ad8-a700-bb847ce07917",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa94ae3f-a776-4278-b8d3-8b64aaaa137b"
        },
        "item": {
          "id": "22626f11-99b0-4cc0-a334-6c350331dc4e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "43317225-6436-4bd4-830e-670ce4870719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22626f11-99b0-4cc0-a334-6c350331dc4e",
        "cursor": {
          "ref": "52bfc3fd-0e53-4ad8-a700-bb847ce07917",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa94ae3f-a776-4278-b8d3-8b64aaaa137b"
        },
        "item": {
          "id": "22626f11-99b0-4cc0-a334-6c350331dc4e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "43317225-6436-4bd4-830e-670ce4870719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e74465-9da4-4a35-9dd6-b268d17d3b64",
        "cursor": {
          "ref": "7ccf0b2f-5be0-437e-bfd8-25962b299f20",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "940e800d-95cb-49e4-b2c4-f1f4b18d744a"
        },
        "item": {
          "id": "a5e74465-9da4-4a35-9dd6-b268d17d3b64",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "0154dd34-ea08-4f70-94ae-36b2c5cc6905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e74465-9da4-4a35-9dd6-b268d17d3b64",
        "cursor": {
          "ref": "7ccf0b2f-5be0-437e-bfd8-25962b299f20",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "940e800d-95cb-49e4-b2c4-f1f4b18d744a"
        },
        "item": {
          "id": "a5e74465-9da4-4a35-9dd6-b268d17d3b64",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "0154dd34-ea08-4f70-94ae-36b2c5cc6905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0199af76-7cd5-4fec-b4c3-0603451d1c3d",
        "cursor": {
          "ref": "d560aefe-e1f5-4696-ac9b-951b81e6659a",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f29d4282-e00a-46bf-8d65-55981f060c4d"
        },
        "item": {
          "id": "0199af76-7cd5-4fec-b4c3-0603451d1c3d",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "badcff92-2d37-4b5e-ac2f-bca0b64e312e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0199af76-7cd5-4fec-b4c3-0603451d1c3d",
        "cursor": {
          "ref": "d560aefe-e1f5-4696-ac9b-951b81e6659a",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f29d4282-e00a-46bf-8d65-55981f060c4d"
        },
        "item": {
          "id": "0199af76-7cd5-4fec-b4c3-0603451d1c3d",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "badcff92-2d37-4b5e-ac2f-bca0b64e312e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5b2549-268a-489b-96a7-fae5f35a4523",
        "cursor": {
          "ref": "1468c0e2-aac2-4903-b9d1-d2bd346c6f34",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "add2633f-8cb8-4474-9206-1bdd64715bd5"
        },
        "item": {
          "id": "0e5b2549-268a-489b-96a7-fae5f35a4523",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "ef566df3-eb0b-41fa-8734-23c004af5966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5b2549-268a-489b-96a7-fae5f35a4523",
        "cursor": {
          "ref": "1468c0e2-aac2-4903-b9d1-d2bd346c6f34",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "add2633f-8cb8-4474-9206-1bdd64715bd5"
        },
        "item": {
          "id": "0e5b2549-268a-489b-96a7-fae5f35a4523",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "ef566df3-eb0b-41fa-8734-23c004af5966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0eaccf-df69-4503-a4a5-3ec7aa3bbf03",
        "cursor": {
          "ref": "393d25b2-f7be-4ab5-ade7-64b397b30092",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "11c7ed34-ab11-41ea-b1fc-a3a1e4bc0207"
        },
        "item": {
          "id": "db0eaccf-df69-4503-a4a5-3ec7aa3bbf03",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d703c4ce-4927-4b45-b3a6-688bbdabb707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0eaccf-df69-4503-a4a5-3ec7aa3bbf03",
        "cursor": {
          "ref": "393d25b2-f7be-4ab5-ade7-64b397b30092",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "11c7ed34-ab11-41ea-b1fc-a3a1e4bc0207"
        },
        "item": {
          "id": "db0eaccf-df69-4503-a4a5-3ec7aa3bbf03",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d703c4ce-4927-4b45-b3a6-688bbdabb707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a7126d-892c-4e3c-83b5-b2b2ded27ddd",
        "cursor": {
          "ref": "76265832-3e38-4107-b724-152ef4940b28",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b5a46c37-b478-4b81-886a-113a23558106"
        },
        "item": {
          "id": "47a7126d-892c-4e3c-83b5-b2b2ded27ddd",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "15be70c9-a80f-48b8-9991-1f8e1a34480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a7126d-892c-4e3c-83b5-b2b2ded27ddd",
        "cursor": {
          "ref": "76265832-3e38-4107-b724-152ef4940b28",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b5a46c37-b478-4b81-886a-113a23558106"
        },
        "item": {
          "id": "47a7126d-892c-4e3c-83b5-b2b2ded27ddd",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "15be70c9-a80f-48b8-9991-1f8e1a34480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c20b9d3-6791-48e4-8d38-af0dd7645fed",
        "cursor": {
          "ref": "8db6cd02-bbfa-4d0e-b775-46d6483b1001",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "97e798f6-b35a-4585-ad64-21f122f3adbc"
        },
        "item": {
          "id": "9c20b9d3-6791-48e4-8d38-af0dd7645fed",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "8009313b-1c1d-439f-a17b-f688c4616470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c20b9d3-6791-48e4-8d38-af0dd7645fed",
        "cursor": {
          "ref": "8db6cd02-bbfa-4d0e-b775-46d6483b1001",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "97e798f6-b35a-4585-ad64-21f122f3adbc"
        },
        "item": {
          "id": "9c20b9d3-6791-48e4-8d38-af0dd7645fed",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "8009313b-1c1d-439f-a17b-f688c4616470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d1d73-1d1a-4b12-9e2e-65d84e98881a",
        "cursor": {
          "ref": "e71431fd-ac7a-44f4-a3d5-16cd21387ac9",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "68fe11f1-2e7b-4e71-9cb2-6587760d4c46"
        },
        "item": {
          "id": "0d8d1d73-1d1a-4b12-9e2e-65d84e98881a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "882cc30f-4780-4bec-9f3a-a7ac43a103a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d1d73-1d1a-4b12-9e2e-65d84e98881a",
        "cursor": {
          "ref": "e71431fd-ac7a-44f4-a3d5-16cd21387ac9",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "68fe11f1-2e7b-4e71-9cb2-6587760d4c46"
        },
        "item": {
          "id": "0d8d1d73-1d1a-4b12-9e2e-65d84e98881a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "882cc30f-4780-4bec-9f3a-a7ac43a103a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b51c1ca-037e-41d3-a74c-79ba16cc0e57",
        "cursor": {
          "ref": "43de6f0f-3c24-4df2-ae5b-a09292ab140e",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8b8aec86-012d-41b3-afb3-3eb52df9d723"
        },
        "item": {
          "id": "5b51c1ca-037e-41d3-a74c-79ba16cc0e57",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "54491468-bbb6-4115-a06d-5e4e69b76f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b51c1ca-037e-41d3-a74c-79ba16cc0e57",
        "cursor": {
          "ref": "43de6f0f-3c24-4df2-ae5b-a09292ab140e",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8b8aec86-012d-41b3-afb3-3eb52df9d723"
        },
        "item": {
          "id": "5b51c1ca-037e-41d3-a74c-79ba16cc0e57",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "54491468-bbb6-4115-a06d-5e4e69b76f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4273cf-0f70-4294-8133-54fbf9891a61",
        "cursor": {
          "ref": "4f2ae8a0-25c7-48cc-b94c-9f9b24b4e58d",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "455253ca-f3ad-4407-9e70-16385b99e721"
        },
        "item": {
          "id": "8e4273cf-0f70-4294-8133-54fbf9891a61",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c83479f8-c529-49f3-8532-1ff6524f8186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4273cf-0f70-4294-8133-54fbf9891a61",
        "cursor": {
          "ref": "4f2ae8a0-25c7-48cc-b94c-9f9b24b4e58d",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "455253ca-f3ad-4407-9e70-16385b99e721"
        },
        "item": {
          "id": "8e4273cf-0f70-4294-8133-54fbf9891a61",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c83479f8-c529-49f3-8532-1ff6524f8186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8d8e65-8ee7-41c4-b669-64429a85431e",
        "cursor": {
          "ref": "4e2256c7-fbc8-4a87-b3c7-fa0596993ff7",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f94c1b70-5ace-461d-bed6-9cad5f229ea4"
        },
        "item": {
          "id": "6c8d8e65-8ee7-41c4-b669-64429a85431e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aa3e3829-3997-4a1e-8992-b81b9c9ccf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8d8e65-8ee7-41c4-b669-64429a85431e",
        "cursor": {
          "ref": "4e2256c7-fbc8-4a87-b3c7-fa0596993ff7",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f94c1b70-5ace-461d-bed6-9cad5f229ea4"
        },
        "item": {
          "id": "6c8d8e65-8ee7-41c4-b669-64429a85431e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aa3e3829-3997-4a1e-8992-b81b9c9ccf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e1cfbf-80e8-4be4-99f9-041a9736a67e",
        "cursor": {
          "ref": "52a36d4f-20ba-41bb-a039-6c7bb21965ae",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f24d57c1-1735-4ce5-a9d2-d8b3f4a770af"
        },
        "item": {
          "id": "46e1cfbf-80e8-4be4-99f9-041a9736a67e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e9dcb231-27a2-426a-b5fe-5956d43e54eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e1cfbf-80e8-4be4-99f9-041a9736a67e",
        "cursor": {
          "ref": "52a36d4f-20ba-41bb-a039-6c7bb21965ae",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f24d57c1-1735-4ce5-a9d2-d8b3f4a770af"
        },
        "item": {
          "id": "46e1cfbf-80e8-4be4-99f9-041a9736a67e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e9dcb231-27a2-426a-b5fe-5956d43e54eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875329b-d66a-4577-96f8-fa2e92577db6",
        "cursor": {
          "ref": "dae56a61-a5c4-45fa-894c-17177811ada2",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "00595c06-fd83-4d58-bb81-271c564e0e3f"
        },
        "item": {
          "id": "f875329b-d66a-4577-96f8-fa2e92577db6",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "4d576fbf-3d4b-4272-a286-4cd11d12a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875329b-d66a-4577-96f8-fa2e92577db6",
        "cursor": {
          "ref": "dae56a61-a5c4-45fa-894c-17177811ada2",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "00595c06-fd83-4d58-bb81-271c564e0e3f"
        },
        "item": {
          "id": "f875329b-d66a-4577-96f8-fa2e92577db6",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "4d576fbf-3d4b-4272-a286-4cd11d12a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8a2c1-41ee-4cc9-a09c-0883876675c5",
        "cursor": {
          "ref": "23253551-5458-4e8b-a280-9f9628bb7d6e",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c8059c3e-9a17-4a1e-84c6-6849752c5ab2"
        },
        "item": {
          "id": "94a8a2c1-41ee-4cc9-a09c-0883876675c5",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "c88a961b-e5e7-44bd-b31e-9b4c7ae56c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8a2c1-41ee-4cc9-a09c-0883876675c5",
        "cursor": {
          "ref": "23253551-5458-4e8b-a280-9f9628bb7d6e",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c8059c3e-9a17-4a1e-84c6-6849752c5ab2"
        },
        "item": {
          "id": "94a8a2c1-41ee-4cc9-a09c-0883876675c5",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "c88a961b-e5e7-44bd-b31e-9b4c7ae56c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d46862-ce71-4579-bd28-909c6aae8d43",
        "cursor": {
          "ref": "c023e3bf-6804-4b16-a82a-2b81b2ef2b42",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "60c37d62-6d51-4c2f-ac1f-3b427f6816af"
        },
        "item": {
          "id": "97d46862-ce71-4579-bd28-909c6aae8d43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5430d306-dfee-4c9f-853d-c354b92139f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d46862-ce71-4579-bd28-909c6aae8d43",
        "cursor": {
          "ref": "c023e3bf-6804-4b16-a82a-2b81b2ef2b42",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "60c37d62-6d51-4c2f-ac1f-3b427f6816af"
        },
        "item": {
          "id": "97d46862-ce71-4579-bd28-909c6aae8d43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5430d306-dfee-4c9f-853d-c354b92139f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab85fba5-9f56-4025-83ec-01a0a3a62b12",
        "cursor": {
          "ref": "7e44ec66-2f8c-4f5a-9616-e56b6eec2574",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2ab01c75-6f3d-4109-be02-9a4cbfad2ca9"
        },
        "item": {
          "id": "ab85fba5-9f56-4025-83ec-01a0a3a62b12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "75c49399-14c7-4df5-92be-3923713fae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab85fba5-9f56-4025-83ec-01a0a3a62b12",
        "cursor": {
          "ref": "7e44ec66-2f8c-4f5a-9616-e56b6eec2574",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2ab01c75-6f3d-4109-be02-9a4cbfad2ca9"
        },
        "item": {
          "id": "ab85fba5-9f56-4025-83ec-01a0a3a62b12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "75c49399-14c7-4df5-92be-3923713fae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41740ef8-52de-4266-91f4-343e5c5476e9",
        "cursor": {
          "ref": "bcce886a-8dfd-40c2-872a-49db41b3122c",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0177ce0b-74c7-4664-ac4d-54f93ee9b1f2"
        },
        "item": {
          "id": "41740ef8-52de-4266-91f4-343e5c5476e9",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "8194363a-3d70-40c5-934e-568d22204aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41740ef8-52de-4266-91f4-343e5c5476e9",
        "cursor": {
          "ref": "bcce886a-8dfd-40c2-872a-49db41b3122c",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0177ce0b-74c7-4664-ac4d-54f93ee9b1f2"
        },
        "item": {
          "id": "41740ef8-52de-4266-91f4-343e5c5476e9",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "8194363a-3d70-40c5-934e-568d22204aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e13969-3bbe-4a01-9bfb-8e4e05ae80ca",
        "cursor": {
          "ref": "ca053854-7ec0-4a41-84f5-77dcef0aaab0",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "541c5d76-6a17-4dd4-9395-dd701d6fe0a5"
        },
        "item": {
          "id": "03e13969-3bbe-4a01-9bfb-8e4e05ae80ca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d89e59ee-cb93-44d9-b48d-32a6b673303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e13969-3bbe-4a01-9bfb-8e4e05ae80ca",
        "cursor": {
          "ref": "ca053854-7ec0-4a41-84f5-77dcef0aaab0",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "541c5d76-6a17-4dd4-9395-dd701d6fe0a5"
        },
        "item": {
          "id": "03e13969-3bbe-4a01-9bfb-8e4e05ae80ca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d89e59ee-cb93-44d9-b48d-32a6b673303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f809d990-5045-4053-8a1e-b4c84a9e5e92",
        "cursor": {
          "ref": "f38ddc56-3b36-4a5d-8628-4c636dc12cae",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16eb6d74-8823-40df-af09-d5cda12b4677"
        },
        "item": {
          "id": "f809d990-5045-4053-8a1e-b4c84a9e5e92",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7cfa3afa-b4db-4b69-ad86-b76b06a95e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f809d990-5045-4053-8a1e-b4c84a9e5e92",
        "cursor": {
          "ref": "f38ddc56-3b36-4a5d-8628-4c636dc12cae",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16eb6d74-8823-40df-af09-d5cda12b4677"
        },
        "item": {
          "id": "f809d990-5045-4053-8a1e-b4c84a9e5e92",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7cfa3afa-b4db-4b69-ad86-b76b06a95e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40667ab1-064b-4682-996b-204eb9fe9699",
        "cursor": {
          "ref": "ff7a5fa1-9cec-47d7-8a99-3a1a9b7be9e6",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d67447d1-91d3-4268-90e5-ae92265c9c15"
        },
        "item": {
          "id": "40667ab1-064b-4682-996b-204eb9fe9699",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "24c50a06-5221-4bd9-a706-61c937d74d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40667ab1-064b-4682-996b-204eb9fe9699",
        "cursor": {
          "ref": "ff7a5fa1-9cec-47d7-8a99-3a1a9b7be9e6",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d67447d1-91d3-4268-90e5-ae92265c9c15"
        },
        "item": {
          "id": "40667ab1-064b-4682-996b-204eb9fe9699",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "24c50a06-5221-4bd9-a706-61c937d74d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c301284-2d20-410a-abc7-7e6fd80fe8ee",
        "cursor": {
          "ref": "84fec8dd-581b-411c-8f39-f70b6335e95f",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05ca6014-8d11-4541-bc79-05a8b4639d92"
        },
        "item": {
          "id": "9c301284-2d20-410a-abc7-7e6fd80fe8ee",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "9a862203-0563-4efe-a8b4-5ef490798c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c301284-2d20-410a-abc7-7e6fd80fe8ee",
        "cursor": {
          "ref": "84fec8dd-581b-411c-8f39-f70b6335e95f",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05ca6014-8d11-4541-bc79-05a8b4639d92"
        },
        "item": {
          "id": "9c301284-2d20-410a-abc7-7e6fd80fe8ee",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "9a862203-0563-4efe-a8b4-5ef490798c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79abc0de-4dfd-4a55-9bb8-9face133103d",
        "cursor": {
          "ref": "2ada11c3-99e0-4e44-94d4-09d412651cc4",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ac684b8b-b642-4138-9348-3ecbddf06106"
        },
        "item": {
          "id": "79abc0de-4dfd-4a55-9bb8-9face133103d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a202c935-b1fd-441d-8b02-cd56786d7678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79abc0de-4dfd-4a55-9bb8-9face133103d",
        "cursor": {
          "ref": "2ada11c3-99e0-4e44-94d4-09d412651cc4",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ac684b8b-b642-4138-9348-3ecbddf06106"
        },
        "item": {
          "id": "79abc0de-4dfd-4a55-9bb8-9face133103d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a202c935-b1fd-441d-8b02-cd56786d7678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051bb47b-3295-4cb3-a21f-ca172a1cb5f7",
        "cursor": {
          "ref": "6ff4052d-5081-44af-8891-9eb7e24ea3e6",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "044d3784-06c0-44fa-bd2a-67d1a616f408"
        },
        "item": {
          "id": "051bb47b-3295-4cb3-a21f-ca172a1cb5f7",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "82aa519d-05a0-4441-a159-7e4468188a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051bb47b-3295-4cb3-a21f-ca172a1cb5f7",
        "cursor": {
          "ref": "6ff4052d-5081-44af-8891-9eb7e24ea3e6",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "044d3784-06c0-44fa-bd2a-67d1a616f408"
        },
        "item": {
          "id": "051bb47b-3295-4cb3-a21f-ca172a1cb5f7",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "82aa519d-05a0-4441-a159-7e4468188a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d395ed-d858-4881-beae-ebe779a5693f",
        "cursor": {
          "ref": "b20cfd45-7aa5-48e3-894b-8b9abe9887d5",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6be48e29-c9cc-42ec-9fab-1e35e66ca651"
        },
        "item": {
          "id": "21d395ed-d858-4881-beae-ebe779a5693f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a133202b-6b6d-409b-8470-e7b60e3b788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d395ed-d858-4881-beae-ebe779a5693f",
        "cursor": {
          "ref": "b20cfd45-7aa5-48e3-894b-8b9abe9887d5",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6be48e29-c9cc-42ec-9fab-1e35e66ca651"
        },
        "item": {
          "id": "21d395ed-d858-4881-beae-ebe779a5693f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a133202b-6b6d-409b-8470-e7b60e3b788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec92c74-9511-4ebd-acb1-dea23c6df709",
        "cursor": {
          "ref": "5e6214a9-1077-4360-9b0c-6d7d12a37495",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8b8f4374-72d7-4b6f-8aca-5b18c141b0c0"
        },
        "item": {
          "id": "aec92c74-9511-4ebd-acb1-dea23c6df709",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "98bd9303-fc00-4a76-bc6d-8acaf47fcc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec92c74-9511-4ebd-acb1-dea23c6df709",
        "cursor": {
          "ref": "5e6214a9-1077-4360-9b0c-6d7d12a37495",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8b8f4374-72d7-4b6f-8aca-5b18c141b0c0"
        },
        "item": {
          "id": "aec92c74-9511-4ebd-acb1-dea23c6df709",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "98bd9303-fc00-4a76-bc6d-8acaf47fcc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5afb406-dfe3-4d61-b380-d6fcdcfcc733",
        "cursor": {
          "ref": "5626a332-1ab7-468a-9696-db243e69db90",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "86cdbbdc-7549-4fcc-9e27-917da19cdfda"
        },
        "item": {
          "id": "c5afb406-dfe3-4d61-b380-d6fcdcfcc733",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c401c71d-f4b3-454c-b3f0-b5e4c7f8a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5afb406-dfe3-4d61-b380-d6fcdcfcc733",
        "cursor": {
          "ref": "5626a332-1ab7-468a-9696-db243e69db90",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "86cdbbdc-7549-4fcc-9e27-917da19cdfda"
        },
        "item": {
          "id": "c5afb406-dfe3-4d61-b380-d6fcdcfcc733",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c401c71d-f4b3-454c-b3f0-b5e4c7f8a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea0be16-6c36-41cb-af6b-86c568cd96b2",
        "cursor": {
          "ref": "ecebcd29-c6fd-43f2-91ac-0681d7021ffe",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6f25d82d-40de-4ea0-b34e-838ac8e96adf"
        },
        "item": {
          "id": "cea0be16-6c36-41cb-af6b-86c568cd96b2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "7c2a72f4-298d-414f-9869-18f4d75f05c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea0be16-6c36-41cb-af6b-86c568cd96b2",
        "cursor": {
          "ref": "ecebcd29-c6fd-43f2-91ac-0681d7021ffe",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6f25d82d-40de-4ea0-b34e-838ac8e96adf"
        },
        "item": {
          "id": "cea0be16-6c36-41cb-af6b-86c568cd96b2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "7c2a72f4-298d-414f-9869-18f4d75f05c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98585ebd-9988-4b9c-bc06-724fdbc4a827",
        "cursor": {
          "ref": "14cc8545-6196-4629-9bcd-ab4ee26043f9",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6d246b54-eb15-4eef-bd49-b2cc83bb763a"
        },
        "item": {
          "id": "98585ebd-9988-4b9c-bc06-724fdbc4a827",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "c836ae21-833f-4986-b432-0d971ccc7e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98585ebd-9988-4b9c-bc06-724fdbc4a827",
        "cursor": {
          "ref": "14cc8545-6196-4629-9bcd-ab4ee26043f9",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6d246b54-eb15-4eef-bd49-b2cc83bb763a"
        },
        "item": {
          "id": "98585ebd-9988-4b9c-bc06-724fdbc4a827",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "c836ae21-833f-4986-b432-0d971ccc7e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b087dd-3600-441e-bcb0-b12b9b9baeaa",
        "cursor": {
          "ref": "d4797bf3-bb24-44af-8872-49b59419eafe",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f861aaa4-6fd7-4101-9473-531522059956"
        },
        "item": {
          "id": "07b087dd-3600-441e-bcb0-b12b9b9baeaa",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "2791e39a-e367-487b-ab05-58ace7850658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b087dd-3600-441e-bcb0-b12b9b9baeaa",
        "cursor": {
          "ref": "d4797bf3-bb24-44af-8872-49b59419eafe",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f861aaa4-6fd7-4101-9473-531522059956"
        },
        "item": {
          "id": "07b087dd-3600-441e-bcb0-b12b9b9baeaa",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "2791e39a-e367-487b-ab05-58ace7850658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aef6a2-aef2-4ba0-b16d-74552d4a86c9",
        "cursor": {
          "ref": "c449084a-9de2-475d-ae71-7c29457bf8d5",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "909dc50a-24e3-4e1f-8fdc-55ab3ee3f0c9"
        },
        "item": {
          "id": "87aef6a2-aef2-4ba0-b16d-74552d4a86c9",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "920f22e9-45ad-4554-97a2-d22dc3f39497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aef6a2-aef2-4ba0-b16d-74552d4a86c9",
        "cursor": {
          "ref": "c449084a-9de2-475d-ae71-7c29457bf8d5",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "909dc50a-24e3-4e1f-8fdc-55ab3ee3f0c9"
        },
        "item": {
          "id": "87aef6a2-aef2-4ba0-b16d-74552d4a86c9",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "920f22e9-45ad-4554-97a2-d22dc3f39497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786a9df2-6a60-4213-9ad0-d81a5bf1400c",
        "cursor": {
          "ref": "a4c2c7ef-42e0-4a16-885f-98942bd389dd",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a3212fe5-de1e-4d0d-9190-ffe174664343"
        },
        "item": {
          "id": "786a9df2-6a60-4213-9ad0-d81a5bf1400c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "790aa0d1-cd14-4a12-b8d8-438f422ac2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786a9df2-6a60-4213-9ad0-d81a5bf1400c",
        "cursor": {
          "ref": "a4c2c7ef-42e0-4a16-885f-98942bd389dd",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a3212fe5-de1e-4d0d-9190-ffe174664343"
        },
        "item": {
          "id": "786a9df2-6a60-4213-9ad0-d81a5bf1400c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "790aa0d1-cd14-4a12-b8d8-438f422ac2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b8eca-ccf8-4c43-87be-ad2e6748bcab",
        "cursor": {
          "ref": "d429ad32-3211-4692-8632-1922b8705ce6",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "81ba603a-df35-4765-b3bc-00d95d3f1080"
        },
        "item": {
          "id": "d47b8eca-ccf8-4c43-87be-ad2e6748bcab",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8d492361-dde7-4060-9741-f9f04dbc0268",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b8eca-ccf8-4c43-87be-ad2e6748bcab",
        "cursor": {
          "ref": "d429ad32-3211-4692-8632-1922b8705ce6",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "81ba603a-df35-4765-b3bc-00d95d3f1080"
        },
        "item": {
          "id": "d47b8eca-ccf8-4c43-87be-ad2e6748bcab",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8d492361-dde7-4060-9741-f9f04dbc0268",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b97b4bb-0a34-4c8d-a3dd-fa77cd0a048e",
        "cursor": {
          "ref": "28bf9e93-e8b6-4a0f-8968-34cb30b0ed39",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4d7ea6ba-aa50-414a-8d81-f53062a05508"
        },
        "item": {
          "id": "8b97b4bb-0a34-4c8d-a3dd-fa77cd0a048e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fba550e2-aea2-4c7c-bbb5-c5b1894b0cef",
          "status": "Created",
          "code": 201,
          "responseTime": 279,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b97b4bb-0a34-4c8d-a3dd-fa77cd0a048e",
        "cursor": {
          "ref": "28bf9e93-e8b6-4a0f-8968-34cb30b0ed39",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4d7ea6ba-aa50-414a-8d81-f53062a05508"
        },
        "item": {
          "id": "8b97b4bb-0a34-4c8d-a3dd-fa77cd0a048e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fba550e2-aea2-4c7c-bbb5-c5b1894b0cef",
          "status": "Created",
          "code": 201,
          "responseTime": 279,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2ea75-33ec-4cf4-a54d-84b538b1a7cb",
        "cursor": {
          "ref": "01ec01b1-9a9e-4be2-82a6-89dbab1a59fe",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b5ef27f-9f4a-4a5c-b32f-b6227cea72f3"
        },
        "item": {
          "id": "15a2ea75-33ec-4cf4-a54d-84b538b1a7cb",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "055b7d21-6f6e-452c-93bd-11635c3bc4d1",
          "status": "Created",
          "code": 201,
          "responseTime": 281,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2ea75-33ec-4cf4-a54d-84b538b1a7cb",
        "cursor": {
          "ref": "01ec01b1-9a9e-4be2-82a6-89dbab1a59fe",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b5ef27f-9f4a-4a5c-b32f-b6227cea72f3"
        },
        "item": {
          "id": "15a2ea75-33ec-4cf4-a54d-84b538b1a7cb",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "055b7d21-6f6e-452c-93bd-11635c3bc4d1",
          "status": "Created",
          "code": 201,
          "responseTime": 281,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e40232-f3f1-4c3f-af96-ad36472b67bc",
        "cursor": {
          "ref": "e6d650c3-1f13-45ab-93a4-b5e7308932f9",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c838fff9-9bd9-4655-8f11-f29ebcd07bd2"
        },
        "item": {
          "id": "a2e40232-f3f1-4c3f-af96-ad36472b67bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "82764971-feb6-4be4-bdeb-08202b1863d4",
          "status": "Created",
          "code": 201,
          "responseTime": 274,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e40232-f3f1-4c3f-af96-ad36472b67bc",
        "cursor": {
          "ref": "e6d650c3-1f13-45ab-93a4-b5e7308932f9",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c838fff9-9bd9-4655-8f11-f29ebcd07bd2"
        },
        "item": {
          "id": "a2e40232-f3f1-4c3f-af96-ad36472b67bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "82764971-feb6-4be4-bdeb-08202b1863d4",
          "status": "Created",
          "code": 201,
          "responseTime": 274,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c23ec-5190-41ad-b59c-ef965ae37278",
        "cursor": {
          "ref": "47246914-ac91-48bd-8a8d-a30a8e84d478",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f581529-bcab-4e62-a708-9c4debd78c17"
        },
        "item": {
          "id": "4a5c23ec-5190-41ad-b59c-ef965ae37278",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c78987c8-fff3-49fd-871e-e287ccbfeb4f",
          "status": "Created",
          "code": 201,
          "responseTime": 259,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c23ec-5190-41ad-b59c-ef965ae37278",
        "cursor": {
          "ref": "47246914-ac91-48bd-8a8d-a30a8e84d478",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f581529-bcab-4e62-a708-9c4debd78c17"
        },
        "item": {
          "id": "4a5c23ec-5190-41ad-b59c-ef965ae37278",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c78987c8-fff3-49fd-871e-e287ccbfeb4f",
          "status": "Created",
          "code": 201,
          "responseTime": 259,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876e4e8-d476-4ec5-adea-df0aebb2657e",
        "cursor": {
          "ref": "6aa58c88-5c36-4e6c-9f02-c80a4f05ed16",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "009ef6fa-4249-41eb-8579-98f914f927bf"
        },
        "item": {
          "id": "1876e4e8-d476-4ec5-adea-df0aebb2657e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d76e9791-e884-4f29-a403-de28f7393606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "1876e4e8-d476-4ec5-adea-df0aebb2657e",
        "cursor": {
          "ref": "6aa58c88-5c36-4e6c-9f02-c80a4f05ed16",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "009ef6fa-4249-41eb-8579-98f914f927bf"
        },
        "item": {
          "id": "1876e4e8-d476-4ec5-adea-df0aebb2657e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d76e9791-e884-4f29-a403-de28f7393606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "6f735793-9b77-4a4e-8dca-d13aab1e1fae",
        "cursor": {
          "ref": "a1d5dd6c-4d15-4ec7-8f83-d3e6cd855b7c",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "66160d79-51a2-461d-8b7e-917c9ff713bc"
        },
        "item": {
          "id": "6f735793-9b77-4a4e-8dca-d13aab1e1fae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aaf6e101-b2c1-4264-a941-d17973754049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "6f735793-9b77-4a4e-8dca-d13aab1e1fae",
        "cursor": {
          "ref": "a1d5dd6c-4d15-4ec7-8f83-d3e6cd855b7c",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "66160d79-51a2-461d-8b7e-917c9ff713bc"
        },
        "item": {
          "id": "6f735793-9b77-4a4e-8dca-d13aab1e1fae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aaf6e101-b2c1-4264-a941-d17973754049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "730e5bb5-4a83-4be8-9231-44117ee82f84",
        "cursor": {
          "ref": "44d219d2-9abd-4ab7-812a-1cc29b95b516",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5b2a5493-e300-43b8-885d-42efe73a6628"
        },
        "item": {
          "id": "730e5bb5-4a83-4be8-9231-44117ee82f84",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "908e5c9f-9da1-49f0-920b-3ad517ae76bd",
          "status": "Created",
          "code": 201,
          "responseTime": 294,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730e5bb5-4a83-4be8-9231-44117ee82f84",
        "cursor": {
          "ref": "44d219d2-9abd-4ab7-812a-1cc29b95b516",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5b2a5493-e300-43b8-885d-42efe73a6628"
        },
        "item": {
          "id": "730e5bb5-4a83-4be8-9231-44117ee82f84",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "908e5c9f-9da1-49f0-920b-3ad517ae76bd",
          "status": "Created",
          "code": 201,
          "responseTime": 294,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849b2dca-309d-4dd7-80ab-58f278d801c0",
        "cursor": {
          "ref": "49864786-44c2-48c0-8ed6-592ccc150811",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51fe247a-164f-49cd-bcc6-a61ba99ec0f4"
        },
        "item": {
          "id": "849b2dca-309d-4dd7-80ab-58f278d801c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b5fb92bb-af31-4240-998f-cf84f2634e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849b2dca-309d-4dd7-80ab-58f278d801c0",
        "cursor": {
          "ref": "49864786-44c2-48c0-8ed6-592ccc150811",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51fe247a-164f-49cd-bcc6-a61ba99ec0f4"
        },
        "item": {
          "id": "849b2dca-309d-4dd7-80ab-58f278d801c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b5fb92bb-af31-4240-998f-cf84f2634e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4acdb8-f159-41d5-b797-273ab1a521f5",
        "cursor": {
          "ref": "529b3ab2-493c-4e73-9b89-7d93732eff5d",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a37d474d-bf28-4bab-ad78-a0e45790f083"
        },
        "item": {
          "id": "7a4acdb8-f159-41d5-b797-273ab1a521f5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3785bfa2-d1f5-4c07-b7fc-33969603af0d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff768f4-f67c-44f5-832d-e49fcfb3af10",
        "cursor": {
          "ref": "64b20533-2968-48d9-957b-141b8fe1d6f5",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0be7e9d7-6ddd-4f9a-95ec-d78051dee92e"
        },
        "item": {
          "id": "3ff768f4-f67c-44f5-832d-e49fcfb3af10",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a03e986e-63bf-4451-a517-6ae389374e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff768f4-f67c-44f5-832d-e49fcfb3af10",
        "cursor": {
          "ref": "64b20533-2968-48d9-957b-141b8fe1d6f5",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0be7e9d7-6ddd-4f9a-95ec-d78051dee92e"
        },
        "item": {
          "id": "3ff768f4-f67c-44f5-832d-e49fcfb3af10",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a03e986e-63bf-4451-a517-6ae389374e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab40bb-dc8b-419e-b187-a6d47fc7a3a8",
        "cursor": {
          "ref": "3ebd8260-e7e7-4112-a1c4-b112732ed22e",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "39c70b91-a89d-43fe-8efe-583fbe3122ea"
        },
        "item": {
          "id": "b7ab40bb-dc8b-419e-b187-a6d47fc7a3a8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "095e740f-9dac-4563-b9f1-d7ef0b1407a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9e7428-3233-43fb-866b-ec13bd9ead80",
        "cursor": {
          "ref": "da62dd0c-cf23-40e0-a927-d61905d80194",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e5fb49f-1a87-47f9-98a8-d3154cc1a581"
        },
        "item": {
          "id": "4e9e7428-3233-43fb-866b-ec13bd9ead80",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f44f874b-5ce7-483d-823f-826b79748ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202629db-f240-4d48-b2fa-95c9d7512900",
        "cursor": {
          "ref": "7954dcf2-ca84-437c-8050-cdaa7f1c3cf5",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "450d3b6e-2033-4e3a-bfcc-d01d6fc628ef"
        },
        "item": {
          "id": "202629db-f240-4d48-b2fa-95c9d7512900",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ddbd43b-dd1a-47e7-b2ae-6c8121d7d0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c821f-8cac-4e0d-a737-d3f5c7337c01",
        "cursor": {
          "ref": "856fff2a-a229-4702-aa8c-b20d03ebc5b9",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0c0a5321-b96d-4cea-b7e6-d61f3208cfdf"
        },
        "item": {
          "id": "d60c821f-8cac-4e0d-a737-d3f5c7337c01",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9eed8c5e-6dac-4d55-a78c-9adce24b30e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09615175-fee6-4bfc-9e08-b304ca3d1a05",
        "cursor": {
          "ref": "d9aaa518-2420-4b60-abd1-7ab8735a0ba2",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "41973006-2945-46e2-91f3-209e2cee5198"
        },
        "item": {
          "id": "09615175-fee6-4bfc-9e08-b304ca3d1a05",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "493560f8-bcb7-4046-ac5d-d6b17c63c595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1648ca5-ad5d-4126-a1c0-296a88fb9f36",
        "cursor": {
          "ref": "2533ac59-8d1a-43c9-893b-5350f1d60d21",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6d760868-fd59-425c-88da-5305189fec47"
        },
        "item": {
          "id": "c1648ca5-ad5d-4126-a1c0-296a88fb9f36",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47c08a98-d415-4c40-a5db-16be057d4837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca383d8a-23da-453c-ab04-26fb891d2703",
        "cursor": {
          "ref": "ac810983-b19f-4d53-a8d5-f13b60f91b4f",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "db8430e1-fecb-4af4-bc56-9de38849578f"
        },
        "item": {
          "id": "ca383d8a-23da-453c-ab04-26fb891d2703",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "52abc2c9-f484-4a26-b745-0c6efdbae56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3837e90b-c0ee-4036-a7ce-c7eacb925527",
        "cursor": {
          "ref": "6a8010b3-1387-42f5-a9f4-698aad814c1f",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e370a81e-db11-4367-b15a-0141756808fd"
        },
        "item": {
          "id": "3837e90b-c0ee-4036-a7ce-c7eacb925527",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0c2f9621-92f1-476f-92c3-eeead1947354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e39e6-0347-4ab1-b64f-20ff8e26298a",
        "cursor": {
          "ref": "84cb64ea-c4d3-45e6-a40d-95ed7096db52",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1d825171-89a5-4976-8e52-b1040fcd73a8"
        },
        "item": {
          "id": "d10e39e6-0347-4ab1-b64f-20ff8e26298a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3f000995-997e-404f-abed-dd75f8fbea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91e57c9-aaf2-4c04-8b6e-95b630dd9d9a",
        "cursor": {
          "ref": "fae7d28b-b909-459b-9dec-b606dcc0c807",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6823c215-40fc-4c8e-9055-eb12efa7cd33"
        },
        "item": {
          "id": "d91e57c9-aaf2-4c04-8b6e-95b630dd9d9a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "68cd0b34-faa8-4967-9600-15c8995b767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46ca91-e936-4452-a1bd-6ec5bbe6d766",
        "cursor": {
          "ref": "fe246240-9339-41bf-bf07-5e408e485e4d",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c0da1bd5-cd51-44f6-b46b-e503262e834a"
        },
        "item": {
          "id": "2e46ca91-e936-4452-a1bd-6ec5bbe6d766",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7c46539c-534e-4cce-a521-dd9f0b37b7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee1294-d876-431f-a3a0-4eef85e31618",
        "cursor": {
          "ref": "ff1f59d0-81ff-453b-b2fd-fe50c5fd544d",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7b68696f-de2a-4868-8232-487117e3016a"
        },
        "item": {
          "id": "8dee1294-d876-431f-a3a0-4eef85e31618",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f13cab53-8815-4677-bad5-edf0bb4c603f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc52cb0-a103-418f-be2f-5ce2f7db9acb",
        "cursor": {
          "ref": "a7ac99d9-e5c4-421b-9df9-8d4a4ef00982",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c8eddc5b-5246-46a5-a76e-001210b92d8b"
        },
        "item": {
          "id": "4dc52cb0-a103-418f-be2f-5ce2f7db9acb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ad45ced9-cfdd-46db-b73c-ee7ff1858116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b63ad-639b-46d9-b50f-11c14d08153d",
        "cursor": {
          "ref": "c955a82c-5bfa-47fc-a245-3103c8f565e0",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5472d12-2d37-49f4-82fb-41b093a30fdf"
        },
        "item": {
          "id": "0a1b63ad-639b-46d9-b50f-11c14d08153d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f21efdf-bc52-4cb9-8825-039edae3fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28bdb36-0046-4d93-b6f3-1de2c4bc0faf",
        "cursor": {
          "ref": "d0f3e471-2723-45e1-bba8-1244535588de",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0bb844fa-ec5a-4ce4-965a-08466d43a835"
        },
        "item": {
          "id": "f28bdb36-0046-4d93-b6f3-1de2c4bc0faf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4cbb3d2f-037b-49ee-899c-ca0098c8202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb9315-76f8-4c07-ba96-1288ead9f932",
        "cursor": {
          "ref": "b41b4462-668d-47ec-b94c-5b001ebdeb67",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f27249d6-4de6-4eb4-9db1-8efdf787e103"
        },
        "item": {
          "id": "eacb9315-76f8-4c07-ba96-1288ead9f932",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "38fced4b-adde-46dd-8ec2-f949394726ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3f79e5-a77b-4861-9ede-d127e220968b",
        "cursor": {
          "ref": "6ae8715a-7ee4-4af9-851e-611abd5c68ee",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "487fa874-4d5a-4b42-8e7e-84b9cc9283f8"
        },
        "item": {
          "id": "ba3f79e5-a77b-4861-9ede-d127e220968b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e5f90823-4d13-4441-a43f-835a3a074ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adaeeea-9478-4caf-942b-58e983ed348c",
        "cursor": {
          "ref": "04b6e081-6fc4-42eb-898a-531082e02d90",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c19e53d8-0371-458a-b50c-61c773a62965"
        },
        "item": {
          "id": "4adaeeea-9478-4caf-942b-58e983ed348c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9553de62-b423-4272-a388-2a3222d05e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7a85f6-ff8d-4d69-a34a-f13f62ed8f9f",
        "cursor": {
          "ref": "7450e173-fba2-49f2-94d3-c034f1f83e9a",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a9eeae13-5412-478c-8909-84e63b587083"
        },
        "item": {
          "id": "5f7a85f6-ff8d-4d69-a34a-f13f62ed8f9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0fe9bf38-8491-41a5-9b44-f21b0482675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648a72f-adb0-42ab-8890-7a0264749fdf",
        "cursor": {
          "ref": "a168fd3d-4cf6-4301-bf43-9b6005e4fbaa",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "40e38728-97dc-42bb-9ff5-812c32480788"
        },
        "item": {
          "id": "6648a72f-adb0-42ab-8890-7a0264749fdf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "930549d1-3ea1-40f6-96c3-fa44df9373ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a5735a-9858-4f14-8f7c-2e4a809120dd",
        "cursor": {
          "ref": "245efe8d-358d-4973-9971-e09f84a690dd",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "debf5e8d-bd9e-4b3b-aff3-351ec705a56b"
        },
        "item": {
          "id": "a5a5735a-9858-4f14-8f7c-2e4a809120dd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0f0fee67-2dcd-4e47-afdb-25b7f5ba741d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61edaa5f-0e78-44b3-8603-532a5b5ff71c",
        "cursor": {
          "ref": "4a8b03e2-4785-4c92-8fae-bad2c3a64bff",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "19626b56-e874-4020-954b-cae5540c0b6c"
        },
        "item": {
          "id": "61edaa5f-0e78-44b3-8603-532a5b5ff71c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01aec624-f3a0-460c-b880-812674b5bf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a355c-d156-4fbe-b4d4-b8534f60d5ea",
        "cursor": {
          "ref": "6b772783-8659-42a9-b70d-07223b8311d6",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c928b048-5d39-406b-8b0d-1e85075c0bf5"
        },
        "item": {
          "id": "2e0a355c-d156-4fbe-b4d4-b8534f60d5ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "223eb1ac-aeb1-494a-bf77-4af41e95d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b77d6b7-4b25-4fc9-8d31-1d9c03a55409",
        "cursor": {
          "ref": "4557aea6-6887-4681-94a4-a2eb52b12e86",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "298021dc-5a06-4a45-a570-26a8e97c3fa3"
        },
        "item": {
          "id": "3b77d6b7-4b25-4fc9-8d31-1d9c03a55409",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6887a24e-978e-4203-8f14-0a2ca1694565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6283b4ec-14e6-4e0d-9898-2166a8cc9abc",
        "cursor": {
          "ref": "bd4d0b16-1827-4138-9b13-7fbfe757c99f",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2333bf5-eb9f-4058-a9bb-2bbdd8a3e2e0"
        },
        "item": {
          "id": "6283b4ec-14e6-4e0d-9898-2166a8cc9abc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "592f54a9-e5d8-4ad9-b079-a3531b44b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb396da-d499-4b78-950d-1e3e46f59a98",
        "cursor": {
          "ref": "b837feda-e70d-4e65-b012-d5cf1d479931",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "753e8d6f-1856-443d-b301-ebd2e25d5374"
        },
        "item": {
          "id": "4fb396da-d499-4b78-950d-1e3e46f59a98",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0660bb34-ae5c-4c96-be43-4f17fbd6c614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f2ac64-2f6e-42e5-8b82-7b2148cf3756",
        "cursor": {
          "ref": "66cd4515-11bc-4ec3-9d47-46a16ad765f5",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e18921a7-75ab-4644-9e0a-6a5148f406df"
        },
        "item": {
          "id": "69f2ac64-2f6e-42e5-8b82-7b2148cf3756",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9a03f743-fd32-403e-b4b6-a45803c3d96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df387af0-e682-4d3d-a6cb-a8d3b94117fd",
        "cursor": {
          "ref": "2f15d1b7-3eca-46f2-a9ef-964eaf206adb",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "965d26e4-28ad-4b34-bfb5-4ca8b604a738"
        },
        "item": {
          "id": "df387af0-e682-4d3d-a6cb-a8d3b94117fd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "13fb4fa2-4cfd-4751-ba27-41a5e64d0f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f340e8eb-7b89-4e64-a234-8fc0d515ae69",
        "cursor": {
          "ref": "5e9adc3f-bfe3-4d01-8c2d-09b0b920154f",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8fabe0af-4545-4f2e-9ba2-bf13763c34b1"
        },
        "item": {
          "id": "f340e8eb-7b89-4e64-a234-8fc0d515ae69",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bf6d919b-5ea5-4146-9e50-2df0481d3785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114db3cb-ef8d-4a34-8992-989ce69a0c6e",
        "cursor": {
          "ref": "08fd210a-4114-4b5b-86ae-5fe874f33075",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1fa682e5-17f3-46e8-8d1c-8eca9a8f9799"
        },
        "item": {
          "id": "114db3cb-ef8d-4a34-8992-989ce69a0c6e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b4945cee-bb3e-4d4f-a216-e973764b1c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e17fbb8-c31e-43c5-ad1c-7bb2c6111560",
        "cursor": {
          "ref": "808e6e0a-e0a9-48a0-a62e-705e92e93062",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7dbc27c0-619c-4d47-a6d8-c519244f572c"
        },
        "item": {
          "id": "2e17fbb8-c31e-43c5-ad1c-7bb2c6111560",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b4d62c3-e27d-480e-93a6-ba9e8a7cd511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62de86f-ca9d-4ec1-ab61-512587a6c6af",
        "cursor": {
          "ref": "fb014b8d-8de4-47c2-90d4-c2a90d37afa1",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e05b0d6a-d91d-4b5a-ada4-3716df59f4eb"
        },
        "item": {
          "id": "c62de86f-ca9d-4ec1-ab61-512587a6c6af",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1b862612-cecb-484d-bf23-a65299c39720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c995851-09d2-4b3b-8c55-ceb23b26e380",
        "cursor": {
          "ref": "c09823ec-ed01-4b72-872e-3f77ca02c845",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8eba064b-b666-4640-85c0-80a16ca99c6e"
        },
        "item": {
          "id": "7c995851-09d2-4b3b-8c55-ceb23b26e380",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec608e9c-d7e6-4035-a585-28bf822a5565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7201923-0d9c-4dd7-8271-e23f6044665a",
        "cursor": {
          "ref": "0caf0da1-a00a-46d4-9a63-a2ff4ce18907",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f50964e4-6f94-4263-ab0f-f5698a46ead8"
        },
        "item": {
          "id": "b7201923-0d9c-4dd7-8271-e23f6044665a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "77f90ccb-4477-4444-8839-76e2b145c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da991360-3174-4e4d-8849-522d2910d298",
        "cursor": {
          "ref": "34d44bf8-fbfe-42c1-a2b2-2f4346b27788",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1f91c5d7-1ebd-4840-94ad-03ba0eaa17b8"
        },
        "item": {
          "id": "da991360-3174-4e4d-8849-522d2910d298",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cee50c48-b508-4239-bfdd-b394693a326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df08b5-d886-4db7-a661-95bac2cafbf7",
        "cursor": {
          "ref": "ba30154c-8a36-40e2-a69e-e54353a58544",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "433a9bdf-e23f-415f-b2d1-84317468667e"
        },
        "item": {
          "id": "31df08b5-d886-4db7-a661-95bac2cafbf7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "78dc5b0a-1853-45c4-8caa-809b78680c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccca5e2-0470-4047-ab95-0749897f40b1",
        "cursor": {
          "ref": "b4b51b91-0f0c-40f1-b1d3-bbf60d0c0b5c",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "05fce222-7c5c-4563-9949-5a9e73e35bb8"
        },
        "item": {
          "id": "3ccca5e2-0470-4047-ab95-0749897f40b1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a61b914c-636f-4b8e-b24a-38f1c265e7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acedd12-bc62-447f-957b-3ccec0382a9c",
        "cursor": {
          "ref": "ebff4d8e-ef00-4e6a-b551-1fad15c87ff3",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ea7bf3b4-5950-4eed-9eaa-a6af06fb4824"
        },
        "item": {
          "id": "8acedd12-bc62-447f-957b-3ccec0382a9c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "eb99d523-5ef1-4407-b6a1-d4a6a4665016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7c0483-9f32-4625-863e-6ee44c438680",
        "cursor": {
          "ref": "9d909196-d156-4ea0-a417-f59622b84c84",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44597305-0018-41b6-830f-952a287d9e12"
        },
        "item": {
          "id": "cd7c0483-9f32-4625-863e-6ee44c438680",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc99f191-22e2-458c-a587-f20838deb832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbf3bd5-e4c8-48d9-affe-768c93b3761e",
        "cursor": {
          "ref": "e9bda988-99fd-417f-81f4-43fc1ef88c46",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6b56e5ad-94fa-4183-9da2-2d1da8f6b3d9"
        },
        "item": {
          "id": "ffbf3bd5-e4c8-48d9-affe-768c93b3761e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8f17bddd-9ba9-4bc6-b1e9-5edfee5a3c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a666c5f-ecad-4608-91a3-6e0a91aa480e",
        "cursor": {
          "ref": "1487d090-9426-4033-b20f-6e7d3c1f7be8",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "97ca0531-a530-42eb-a70a-86f80b9fe57c"
        },
        "item": {
          "id": "5a666c5f-ecad-4608-91a3-6e0a91aa480e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "565dda86-0e65-4516-9443-51c6a61a9ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b14c62-22bf-4651-9276-1efcc35568a1",
        "cursor": {
          "ref": "0ded16b8-c8f0-4a98-abef-d245e465ace8",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a1e36e42-fa8d-40f0-b8ec-ebc9210f0f89"
        },
        "item": {
          "id": "21b14c62-22bf-4651-9276-1efcc35568a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "72cae99a-c645-44df-89f5-d5d935c449b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46b4fdf-c7c4-412f-99e6-263441c9fb88",
        "cursor": {
          "ref": "1570d27e-1387-487a-9bf2-8b18e7e03ce5",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ae253182-d3db-4c71-9c80-d6fbbb8b58cf"
        },
        "item": {
          "id": "a46b4fdf-c7c4-412f-99e6-263441c9fb88",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4b441cdc-8c4c-4aa6-855e-b4d22117fe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008d164f-7bae-48a0-ac1a-bf4c0bd49419",
        "cursor": {
          "ref": "bf4e2ba0-b8da-44e1-b302-f146473f6442",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "726016fb-f109-4b77-9599-968987443dbb"
        },
        "item": {
          "id": "008d164f-7bae-48a0-ac1a-bf4c0bd49419",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b626c71-c4f4-4f3c-9461-64801790bc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b4d111-691b-4d61-878b-327eae26768e",
        "cursor": {
          "ref": "801e3473-2539-4fb2-a706-8ab0bba5835a",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a4d09c9c-4630-45b8-9edc-6464a50273ca"
        },
        "item": {
          "id": "f1b4d111-691b-4d61-878b-327eae26768e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f6d2e66-3845-4be3-9db9-3a7cbc3cafc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b53eee3-6a8f-41e2-a90e-0dfd41363eb9",
        "cursor": {
          "ref": "8dcff499-9477-41d5-937e-7ca221d30096",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "783f5493-47aa-4603-847d-7bfe15444d5f"
        },
        "item": {
          "id": "0b53eee3-6a8f-41e2-a90e-0dfd41363eb9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b84de0b4-9fa5-4729-930d-f49adbda6ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaa50de-3ccd-4d5a-abaa-2f08b3d95cba",
        "cursor": {
          "ref": "89eb75f8-2f9f-4452-83a9-8a928e4afe43",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b690366-8dc6-4a8a-a942-366b6fa6f797"
        },
        "item": {
          "id": "acaa50de-3ccd-4d5a-abaa-2f08b3d95cba",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f309ac73-fd72-407c-905d-14d4b162dac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc86d4cb-33d6-4e67-8ab4-445e8b4addd9",
        "cursor": {
          "ref": "695d3753-a991-4fc8-bede-d81926510d8e",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f6630df-1657-4e94-ad3e-a79875428151"
        },
        "item": {
          "id": "bc86d4cb-33d6-4e67-8ab4-445e8b4addd9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fe57935f-4d02-4e3a-8e01-6140227ebd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081c215a-4401-47e4-aca8-9ce7b7734007",
        "cursor": {
          "ref": "5916c289-748a-4665-a799-6dd3da125a71",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "241ad8d0-be45-4cc9-86d0-29cef8879fc2"
        },
        "item": {
          "id": "081c215a-4401-47e4-aca8-9ce7b7734007",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66695d5a-c3ea-42f6-9ff6-a45480b4a8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85de667f-d146-44b4-8e1e-90649ff0f2dd",
        "cursor": {
          "ref": "19808375-a1fe-4525-8f64-9c78442de732",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "963670fa-3ee1-4ea3-aa50-3084f521fa6d"
        },
        "item": {
          "id": "85de667f-d146-44b4-8e1e-90649ff0f2dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d5f8e929-d3e1-416d-a399-028ea36876e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7050fb8-0708-43e0-94d3-904f16d80a94",
        "cursor": {
          "ref": "012aeb3d-038f-4894-b58e-aaf395a8e134",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f683a9bb-a695-4f2b-a224-efe001a2515f"
        },
        "item": {
          "id": "d7050fb8-0708-43e0-94d3-904f16d80a94",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aa5d88ce-abbd-4d49-b6aa-fa47a9ff113b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1223202-6de8-4fd5-bde2-90314503e9a7",
        "cursor": {
          "ref": "89c6897b-5bc5-40ae-98b5-a4d72eb3dad6",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d9f25b15-79b0-4e28-b849-e8ecf1e08089"
        },
        "item": {
          "id": "c1223202-6de8-4fd5-bde2-90314503e9a7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f8399287-a4cc-46eb-9190-ca903f93bd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8126bab9-0a16-47c5-99ab-5cf3bd3052a9",
        "cursor": {
          "ref": "6af3f3f3-308c-438a-817d-43a4abaa5cca",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f4682326-e415-43b5-ba98-84cf51d1afaf"
        },
        "item": {
          "id": "8126bab9-0a16-47c5-99ab-5cf3bd3052a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5c275ed5-aa23-4fa2-b9cf-2c79be126c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e740c4ea-1803-4c93-9758-01fbb5c2edd8",
        "cursor": {
          "ref": "2c32b5f2-9667-44da-9c06-d76c9a18a85c",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ac35b541-419e-43fc-ba98-d17927b501a4"
        },
        "item": {
          "id": "e740c4ea-1803-4c93-9758-01fbb5c2edd8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "297774ed-41ae-48af-be87-69664ace0df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8696074f-9da1-44d8-85b6-01454d0fb19e",
        "cursor": {
          "ref": "0a222d93-d1d7-4778-9629-93a5bfbcae16",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7235889b-e3c8-4727-b628-9074f06b1e83"
        },
        "item": {
          "id": "8696074f-9da1-44d8-85b6-01454d0fb19e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "be44803e-82ae-4f6c-8aa3-cc9d47ef7e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fc5fe2-b7e3-4c79-a2f3-2ee7d0e9592f",
        "cursor": {
          "ref": "998e10c5-ac2a-42a2-8a1c-d19ef850e568",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "019f6b00-4755-4234-bbc5-56547cac2710"
        },
        "item": {
          "id": "18fc5fe2-b7e3-4c79-a2f3-2ee7d0e9592f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7f6e0e3-211a-4c86-850d-1693de31878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f8da4-5576-4080-89c2-525fa3f18e08",
        "cursor": {
          "ref": "67e004ce-8c05-420c-b721-199a4f1bc003",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04f9307e-9351-4ac7-b965-a68c92971614"
        },
        "item": {
          "id": "4a5f8da4-5576-4080-89c2-525fa3f18e08",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3095a8fd-194d-4505-867f-f559ad1f8643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028131e3-51a7-41fc-9ae1-ddb0231a33c6",
        "cursor": {
          "ref": "7c0bec1a-9049-42b7-abe2-af7c139f1133",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f7bd0faf-4e33-46ba-80e9-1979936ee646"
        },
        "item": {
          "id": "028131e3-51a7-41fc-9ae1-ddb0231a33c6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fe87aa27-3131-428d-91fa-b93af82f6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a212ec-f43e-46d3-8e40-8859016a1082",
        "cursor": {
          "ref": "8cc3d8d8-8d66-4d12-9614-cc7ce8ad7350",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02ec7e3c-5b61-4f96-b83c-57c94cfad348"
        },
        "item": {
          "id": "d9a212ec-f43e-46d3-8e40-8859016a1082",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "10d74b1c-954f-484b-9b60-d785fa4d921f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313f485-2601-45a9-868b-a6e8685d0f4f",
        "cursor": {
          "ref": "a8e8c02e-ed9f-4b1b-a0be-5bb52d8b3a13",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "022fcd43-2e09-4ea7-acc2-7d3a3180655c"
        },
        "item": {
          "id": "8313f485-2601-45a9-868b-a6e8685d0f4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a47a6c9c-237c-4f1a-a15f-57d39229a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95d9cfb-7507-47ab-b7fa-31a08bddefdf",
        "cursor": {
          "ref": "9cc9025a-3c4c-4d48-aecf-358641ef91f9",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bc148218-d628-4405-896d-32479f25ba02"
        },
        "item": {
          "id": "a95d9cfb-7507-47ab-b7fa-31a08bddefdf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c2f623b9-5b0f-4257-8050-63293fb71f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c7e3bf-59ed-45a2-a711-62d9b04b9593",
        "cursor": {
          "ref": "5ad4cceb-02b7-4b85-86a0-e35767204b85",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed2194c7-0b71-488d-8ccc-a0f9849287ed"
        },
        "item": {
          "id": "b5c7e3bf-59ed-45a2-a711-62d9b04b9593",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "daadf1a5-48fa-4b7b-8cc5-ee79efe177d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f2bfd2-822b-44c0-a0af-593216e1424e",
        "cursor": {
          "ref": "4110642a-f959-45a2-8edd-1bf08f32dad1",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "afbffb42-057d-4936-aa8a-9c26a36b4782"
        },
        "item": {
          "id": "37f2bfd2-822b-44c0-a0af-593216e1424e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "05eeb2a7-0c58-4276-b26d-e8dd13bb2dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8985bf5a-2640-4314-b404-6f0afe41ddac",
        "cursor": {
          "ref": "770fae11-a58d-41fe-b66c-eeaa626e63e1",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "640aac05-1222-4aca-b2fe-02b3ecee39d2"
        },
        "item": {
          "id": "8985bf5a-2640-4314-b404-6f0afe41ddac",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49b32dad-5fc0-448c-a163-96d839524418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c774a0-f369-4c11-8f7b-b1e6907f8ba4",
        "cursor": {
          "ref": "29773a95-a7ab-46ef-9472-81383196755f",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0c6b8a1d-ceb8-42d4-aed2-85db197cccc5"
        },
        "item": {
          "id": "e5c774a0-f369-4c11-8f7b-b1e6907f8ba4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fea0ebf7-e884-4194-a770-784ac5d388ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032fea9b-bb2d-4da1-8bc5-bc6771a5682c",
        "cursor": {
          "ref": "518ae941-de11-4735-987f-902f1f449f69",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "520a3ee0-dd0d-4661-ab2e-e9e7b0fc1e06"
        },
        "item": {
          "id": "032fea9b-bb2d-4da1-8bc5-bc6771a5682c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "14539d10-df15-4b4c-bcc6-9021266df596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50037766-5180-415e-9998-5d8bd69cde5c",
        "cursor": {
          "ref": "b4c983cb-0ef9-48b3-b610-c83307735676",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "edb219cf-f1a3-45e1-8d27-4d6c5ee8aa3a"
        },
        "item": {
          "id": "50037766-5180-415e-9998-5d8bd69cde5c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "77caf8a4-defc-4ec8-a910-4d5c81821df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e5a38b-a1b3-407c-a2f5-ac284d8213b8",
        "cursor": {
          "ref": "98f7fa7d-2806-4a4c-8a3f-ed12d63b6859",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1ea8e77b-598d-4a60-96c0-8e6d370f48b4"
        },
        "item": {
          "id": "13e5a38b-a1b3-407c-a2f5-ac284d8213b8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "47d2fdc1-ee5a-4a75-8316-f577cd3968d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7b2e5b-50cb-43f6-9c53-65ea3f3aaf43",
        "cursor": {
          "ref": "73ca20b5-22a1-49fa-80ed-9179ad626e06",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "36672dc7-1c57-47a7-a8a0-e4e8a743c97b"
        },
        "item": {
          "id": "ce7b2e5b-50cb-43f6-9c53-65ea3f3aaf43",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "721a39c8-b922-4138-901a-80b8d20cf906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08be9489-26ed-4e9a-838e-281970b5cf14",
        "cursor": {
          "ref": "08529f77-5e22-4442-9afc-c0c479003509",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29c95003-0887-47b1-8986-d274860cac5a"
        },
        "item": {
          "id": "08be9489-26ed-4e9a-838e-281970b5cf14",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "463c7fd7-5356-4a71-b908-ec8beb06c7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28347ee5-7e84-4ae4-a92f-310cd061f254",
        "cursor": {
          "ref": "a972a25f-e7c6-4118-bfcc-6671dadfdd00",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "93565600-c315-48d7-8701-3b79bc420675"
        },
        "item": {
          "id": "28347ee5-7e84-4ae4-a92f-310cd061f254",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "600ee67e-2dc4-4378-9a3c-428008aea7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ce2cf9-b624-485f-b980-261a91f4333f",
        "cursor": {
          "ref": "ff1024c7-2961-4fc3-bbb6-dac7a6b3c76a",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e02b0a9c-401b-4c61-80b7-96f091f89a10"
        },
        "item": {
          "id": "d8ce2cf9-b624-485f-b980-261a91f4333f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40687136-946b-4a6e-9bdf-a06898a49f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b36190-4db7-41cf-a562-63a07e96d06f",
        "cursor": {
          "ref": "a28cfb5a-a242-49c5-b79d-dabd141e08fa",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "59ae5412-6ef5-44a4-af39-7f2b5bfc7b74"
        },
        "item": {
          "id": "52b36190-4db7-41cf-a562-63a07e96d06f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "280f3a5a-f79d-473e-bee4-3fa5a1fdd726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70858cba-b3d4-497a-b3f3-60a496ddc500",
        "cursor": {
          "ref": "85d46f1d-5f5c-47ec-925c-8832464457b8",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cc124e8a-d96b-4c3e-b835-08fb7f2aa4c0"
        },
        "item": {
          "id": "70858cba-b3d4-497a-b3f3-60a496ddc500",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dd380204-a639-46de-a926-7e83f6022114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f409b7-ec91-48e8-aa0a-b9c0c83ee48c",
        "cursor": {
          "ref": "dc0ba73b-61c9-49f8-bfe3-33e364ee7ef0",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b8ec5409-0bf9-48fc-8365-d3604f8b07fa"
        },
        "item": {
          "id": "96f409b7-ec91-48e8-aa0a-b9c0c83ee48c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "53d810f0-0d6c-4595-bb04-fc637c1eef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0e374b-27d3-4b57-9398-fc8e34454b14",
        "cursor": {
          "ref": "a18b309f-df7d-4684-b94c-83067887acf2",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6fd20f0d-afea-4001-8c72-7250977c2bc5"
        },
        "item": {
          "id": "5e0e374b-27d3-4b57-9398-fc8e34454b14",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f84e5896-9917-4cf0-a4f8-4d57d88bf7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0a76d7-6d65-4ea3-8666-bdf587e47cbe",
        "cursor": {
          "ref": "b62114b4-5fbb-4423-a0fe-05af0cfbc16d",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "746e9732-3722-40af-9b03-c1d4b262d6cb"
        },
        "item": {
          "id": "2b0a76d7-6d65-4ea3-8666-bdf587e47cbe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "50233f4c-47ec-4565-b802-5f4a302f6012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763f2b9c-b910-420b-b87c-3607947b50ea",
        "cursor": {
          "ref": "171c34f6-0bf2-4505-8926-3f0c136b8abc",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "986ded2a-b542-47ef-85ce-acb63f4a04f9"
        },
        "item": {
          "id": "763f2b9c-b910-420b-b87c-3607947b50ea",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f2719ed2-08bd-4742-8e45-32d69dbc5448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8fe8c6-b62d-41de-8eaa-5cdb32607a8d",
        "cursor": {
          "ref": "584b5978-7012-45c8-8792-b63d9200a446",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9a1a3446-9151-42bd-9d8a-1822f88fdc8d"
        },
        "item": {
          "id": "6c8fe8c6-b62d-41de-8eaa-5cdb32607a8d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "67c4c7d7-375d-4f8e-aef4-efd0d8ca536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c97a5c8-0d4d-4d71-8bc0-685d0ef8c85c",
        "cursor": {
          "ref": "4b45fe2e-2c14-4888-9ac7-d935e35064bf",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9fbf9263-dc28-4a61-85cf-23e78c9e3ed1"
        },
        "item": {
          "id": "2c97a5c8-0d4d-4d71-8bc0-685d0ef8c85c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b0e36a91-c714-4135-b649-6ba099e9a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebdef4f-f743-4a8b-bf18-6173e94af8ee",
        "cursor": {
          "ref": "1fafb026-1091-4c6c-8e13-56dde76a1102",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "98781bcf-7613-4904-a11d-c1a3b8df45fb"
        },
        "item": {
          "id": "8ebdef4f-f743-4a8b-bf18-6173e94af8ee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2b60649c-6799-4bc4-823b-47d8126608b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2885f25c-5e48-4ddb-90f8-c1b4552163b0",
        "cursor": {
          "ref": "66638310-3cc4-44e2-ba56-92f8dc4accbc",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ff7dc239-458f-44f7-9265-62e5604f0be4"
        },
        "item": {
          "id": "2885f25c-5e48-4ddb-90f8-c1b4552163b0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a1098c76-6a1c-4cb1-937e-f5848457e72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b6bee-f54a-4e6a-80a6-96029c0a16f5",
        "cursor": {
          "ref": "ddb3a6b5-2135-4de4-8636-654a08290837",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e9d9acd4-acfe-4679-be2a-dde828f0dd82"
        },
        "item": {
          "id": "413b6bee-f54a-4e6a-80a6-96029c0a16f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a1a59fdb-0b11-4c32-9f4a-9d98403a2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00936bf3-f9d6-4fda-b135-283b297e6a7e",
        "cursor": {
          "ref": "903ddc33-621c-4c77-af36-9b5553038d67",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46f3724e-c8db-4b90-b181-e73e6d0ecde3"
        },
        "item": {
          "id": "00936bf3-f9d6-4fda-b135-283b297e6a7e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e0ef43dc-a0e4-46b2-adeb-509927e553e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15871b37-eb12-49e5-8a20-44e207701864",
        "cursor": {
          "ref": "0b3c804c-1d80-47fa-b42f-4313a0efb198",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "201560fb-6168-4620-8434-df00843eace1"
        },
        "item": {
          "id": "15871b37-eb12-49e5-8a20-44e207701864",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "82c7c44a-0be8-42d0-ac9b-6a0428b73b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f56d7c2-89d9-4e04-bde5-49cd8055ee28",
        "cursor": {
          "ref": "b2088fa3-4733-48a7-9eee-b1c51d23625e",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "adc2d335-c5b2-47dc-9ce5-ac6e92289571"
        },
        "item": {
          "id": "4f56d7c2-89d9-4e04-bde5-49cd8055ee28",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "de8dcbfc-7992-4250-b1fb-e2ceae5228e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18196834-e1dd-4b8b-a848-f6e66f2f90c2",
        "cursor": {
          "ref": "6aba0660-ba03-4be0-9347-f754997db814",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76137051-26fb-4768-b2ff-264b3537de28"
        },
        "item": {
          "id": "18196834-e1dd-4b8b-a848-f6e66f2f90c2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0fa518e-1503-4f2b-8285-cdf4dd7109e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84df83-7433-4326-b41f-61abe3a07c8d",
        "cursor": {
          "ref": "9d6a0d66-b49f-46cc-b368-7fdb7590a0cc",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bec4b39b-20cc-401e-8593-e5ffeed86d3f"
        },
        "item": {
          "id": "3f84df83-7433-4326-b41f-61abe3a07c8d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aadd922c-e5e1-4ce5-9fd6-d90040dfd25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c78b31-9cdd-4895-a211-d1be456460af",
        "cursor": {
          "ref": "e6f2a5db-834c-4632-ae27-6aba9990d2e7",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a3cfe122-79a8-4883-97f5-b999ce996bee"
        },
        "item": {
          "id": "67c78b31-9cdd-4895-a211-d1be456460af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77bb8134-0d54-4973-8a8f-2795a83e476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb3c6ac-e1cc-48bf-ac0a-49f13104130a",
        "cursor": {
          "ref": "c317d643-defc-4072-b3a8-5b9d0e46a38c",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "11a6e9be-86ca-4d31-8f9f-e46deb730ac5"
        },
        "item": {
          "id": "dbb3c6ac-e1cc-48bf-ac0a-49f13104130a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bad658e0-41b4-4498-9e16-b9095e888add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44439f1f-60a5-44a7-b8a6-41bbd2abfffa",
        "cursor": {
          "ref": "1cda23ee-ef3d-4702-942c-5d3038680f27",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ecf381bc-d48e-4864-9e64-069596b5da0a"
        },
        "item": {
          "id": "44439f1f-60a5-44a7-b8a6-41bbd2abfffa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f74fc3bc-c09f-4015-b4c9-68dade266e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3842756b-8d28-44ca-a3af-84a08caabdc7",
        "cursor": {
          "ref": "4ff08b98-6b00-4700-9dc3-c92af31d4a38",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4535c90b-4beb-40a6-9d0b-bda893e1b4ea"
        },
        "item": {
          "id": "3842756b-8d28-44ca-a3af-84a08caabdc7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fe1f96cf-f0ea-4c1d-8a13-a4c6fb87014a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadc2acb-47aa-440f-9f50-e908fe80d9f0",
        "cursor": {
          "ref": "89d04b9e-7a47-4d04-962e-903fcf9e01df",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "18744340-d7bd-409e-b38d-8ee060b9a688"
        },
        "item": {
          "id": "eadc2acb-47aa-440f-9f50-e908fe80d9f0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c4ec986-ab4c-4fcc-9fc9-76a8d6b8d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e090940-09a6-4c5e-b65e-6a38ecc592a3",
        "cursor": {
          "ref": "6ec9f33e-bd6a-44a7-8d5a-66a0b649db91",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8b69e544-f04c-45ab-8cee-58c854aa985a"
        },
        "item": {
          "id": "8e090940-09a6-4c5e-b65e-6a38ecc592a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f8c3aa1f-bc75-4d20-95af-cf7a85f93b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86597a1-22a7-454d-a408-250d7103f82a",
        "cursor": {
          "ref": "8cc027d2-cb5d-4d9d-88a4-fb7e759d8c34",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "00984b7b-d5de-413e-96c7-6ff850206db5"
        },
        "item": {
          "id": "a86597a1-22a7-454d-a408-250d7103f82a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cab55dcb-6c86-49f6-b114-4769a06c6331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51999764-c86d-40cf-8811-a1e10eb0cbae",
        "cursor": {
          "ref": "24f9c62a-fe05-44b4-adf3-193676c54942",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3138fa9d-f4f5-464a-a7c8-e7eb92077675"
        },
        "item": {
          "id": "51999764-c86d-40cf-8811-a1e10eb0cbae",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1a2a78a2-4e0f-49b8-9b37-2f2978d8bd87",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d938de92-0693-41c2-9d74-140e4809d29c",
        "cursor": {
          "ref": "94f61e59-af00-43a8-96dd-204a6a040eb5",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1c9d1f9e-a9c6-41e1-8372-59dc111aad2f"
        },
        "item": {
          "id": "d938de92-0693-41c2-9d74-140e4809d29c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dde772ba-e43c-439f-ad3e-13c5d7c6ecac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d938de92-0693-41c2-9d74-140e4809d29c",
        "cursor": {
          "ref": "94f61e59-af00-43a8-96dd-204a6a040eb5",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1c9d1f9e-a9c6-41e1-8372-59dc111aad2f"
        },
        "item": {
          "id": "d938de92-0693-41c2-9d74-140e4809d29c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dde772ba-e43c-439f-ad3e-13c5d7c6ecac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40edba3-b0df-419b-87cf-8aea693e83d7",
        "cursor": {
          "ref": "bea2083e-39ce-48b9-a717-091151b2595d",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fdd4064a-428b-4362-a2d2-ab327dd477df"
        },
        "item": {
          "id": "d40edba3-b0df-419b-87cf-8aea693e83d7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2b1ea91c-9e47-4aaa-b18c-56cc8a11a526",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bcaa05-f765-487e-92d6-bfd48b428f87",
        "cursor": {
          "ref": "02b35f79-485d-4571-aed5-8034528d7208",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9ddfd624-f7ab-4132-824b-ac570ab71045"
        },
        "item": {
          "id": "a4bcaa05-f765-487e-92d6-bfd48b428f87",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1814d53a-7008-404f-a831-c4ea2e2cb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "a4bcaa05-f765-487e-92d6-bfd48b428f87",
        "cursor": {
          "ref": "02b35f79-485d-4571-aed5-8034528d7208",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9ddfd624-f7ab-4132-824b-ac570ab71045"
        },
        "item": {
          "id": "a4bcaa05-f765-487e-92d6-bfd48b428f87",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1814d53a-7008-404f-a831-c4ea2e2cb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "4371f0d7-f550-4ac6-bfaa-146db4c84363",
        "cursor": {
          "ref": "8f75d23d-c152-461f-9291-cc9dd5b7a7e1",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f913bc10-f0c3-4723-8724-0fe6ef76e20a"
        },
        "item": {
          "id": "4371f0d7-f550-4ac6-bfaa-146db4c84363",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f0dde3bf-927c-4faa-8086-9e90c53be04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "9dd1edfd-b053-49fa-bb9b-3a21e6d675ea",
        "cursor": {
          "ref": "4d1457a8-a600-48ee-965e-81c1c4ae8e4c",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "91b9887b-8171-46ec-a20e-f458daaf6e60"
        },
        "item": {
          "id": "9dd1edfd-b053-49fa-bb9b-3a21e6d675ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d53dffb2-0552-4c93-8ab0-037bc7a3072a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd1edfd-b053-49fa-bb9b-3a21e6d675ea",
        "cursor": {
          "ref": "4d1457a8-a600-48ee-965e-81c1c4ae8e4c",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "91b9887b-8171-46ec-a20e-f458daaf6e60"
        },
        "item": {
          "id": "9dd1edfd-b053-49fa-bb9b-3a21e6d675ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d53dffb2-0552-4c93-8ab0-037bc7a3072a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0095be4b-46df-4ff8-ac32-87cd4a8755f2",
        "cursor": {
          "ref": "e02e6a36-98a6-4e28-8be4-f4f6df7df82a",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ec80761-9db4-41ea-8ed1-aeb712a83585"
        },
        "item": {
          "id": "0095be4b-46df-4ff8-ac32-87cd4a8755f2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7312cb1b-5a67-4068-a580-50b87ca6c810",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}