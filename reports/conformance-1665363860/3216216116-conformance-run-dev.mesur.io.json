{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8bb32836-07ef-4277-99d8-d4a310035367",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5de2b686-eb38-435e-8f27-83ac42b3fc14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a200908b-1430-4cae-85f0-9cefd12c1a56",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "957b7ef2-2207-4ebf-9c35-9876effc7bf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9f92c3f-6047-4df8-bf2a-bbab237d8fd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b74a9e0-6730-46fe-a993-374509bc911e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e84ae5e1-b8aa-483e-885c-d66428e884e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "030a5f33-70b7-4f04-af2b-4ada5f88280a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cfae751-1bd9-42b4-97bd-28c2f9204591"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8977059c-7230-4c1b-b217-9e6998895a2d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b0e53b3-07be-41a2-adf1-e881af83ad0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "820798b7-a780-4c49-859a-338e62dc42f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b42af2ac-10a7-46a6-aeb4-2ccaea1b2865"
            }
          }
        ]
      },
      {
        "id": "26910e49-8d85-4582-956a-97b4d011a828",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2fe679a3-d687-4437-9a74-b40891484e9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a898450-eabc-437e-90e9-83843c807eca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c91c775-3599-4393-a2a4-b705148808da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b034cf4-55ba-43df-bfee-09795337ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46719937-5f54-43b6-bec6-bfb19545b4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4cd002-d19e-4b00-b36d-21e5a7f88028",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6427fa-c5fa-49f8-b767-b4ce3f3db0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4917a511-8a04-4b15-acc9-0741aabbddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e705f68-64f7-4ffc-b6be-2ccd036bc217",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcec38a6-53bd-47d2-9448-07161f1ffc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc6dba4d-ef55-46e1-8e0e-1b42a57766f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37a218ba-a748-4b1b-bc4f-30f7f1409d54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04d8c3ee-1a2e-44b1-b869-97acb311ebf2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e87e8d-07fc-45d9-b3e4-ceacc781f7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f7df59-cfe7-4744-90f3-1feac72975fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae06999-cb2a-490e-95c9-ca12893f607d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7f623e-b259-45aa-98c8-830191c9e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b156566-a77d-4e73-b1e9-87c0578f9f15",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf949f-aeff-4ce5-8893-05c47ddadae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d0f0666-de8f-4a31-adf7-dd85432285f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dc59cc-7989-472e-9bba-8b889bc25498",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "67458b71-397b-4405-b6a7-12992ce1239f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49d8cd45-e3bf-4215-9fb3-1e042b467a13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cdd7155-a567-434f-8735-771cca3dcce7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0fbc21a-07bb-400e-8736-3a3f4f5733a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f483fb65-19b4-42fa-ae2b-f8929fdabdc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d747107d-4f65-4fac-bf6f-8b6fe8c7fd3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b52ddf95-8c2d-4e8f-b1e1-a018b03b66b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00c05bfb-f401-486a-a6da-8636ccce9742",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29999e2b-2dc2-4b2a-9c2e-f6bd094336b1"
            }
          }
        ]
      },
      {
        "id": "4a5fd5c2-088a-46b8-a9e1-ac8681ff98be",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7c8e5dc7-6b4d-4c60-b198-fe8a42d7bbeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96c781f9-1400-43ee-8a8c-2670222b9c23",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "85a1d932-480d-442e-bac7-c1e7b9556507",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f49d3c-7099-4e35-b2b1-f248da832c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663365c1-0dfa-416e-bfaf-91c5ba7c536d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bf9ac7-ad26-461d-bbca-beb355e07d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b7fd2e-0c23-4664-ae05-9ad71e123b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50020f3c-a1bb-4e24-acd0-e9695dca167f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477d00f6-9ad7-43aa-8ac2-f0f095f44691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a948726-9123-4af7-b8fa-b19a2e4202fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d2801-3504-4e41-8732-e7f765fb158f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0386083-dc24-43b3-bca0-38811e059cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06668746-96b0-4ec9-ac73-cfd6d5772b2c",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416b9743-30e4-4ba9-be15-ab22d97c72cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c652e71-8216-4126-b544-f6873bd02b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c8bda-5dca-489b-bf6c-e4a2d8feaa3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc98afe-1ac7-4494-9eef-7e9e06cde79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a26954b-e608-4678-aec8-fc044a2ef87a",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441e2dde-e139-4b30-81bf-e18e6786be7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c52fbaf-0040-4d52-a673-7a9a5d85b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020bd52f-b952-49f5-9261-135fa2ddddb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6550e56f-c731-4ef3-88c0-25322e279dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6e15e7-fa88-4951-9031-9af63185aaf7",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4dab5-3f03-42cf-ab67-6260384d1646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372a1cf4-bb06-4b19-af9a-921caab8c7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2242d742-d5d4-41ab-89ce-146f7b106984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b5db85-dea0-4d65-a5cf-d6de0537adc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ca652e-5249-47e5-8e72-80b4dee321b3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3bc153-a508-457b-ae99-b76a93901bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae77e6f-2cbc-4836-8469-575ce6ffd22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306fde5f-29cd-4736-8218-8c06679ea4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ab36d7-5571-496c-9329-760e5c21de52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1664d524-395d-4fc0-ad19-96201fc42f2d",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0d821a-07a4-4528-856e-b96af12bde09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0744c74c-7978-4a8d-813c-69a6b539eafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9850aadd-5d30-40d4-979c-645bc93405b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32235c21-0e4b-4c7f-9b27-65bca94f1f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b73e7cd-4bc1-4cfd-8fc2-e69c4387a2ab",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63798455-2008-4a18-b5a0-7d1e5b0d31a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3556a2-852f-4dc1-9957-53101fcb5fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cf4583-f850-4be0-b4dd-a3d349b84673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46e1fcf-7b3e-4f1e-8ea5-101ea412c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb984058-b8c0-4042-8eb0-0a26ca9aa2b2",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784ac3a7-cfb3-4f04-aabb-0cf6c0e3778b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b0ac42-0cc1-49ae-97a3-2a6ddb02812d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82176ff9-2007-44ef-b306-a56de25b7d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3bec54-5707-4130-9156-a8da64042740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bdb177-5277-4973-b0fb-014e2dcf5326",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be7927f-66eb-4cad-b008-7eaf1b4d8b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f62b164-16c8-4e24-bb49-26f42c8a1ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7edcc8-1d3c-4049-b332-0202e8bcac41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3627b770-6e60-4b43-a8d7-3f448d5bb656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96761128-8374-4362-afaa-626dc214885c",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f7e750-c840-4b8a-a3c4-e116b836f0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bfcbc6-5109-4ea3-89f6-1c144f7037e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8216ecd7-c9cf-4ae8-ab5d-b40e828c1003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90bfefa-0d2c-43c3-889e-4d5caf37bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4394aac4-14d1-43dd-880d-1173a38e81f2",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed861abf-d537-4c55-a289-39a7b23d9a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6844a4-692d-4dc2-9153-210e002ac074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ec6c0-e442-4fe2-b8c7-50b89c2a5350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "29994a4d-74a0-4bb4-85f6-1b07f479420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c29db3d-fa4e-42d2-9dd4-21f0a91edb65",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea70661-3953-4362-8338-4af803c9e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4826a1f-2c47-45a5-9910-29eb4872d012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b29ed09-50f4-4e11-9b13-e08c8d289b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "2083b225-7b36-4010-9eb8-2814e4da3651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc310ab7-cc96-4485-bd47-e28cd9c6910a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c414d-8c6d-4d02-a693-fc5535441a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8589bf34-f11f-4c6d-9288-06fdded51c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e5a2d0-b88b-4d8f-8f95-b1d9e8bffc2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f32347e-d2c6-4f9a-9600-871346d5e519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3ada0-563d-4431-9d3d-58beea820461",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d03225f-a44f-4851-9fe8-cfccf1f89eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24732655-df8e-46fb-b522-0108c360b8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebcf498-c3f7-49fa-8942-b79fd3c20f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265fa92b-8642-40b1-b8a9-713b27fbe14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef09438e-8dfd-4a85-a30d-ec1a5ea805d3",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367900ce-eaaf-4854-817c-2eea3b7d38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4f2241-4dd6-456e-aebe-92142077163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771db122-cc19-4547-85e7-742884fc8b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "5272fabd-5ce8-4acb-8b64-629990e737ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a880cf-91ac-4006-a377-332cba54fdd6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062a6fde-688d-4650-ad2a-cc35fdcf1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f08911-e6ca-4aa2-8612-e0dcf8c2bfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e14dfe0-7380-425f-b6db-9301546f4ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "a8026fe6-4476-4f3a-b9a0-1e99cdee1958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204be27e-3427-4b2e-b5a5-624e3bd1bbbc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd1ef3-ee7a-4d5c-8790-225680076d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf4f96-09b6-4b69-a246-596b2ce6ca2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a33fe5-a650-4bbc-b34f-48bd3fdbd98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1725a108-00f7-4bff-975e-c5020c867898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb90b8b-cd3d-4c79-97ae-9ddc107e5bee",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0542ae-eea1-43be-9409-9d255daf0290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b327c15-9b23-423f-9ccc-626584c45e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b589c9-411e-4138-b510-94fff7abb461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366fc1a0-e4f3-4484-8ab8-20d52812a5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92428c51-facd-441b-9a6a-3c1633621e97",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e763d-14ea-4729-a49e-73cc748acf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7bc115-ec4a-4e87-bf57-2720a9fd0664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d87e106-6a82-4fbe-8e11-7c0115f2ac77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc9195c-a555-419c-bc4c-1e7a578e7a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b270c16-9ab7-4d77-887b-f503fe420deb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac73531-6b9c-4bb5-98db-d8e184f24747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38dea2f-f539-488c-a40e-eea832ad510e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06743bf4-1d1e-4d0f-93e3-5b023810a884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7041b3d-7392-483e-9c73-cb6c0833d01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f2142b-3238-4194-a3f8-904afc6de72f",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1ec979-03c0-4b42-9b9d-90daeabcb7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907b7a67-32bd-4c8b-9dc3-84625beada5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe9047-540c-428f-a596-7133a6592e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aef93eb-b5f6-4c9e-9301-65ba6af4df0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb031d4-a45c-4c69-8e39-8dd390740fa8",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a064d68-4747-48c5-a7ab-fef2e6138734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb3edd0-a07f-4613-807f-ebcd2a24673f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b84ace-7e26-4ca8-9e87-92fae549639c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa8eb49-0003-4e14-9491-79df43f07e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1538d635-45ce-4f5b-a839-62399340bad5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc509b24-7e12-47a4-805a-892bc1b78a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09e80bf-b995-4e83-8749-4c0e5a82ee25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e199d-1fa5-415c-8ab6-b758184684a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c77e29-6a5b-4bf3-8e64-ed399737c8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebf254d-0b30-4836-a89f-a61582a14934",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e183b7-7ecd-4f6a-8187-899dbb89b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dcdf46-8f47-4f75-a738-50a34f66af66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66838e53-8ed1-49c6-9f01-e85904e8a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c670c7f-2ae6-4b33-acf9-8e2552bb276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85364438-9229-4632-800f-529db10f948c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0c9aec-777d-4884-bb5f-42516697caab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefe4f69-87be-4af7-a221-b1a411eefa99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f688af08-5625-436b-a1a0-a797ceac4518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b7dcb4-1704-4dfd-b2c9-bd1470baac9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb2169-db29-465b-8d8b-1f2108263de9",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2651c0-a4b5-4d5d-9754-9c2fda9c2e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b696cbb0-9292-46e2-a998-1a09eabf9ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2533961-8453-43b1-98b3-47beb4701747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b107427-253a-450d-aedf-e595d103883f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0277bfbd-28bb-46ab-acf1-8e3544dc46ea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c26dbdf-1a52-4cff-b34d-96c474a0c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eb752f-6d51-4e25-a6de-eb2f49926c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81620c-3b14-4572-8f5c-93992dc6512a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc4e125-0a50-44b6-ab44-a1359025bc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f01a65-a4d8-433f-8a35-e96db1af0849",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfba586-eddd-4b33-b6f6-5e054ac16793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb21b15-ca15-4bd5-801c-941b57f34a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6549695-2c6b-44a6-b002-af64e8e66454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfaee63-85db-4c13-bfde-b2f5344f32b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da8fa15-0662-447b-b57e-e94393b35b2f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2210046-2704-4a99-b908-34f92bf5e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce9447b-7647-459e-81f0-5851acb8adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1d9b26-feb0-4775-ae31-71abff12bddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a36d599-07a7-4ae8-b953-7fa04ac6486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdf2176-8bfc-4995-b466-1d3a128f0d8c",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393fe424-e4f8-47d6-bc44-cfd22d1c374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae18639-dcd8-4811-90d6-fa1092c7622a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a37ad7-3ebf-40f7-b858-1456754c8f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc07bbdc-a2b6-4f25-9516-c5679ba09543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d306c8f-e406-4582-87d7-027243854fcd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ad3047-4ce8-4d3d-93fb-ff81582bcb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0aa4380d-387b-44a8-a3b9-4b2c3743c2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2db2895-774d-415b-83ae-d354bae8d60e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788e677a-0573-419f-b517-fd592ad89d99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dec7d782-620d-4cc8-9bc9-30cf339b8159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db3ed414-8db2-4ffd-b62e-d77487cfc989",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c7f1f-79a7-407d-84a2-61cb7bbb39f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc336b10-a6ab-4536-a204-2f8e260da537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5381938c-a8a5-4421-9198-308c5f80b85f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "90b7e4c5-469a-4be7-be92-d3d3b23b87e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad60fba4-97c2-4d20-8316-0f37f7a6aaef",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca96c1-276c-4513-a4c2-d3fb9af1d584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3854b795-7279-4a18-9297-c6fa73c87ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51677101-8049-4cfb-a035-cbb1bb812daa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ade6cb83-bc6a-4902-a518-95666308384d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55b53a44-f3e2-4711-8adc-fc7b470e9b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8b0f7e-b432-472e-bb89-ed0fc1f2e409"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0266af1f-96f7-48c4-be0d-96909f363571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aecba09-c9c0-4c66-912a-7366a4c2f462"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7159dab1-28bc-4e87-9a96-3a1a708630b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aea77ac7-fd26-4ca0-973c-9293b3df91ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "928da1eb-2a56-4975-b94d-6acddaa6b5b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d801225-fba3-460f-befd-b8fb60ddee77"
                }
              }
            ]
          },
          {
            "id": "f4bd46ea-35f8-41a8-846f-5e4d5f07ff6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef31a7bf-2b1b-4d8c-8015-174f03a17b71",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e54b6ce-567b-4614-9f61-8c74b7213791",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccea7f85-95d8-4cf3-800a-947ec02b3b3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f980947-648e-4d43-a82e-a59230784b53",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4ca7123f-e7f4-4d42-941b-fc7fdbdb757d"
                    }
                  }
                ]
              },
              {
                "id": "edba8780-00cf-4fd7-a8a9-d61f546c80b5",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1454b660-1fee-4f41-9b9d-1d8ee35c9f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ba51120-ca20-4a39-946f-9363641e4ddd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a73bf020-6b6a-4146-afc3-5ba6098416a6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b1e9c06c-3160-4fb3-886b-e9ab85e98607"
                    }
                  }
                ]
              },
              {
                "id": "1c43a2fd-5738-4ced-80a5-81a6d5b3d423",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eed7d78-0476-4529-9f8d-94de4dbd6c55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d209614-14a1-45b6-b40d-8a875bec138f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "967091c7-494d-4c65-888f-f2a353d6ef74",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "99dc4cfc-085f-47c0-9b1d-5a75da115bf4"
                    }
                  }
                ]
              },
              {
                "id": "2bb372ec-3b77-4325-81f1-4dba48dd0680",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70ffaf0c-8a0d-4f65-998d-b9d1f041199a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fe30638-bc57-4358-9498-a36600dd0b94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a38fd982-cd16-4e5a-971e-25d1e3af5e78",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f555e673-07ab-4fc4-b71d-40cc135202fa"
                    }
                  }
                ]
              },
              {
                "id": "0082cb8c-f622-46bd-b3c2-2ed4d82359df",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b97ba2d6-f20f-428b-8274-44ea688ab2c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1fe68cd-8b2f-47f3-9d14-d4b2ce1a03af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73c12b11-4bca-46ee-a602-14db69bf48e4",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8c56d6b7-eb48-4944-98af-e8520690570b"
                    }
                  }
                ]
              },
              {
                "id": "0c74cec3-3822-48f9-999e-6c91d2cf9900",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "180115dd-14fe-493d-ac12-2c0fd911fc94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02ae297a-1638-42b7-985e-279e2363af22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48b9217c-d6ea-419b-b73c-dc0b7d9cd89e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4b9a42a3-1367-4591-876e-2a27fb1a30b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "594e1ac8-e1a7-4d1f-a148-759d9e4e3d9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02dbf9c8-c331-41f0-a445-f62873692e0e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca18f594-828b-490d-933e-e39480a5b52a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "242d3e61-10cc-4ced-b3f8-34b9e9233390"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3627a17c-a2a5-4233-94eb-cd5f422119a0",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "9e957035-7625-488f-b20b-b13f708fb1cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a178b052-53f9-4aea-8784-b6f9825ff9f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db15c2c8-6f01-4440-98da-fe93d5418866"
            }
          }
        ]
      },
      {
        "id": "eb152004-5e69-487c-bccc-5f45799be1b3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "32b551db-898f-4645-9fe0-4291799819fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6f94178-9ea1-4a96-9dff-0c62d420e818",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e4eb644-3303-4e1b-8f60-03db461770e5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b80807a-8e94-4812-b644-e1d4e1dddcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc220dda-2fdf-4500-b8c0-a77b87e69476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d112a77a-582a-4ac7-960c-9659ae60daee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45f8cd03-5837-4c06-a720-48bb62895cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a278a-d158-4014-8f33-4ab5b27fc40a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2751a59e-e561-45b9-9eae-f98df73113f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "0f9a9e64-65d4-4032-a0fa-6784e34b568b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b922e5-b34c-4464-ab95-23734937f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f5f52bb-50db-42a9-a030-8fd0e59f0c62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2dc3f7d-a2fe-4941-906a-2557b66a7da3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ce5b398-174e-4681-b181-8b4066687f8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "662b65a5-8d10-4686-b3dd-82997b1757f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "564327ca-90f9-4801-8ad0-ce8d60aa5daf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "620da3f9-ff21-4158-83aa-017c5da48c8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "7d07a34c-bb4f-4f0d-9fd4-cb092fba99b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04510d3b-ff85-4210-83c6-5a5576535ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d422731e-eb21-4c4f-9ba1-df09df2725b2"
            }
          }
        ]
      },
      {
        "id": "b0d197a0-db77-4b0e-8931-312799fc4a35",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1f9c10d2-170c-4834-b13a-4023b62de3d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a94370cf-b64e-4b2c-b667-8be6b3bccf3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec454f36-1ba8-43f1-8fde-e3e5eb96f009",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f2f74d-d45f-40f8-87cf-74b80f2ce1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0276c85-985c-45fc-bbbc-b6fb413eff44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14de6139-b20c-4272-b80d-421e7ff09aa4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6185d6c-8c6a-413d-bd93-6c43ca3390fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ec1e0d-ed6e-4c11-9d3f-36f122b323d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74104893-80a5-4a62-9780-560320120161",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b67f1d1-8574-4936-a9d6-11b7c5dbce16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870a6c02-a01d-4c5e-91c1-da2a3aeadd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177441fc-7c54-408b-9efe-7fe277d1991d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562f1e2b-dab0-414a-9b3e-a37b0046bc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e219f43-cc14-49fa-a5ad-42453357b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b2b3d2-9315-4fbb-8b83-2bb67c6ff419",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886db6f-b673-43c7-8104-df4330c3306f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfa750c-eb55-454f-86b4-701a1cf47d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c938cda-4df3-47e5-94e7-38c3ea9bf5bb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8512f73-1993-4f81-86e0-5187333d738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585bf0b3-df2c-4509-9440-2c902f8ffac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f311fd55-e4d1-4c4b-9c83-f1dcbdc08f99",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61774f4d-3fb5-451b-a569-625ce8dbe95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e908723-ed6f-45b6-a8db-7c298d353e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0748ec-bcfa-46b0-bf73-6de8d35fa205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f37048-8210-434f-b713-66af33c52894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcba0a81-0c84-4215-8ec5-cafdf6535346",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce06eee-cb36-4c64-b45a-afc86765561a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69138ccc-4ede-47a3-b2cb-cd3417fa33d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6c058-5231-4518-881e-f3fcd56db47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef88c685-8216-4a8a-91cc-ced72b67f150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3305f79b-a985-4ec6-9d4f-59f3c6ceb068",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bf7ffd-909c-4003-96ce-17a7b42c2038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bafbc3-4ec1-4af0-aba2-6a06ebf8b46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb0465-1985-436f-a4c0-f7775f91cddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2afc3d-aabb-41e3-9bd6-99037a4901af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345ffd15-de27-41ea-99d8-6ae14503383c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dc3a45-b821-43f1-a0bc-9c928576ef45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81712780-6251-4f95-a3fd-e27bd9e90b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c80fa7-2b3d-4755-bb1c-e86bf80393d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce157110-a836-4db0-aef4-9019002c0c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755070d2-6a05-4741-982e-ed45f7059197",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae61aa60-aa13-4045-a7ae-ad05a6e8be3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880213bb-51f1-416f-8476-fa603d0c06d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1d8b82-05c6-408e-a386-046596cb8cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb459a8-1795-4c0a-8898-3fc945d99f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe8d2d5-de8e-4c02-b0f9-cfa74553caab",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5952a62a-e199-4c9e-a9a0-1f4328520155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24391242-4013-4b13-8fe1-402f1ec2d70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa77ca3-5dfc-43bf-8699-c8e2e20a8c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41bfe77-1362-4504-bb48-1d48027f9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3343e6-29dd-4a9b-b9c1-58537c682f6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407c0421-4eab-4fcb-b3a2-fa2d279e2ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a22b1e-1fcb-4910-b6bc-6f9f56e8d374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b6b3c3-178c-4d32-b8a7-ebd2568d16b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389f7615-8522-45ff-a60c-637097d0adaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaf000c-6eb8-4fbd-a4b3-a25c86b4ecb4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d28e4d9-3005-4085-9bf0-6f4debcc9e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6436375-775e-4c0c-8b62-2c5a28ebcad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96021d9-0c1c-4da7-b4cb-9a1056d8ae3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed0518e-0b9e-446c-8b37-6bfb69cff789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367615c4-af88-4376-8e7b-200c7b0de5bb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19162af5-9536-4d23-ba67-d5556d760aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64794c01-c7d5-4235-978a-337e605b1163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77cb5b7-452e-4377-9d49-d36c98449381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8dd28-aa11-4977-9ba0-6fda54ea821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b1773-a272-485b-843e-54878bc342f2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e007f-243c-4689-b543-533c5f054346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782a407c-5495-436c-9330-36c46f1ee10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f362d-7a3c-4cf6-8053-9c33b1e314e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80523d9-0e19-4df2-82bc-135a10934d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf3a1cb-77cf-45ef-b9bd-01de9dedb825",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1375d335-f0b6-4c1a-b3e5-6f3124430082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf117b4-3bfa-437d-a942-d66015a5058d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab30f49-7040-484c-bcbe-1a7f1d5d0580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7635820-0832-4530-b58f-d5ee1ad9c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74aaadb-d409-42e8-ad9f-d622f3e92b07",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a583914d-dc86-4174-b932-f656d9ca5213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4344e1-d3d6-4c6d-ba74-c6817888f310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0378f80-c4ba-464d-8ae6-30a18073c230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220cf3a8-69ac-4b69-847e-fbbcd299be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595879c4-56df-490d-ac1b-edf723a8c137",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c94be-2256-42af-b07e-1662e4f024c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec32c4aa-0b88-42cf-9444-e4de3ed78534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd4b5f-f014-4610-808f-5e746c76e6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd006142-87d5-45cd-8c67-db48b196dced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9d80e5-7849-419a-9115-006a5bb34b02",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc5df0-3a79-4be8-892f-37b33abe6cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca4fb8c-3c86-4d71-9a0b-ddd138705182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba39978-e2ca-4990-97a2-8e546e56cf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f0d79f-7906-4215-8cfc-b41b221b7e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b102b5f-f974-428f-8322-2fa51ff540a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff95dcc-9b84-46de-b8b9-185694f213a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5486f7-b539-47c1-856e-f09e6ef19919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91434dc6-dc0e-4b41-80eb-8c5b48fda0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e19006c-373c-45a6-b013-5c14820c8928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be84bc-a4ce-4c6a-b851-8ece3b06fe7a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe767f00-5466-4f59-a4cc-24ccd7d11090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcd5118-c01c-42cc-becc-4b9a7fe00236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c047f34f-0254-4cd1-a502-4f974b94a77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d52f8b-0b3e-444e-a5a7-896391c26694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee347df-e378-4178-a200-511672f6ffc9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e725b25-e0b8-49d7-aee3-fbbabe41ce9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ac93b1-cf08-4310-a6f6-03c92566ef95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5394a0-f2c1-411d-9523-1662032c6a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bb1050-bb66-449d-a00a-6cee042b51b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cd6382-dbd8-4d41-9690-45755c1ac1ee",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102a3133-c02d-40e6-99c3-4bf156d0efc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3220071-8d2c-405b-a535-923cb8c3c8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd084ef4-cc59-4f2d-a1e2-6cdb0248960f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17eb8d6b-37b2-4f1e-a6eb-946f02da27fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca236b34-48db-45c1-b2dc-842030f2a161",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e7f876-f05d-4c78-9aa3-9a7268e0c32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96737a4-77b9-4a48-a691-39350c2c16fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd92e270-467c-4cb4-ac20-6e4d920d3b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b804da-a6e2-4a70-8664-4824016903df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f23da-b62a-47bf-b518-183ec8a02822",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8068fe0a-f933-4cd4-8bc5-76475ce41b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e04eef29-c61c-4f9a-8e62-afd20a50dbc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7304729b-0601-49de-bbfe-aa7cbd38d29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5925a5d1-7506-446a-837e-1df470c3792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027f3dbc-cb1d-4edc-a724-fe1e65687a27",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b772f590-6d52-4a7e-b840-e852573cff8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b096cf68-49ac-43ee-afe2-d8616aa7c342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e861cd6-3bfa-4694-b2fc-aba8994c05e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a98d4ef-2cd8-4e07-b652-310012eb003b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e69439-72ad-4e17-b0d7-d0943c9a8c6d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314e8775-f4b9-45a8-829a-20f79b2ce5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743462c9-a4cd-4514-8dde-96740995e51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de11fa5a-c66f-4524-ac40-6519fb88edd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7101603c-c919-4efb-9d73-ef6561d28404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd3de86-df4c-49e2-94c0-91319d41aa7a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64056f34-5223-44f7-b950-d4ed91969571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64f1647-0435-493d-b243-2e0d02428309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cac084-2515-45ed-bc0b-a833c5b39d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed26b2b-16c2-46bd-90f3-ec45a6f92f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f73b6e-2f09-426f-9c9c-4d6396728552",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4325c3b9-325c-4826-b73b-bcd658fb9fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c09085-3165-4584-87e0-4f91d9497ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9105cc63-bcf6-4765-b659-4be3656ac429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7226fa2-87db-4341-9975-5bc305ec2296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a1be3-c956-492f-b233-9f7edcbbfee7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e5a2a3-d919-44b8-b3c4-732d7cc1d06b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5dd7fe1-be7f-46d4-b394-40c9757a7a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b19f026-2656-45d8-8ad6-4dd8e7761c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0b7aee-f950-4cdc-8594-f6c0b8529cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08d6023-7f85-4775-9f33-e6977b3817d1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632a77af-d83b-415d-b0a7-485995edea25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb17faa-728e-468c-8495-296f5bc1302e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d1bdf-8fba-407a-a63e-9d4b379c48f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13e1912-4488-4d4e-ab5b-893fd8a662c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466154e9-bfeb-4249-99c5-b70f3169b336",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75b261f-50b1-47b7-88c7-332f16760aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fd212a-f893-4d1b-8acc-a4d0a9d16a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f5a7b2-d244-45ed-a146-df50ce34455b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c27428-70e2-44d5-9dbd-f7634bcc303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3883a884-dfc3-43a0-bd83-09028ec08527",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0d4794-0fa3-4243-af25-2d76c0f82813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7777532d-2492-4ede-8aa7-d32afe8d781f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc4da8-9577-4e96-986a-2b0d6580d71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d53aeed-2a8b-4bf9-9875-02213178ef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6dad55-6c6f-4fbf-bc96-98e0b0acb91f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02eab01a-13bc-4e46-a18e-5a85bd3919a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f62999-be79-4809-9add-00d80f43c57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df85f55-f22e-4bf5-bb14-39a1799286b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0f3b7f-ce6c-49a0-a2a3-ae84acf84220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d6a324-3194-4970-a208-33a48c5f1567",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb58117-0852-4489-9e78-a50d7694a3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e974d4b-289b-4277-bb11-c1acf80711b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da559861-eb41-46bf-b6eb-eea225bf7d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8971d172-8685-48f5-a14b-5392ae35e801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ee542c-4abc-4cbb-bf6d-1a15382ea010",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb8fa2e-a767-46d3-9792-0aa377fafff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda73071-76f1-4f98-9c22-68b14cbccb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef89ab54-2bcc-4ad0-8d9c-d6594faf73b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8935fa18-959e-46e8-8e9a-ebdf19cc1394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0dfd8-19ec-42fd-8af8-5af60477592e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b931d8-ce75-475b-9cde-c47a3e7861e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d9b5f7-3ba3-4fbd-8616-d238cb175b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf7576-5ae4-4ede-a5b5-fb3a72eb388e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9a752a-abc4-4e77-a755-394e99c9ffec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefcd231-1754-4392-9a9a-45275b10d990",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b8ca3b-384d-4823-baa3-284d1f13281a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acf324c-9219-485c-84a8-f5ad24f46002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911a4988-1695-49c0-84bd-163bec04af34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8290ce60-eb30-4c68-a085-e7b2e62b2a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85633e36-5ded-4bd9-8c58-f5b0b0eac505",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c256dc5-016d-43e3-9268-6009451eeca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cbdca3-848a-47b1-bf51-63f599f4af7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3946c3-d5a8-4afb-99e9-44c9c27617ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd9e7f5-8caf-417f-b9a8-ecef4d1e4c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f90a9-4d7b-46a5-8adb-de58f4d90991",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13370fe9-217b-4403-b2c7-ea0097b686f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6582abc8-b622-4896-83a0-ecb2e3024dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431512a-3cd7-4542-947a-e0e46d4d98ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea312771-4a72-449d-bb45-218cc839ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b85326-8d21-41ff-96e9-f1015d4f884e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c919db-d858-493c-9b09-673665bcb1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115c2ecc-f09b-4545-ab91-77e98913b9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2783e7e-d7f5-4a63-a7bf-68fb714a77b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585488fb-4ce4-40de-874b-0dc154c44f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaa77f9-1d82-4057-a6e9-077bed32dd5f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dc3dd4-ca6f-43b0-92dc-ab57afc254ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287aa6a-185c-4d50-b768-4797e27c4895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800b14a-e0b4-4186-9b69-46e35a59b6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9403851-0faf-4566-8905-d4a82dc5af49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a464660a-5b99-4304-af67-c1c3c9b3c9db",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a709851-da03-4fbe-8a04-49b622e6e0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbc9672-f7d1-457a-9d60-50e04b634a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf4f56-cf89-47ad-a560-723c879af828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f816744-d3a8-408a-a16d-a88ee2ccf517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82463475-6536-4e62-b08a-e0ce7bea600b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3c4ca-5cdb-4fad-b32e-edda5e461086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876d04e-367f-4376-9930-e5e5af9519ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91f1027-6689-4863-a8af-a36b888c3d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbeb729-bdde-464e-9546-77e62564c5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf2a78c-c80b-4871-a3ba-1bdfc694aec5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc92bb0e-47c8-48ae-96b0-a5be52c782b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed9c704-784f-4fae-9c4c-6687e6d4017f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97c41bd-2f00-4e51-b9eb-9f220d896e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2cc3e5-7447-4c28-8dc8-b1d0f92bc94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390043f4-4a64-4e1a-9a04-bebd7038edbd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5831a402-c23f-410e-90ee-67596d465897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfefc21e-2f46-4982-b97a-b502f1b2cc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15d2e62-2d4a-4b9e-9a15-54052e115fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf00b90-da30-4245-bcb2-13edd763ebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59636158-ccc5-420e-8f7c-98cb908ad688",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72494be8-0ac8-49d2-b5d3-aa3db33cfcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84454153-7e0e-475f-9002-ea79d1fcf313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776a6beb-1f1b-4af8-9e72-0b0960c76677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aebe30-c6e0-4ec3-990f-6077ca6aede6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f7144a-7e08-4882-bf05-e5036e912c70",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6b77e-ec85-4027-a9a9-b36b7b763298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db2a0a0-4028-4477-8087-9a46b13d9c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ade3e2f-b769-4c53-af99-3a080f82e24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a122aa7e-0e41-4580-b050-bcbdc0d4445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aecffe9-a041-490a-bb0a-8a07597a491f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b4cf84-8366-4795-8940-f47969a0187f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41ef5ab-1e01-4f04-9017-0149811a7cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be63c994-c0a9-41b0-aa5a-0c879264a2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cbb36a-906b-4acd-8104-d9cb526c975b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5de57a7-7aa2-4750-ba66-bbc6c03b1418",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cf231a-859a-4a67-a07c-af4360476289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9acbc82-e8ea-4cda-977e-0e928fd6431f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187bc867-feae-4bc4-bc1a-c2d078a422db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a566c4-b264-4924-ac18-246316ca3a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcb6816-93af-4d5d-aa5e-6f96da04ddb7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c24b332-e8c5-4bd1-980f-8c093c0112f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1533acbb-318e-4517-bf74-e9310b6d7bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932950be-fe05-4071-a714-53ee2f5efefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1ee317-14f2-4346-9d00-2e86eed2d0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c76ad7-ccc5-4609-aebd-fe7a201409d9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b87042-7af8-420e-8cc4-8e0fed2a7b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ba9ca7-fbf0-49d1-b618-ca371d9bbe95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858b792-569c-4795-9ab6-44ef61a1394f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb3307e-3cd5-46bd-93c8-e849e570ca2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1401e79-3c2b-4b4a-a3bc-5f078019c195",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a76be2-d170-40fa-971f-42ce5fc2a3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec100c22-6e4b-4bdc-b988-08feb9da5d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286f9c8-b088-404f-9a21-963ce081c293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca9fd82-fa4d-4536-ad78-75bbbdcb7c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3573e63a-841a-408b-bfea-e2b3397e235b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc142ed-148f-4bea-9f42-bea1b3604054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25007a45-a788-48e8-b571-d5ae94eb48ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6136b81-4eb5-42ba-abbe-71aaac514e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b118efd-cec5-4718-babd-f37d304b588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a177f8c-d63a-4fe5-b263-c9ef3731735a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d1d69-d88f-46eb-b03a-85745ce0b3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75e75e3-1881-481a-8d50-e1b57b0bec42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5512f1-8822-451d-b27a-ac6c9dfec539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34baf5a-a613-4417-997d-c8b9bfb7a69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa307fba-203c-48dd-aa19-06e132a2d4b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0def108-8637-42f9-8043-ce0b57ae370a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddb78b8-51aa-4db1-8a53-f7eabd84d685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df46192-6817-46cf-93fc-b75e1a6149be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950328e1-7ec5-4c8d-b2f4-e2872d84221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e1a40-3f26-47a4-af79-1eb3f83b3a74",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361612c-1a1b-4150-a52c-b962829cb2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379d4d85-9c59-4b2d-9398-489960815aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1447c64c-4af3-45ae-8937-aec1bfc4fcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1f8fa4-14d2-4a57-83db-000d21615e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f561d4-8998-4e73-834f-5d03d3b53728",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cdc63e-5097-4373-8752-aed5a07ad9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f57c763-b2df-4fe7-bc6c-de002743016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3033d9-2549-4d1c-965b-0ef5fe80df6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78545d66-21df-40fb-8def-a22e6d7ffd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c13344-c420-4b87-ba74-de72b93c89e9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9505e3b-09b7-462c-b8e7-740e2ffd50ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6cffc7-479c-40fd-bd0b-4de73794d2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bdfc05-66ec-4752-98d7-3d799914d92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4489dba-ec60-4587-b68a-0b0b12a2810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b1ccba-f6ba-47fc-878a-bc9504c0b9b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8bb30c-944a-4297-89ae-14927d809dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64298dad-2bc2-4a42-ad7a-fab32cc4328d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed0af2f-aaee-4fd5-8fa8-1ff245db8236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3c1b21-1be7-4f99-bbf8-f949cca225c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd938c94-5698-4fe7-807d-9fb2410cc0c3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adab46d-439e-4b70-b443-d0f5a1a72733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc373c2d-5a6f-42d0-9a4c-67b0d0ff3b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bf0a12-ecfb-4cd9-bba3-02bddef5acc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a96453-d155-4a18-8ae4-460618c9074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ccddf0-d83b-4aa8-9540-4cb1b638c3d8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b48eb33-b4d3-4c47-aa26-9078ae165578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ee3da9-8b96-4913-b5be-1336419cde94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3201cd-490c-4d52-a578-6b49500df685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46352ee-36d5-4917-a906-8b5d8c4a521a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a494ba-8153-4793-a838-3ff37f94f49f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe9c0bf-baa2-4bee-adda-a79fff70a382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaed1dcb-7eb7-4b05-b4b5-85250c3160a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3a708d-de33-418d-ac0e-6dd190003998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd86f81a-fd7f-4724-9719-89a2c8c618f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4a2221-5d97-4a1c-826b-cdbd3715eb91",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831df81b-949c-44e8-a978-158bd35fb1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32da17de-20dd-43c4-864d-a0c91a240777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d4282-f4b1-4049-941f-1df4ddfca867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b3f467-2214-4314-bbd1-02fd91fba32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe33db-175b-4def-9829-aec8a0cd6c1c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a6896b-9061-473d-b179-f39e0e91e269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c02ab8c-57cf-42bd-82a5-9a89ae2f76fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fbb96e-0b57-40db-b09f-13091d5626d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd7cd4a-a033-4445-b2b6-03dc57af058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5df4dc-d7a5-4618-8d43-4f6994c36f00",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1201de5-fc9e-45a6-a9f6-ba2e894d55c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fd7c66-6c0f-47c4-b78c-f2aa6678a8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4e5c9-3b40-4adc-89d7-1cf25599015b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba09c3-ab32-4c2c-a714-5048480216e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66db84a-207c-4eec-b53b-b39de71892fd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6bfdb5-af1c-4798-b7f9-18153f115fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88574fd-0e96-4eb9-8738-b217004c657d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99300fc5-86f2-441a-893b-a349ca6c2b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cc1dbb-9af3-4354-9121-5ca971e8c949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d5b5ea-d824-4c76-9b49-1c4ceec673b4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa0d6c4-04ba-4af8-bbb0-b46293c9e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817f9525-9549-41f4-acb3-e0c60a0f45ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ee49a5-fdfc-475b-ae57-9cff79ed651f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55afcff7-17e7-4976-9c46-6d6db2d06b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2844dbd2-058d-4809-9b8b-c87b4896c7f8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41bf5d9-87bf-4103-b7a3-aebb1f3db4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a2f331-9c7c-426e-b519-d03dc335984c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad7d5f5-afdb-433f-a64d-839796c79ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdad08dd-0c75-41a8-a240-5917df9ad4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3d0e5-59eb-4420-ad0b-5ff37825c2b2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d607c1-7d04-4cba-81d1-81565069a4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebbd3d55-6b42-4b35-95cb-22865cd4df3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b5a710-bd65-426b-92e5-6352ceb71f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e1e51a-8e37-49e0-b5fa-b34e06d4db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed2eb2-eb71-4c2f-b609-fb851cf6e8d3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2665352-8916-4659-a931-cb876e443f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94c9b47-705d-489f-a60f-3cc317dd5b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda1ebf-f7bf-4d29-aca4-bddc8cc8f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fab126-2b37-44bc-b420-7a1b9886f613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d9fad5-cf84-40b4-ac04-39860b9fb19b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b6a62-c4f9-4bc3-8ddd-f93a5ce9a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0927d9-e388-4c66-bf65-d1bf9e5e416f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d15075-92d0-4052-af5b-446005175037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7a1afb-1ffe-44b5-a9fe-3c3deff0c1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d088b90e-545f-452e-bcae-b8ab90712db5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efbc2d2-4f7e-47b5-95da-d9e0e60db231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cd82b7-3f33-4096-8d7e-49539b842f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c1809-7f72-448a-8cb5-41ecc12942de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4505f5f1-dfa3-497d-a4ef-b8205226b7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d10212-4c88-4423-b835-ea5a33d25185",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be212fba-d85d-4057-acd4-e0c11fa68353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3069a590-ecbe-4245-833c-a65dc6c5bd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdd1f9-cfa3-4fd4-82d4-31bb856ce892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be62bc49-6ab8-4949-8caf-a21cb6ba01fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d992644-82d9-403a-b71f-c3787f1ed99e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a897874-2822-47b6-936b-c914d1b4d949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f15cac-4f12-49a0-b7f5-6b90c4df2c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77760f-d821-47f5-a2d4-04da6d44f3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f71f929-f84c-4400-9ceb-a92ca3c6f241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a9b6f-7cc4-4759-bc4f-f4902bd620a9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b7a50-648e-43cf-a736-d598744564a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5554cea7-1f3a-427c-a7dc-efa6bab8295d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e708f-e442-43ca-b57b-76f6bff6b23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6e212e-f5be-404e-9004-cae46208f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302f295f-a362-475d-a8a5-d6f5829d3a53",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbe081a-3f15-417d-a3d0-10525c973e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1cc06cc-da62-4f00-b67d-9a07dd0c0abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a16266f-4397-4de5-ab1e-386501cbf83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5366c0fb-d431-4b9f-81df-043861d32913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa8a836-cbcb-4177-a2ce-23fb300874e6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12931486-b79c-4f8d-a66e-21f235ceeaf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c27d61-ae04-4d17-86e9-462684c7a44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d82307-847d-4f93-82d8-aa332eb85a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b1c22-04a0-4184-802f-96b070bbbd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc3db3-06f7-423a-a49d-baa4b389c27f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25355ce7-7e6f-49cb-a40e-91596b64adbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b770383-e24f-482e-a321-c3409c5b29d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e92c4a8-cedc-4e97-ab4b-73730807b9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4586c12c-eab2-450a-a8fd-e593b8af3038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019de332-f106-4984-a306-b91432a5a989",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd36a6d5-c602-4888-b2ae-d71cca20350d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508cee54-cb5b-4575-911e-7db1e7ef48cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd40294-bd5c-413f-b929-c5ec19b0a8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c53530-8a82-49dc-9cba-bf4fe093c21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca4cf2a-56fa-4927-8067-4f35c2323cac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea3ae6f-30e5-4a55-987a-24f2e019247b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0ad34c-7761-4685-8d88-457c53c6864b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7520e2c6-d87c-4da8-aaf3-e0ec34120292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c52d52-05a0-4191-a6f7-76a07b78c4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec925b9-38e1-4abc-a4f6-da51e6092a13",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9518fbe5-3b89-421c-8aef-d858c4d65b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732419ed-442f-4f2b-95a7-1e26d571051b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6d2ccb-a8c3-43f2-8435-775095ce3a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2034101a-8241-4085-bf9a-07ec4fe63a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44430cbc-b32e-4fa0-89cd-cc5e1df2dc0c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b76a14c-26cc-4547-8cf5-1add1f66ca2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a31dcdcb-db53-4c4e-8c38-68def7a83aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02020904-f096-4277-8fc2-f035d07c6c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a69d5e-4844-4a1c-825d-dc4c3c10f2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ec0db-8eaa-4e62-a1ca-e47665c5c3b9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a707c93-d210-49a5-bfb2-ca4c34c9f422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b0d3b7-9ffa-4472-b4ab-3fc1b5dc3eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fd6ad-953e-45a8-ae4f-9ffc37c201e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee797371-8cc0-4aaa-970f-db3529749647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdcd884-aae3-40da-9d93-bef5e36d4ac4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17d665-8f51-4543-ae71-a5fd8f6c02d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14777c72-3d44-4b7e-ae07-b016280fb7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2bae70-f1fa-4cf0-83b4-3e0616e7054f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ebb387-4ebb-44f3-8ab3-13b80ebc26c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d93bed-801e-4cce-ad7d-a2626c824a65",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4946c3-d466-498a-8a5d-883e9e5d9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ff8855-d226-4be4-bbe1-2fcece7ea07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf6f5bc-63db-475e-a242-78d0f32d4c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51aa4b4-15be-4408-af7d-9018b113230c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf55979-a29e-42fb-9814-ab7e6e317332",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a586a2a-7aac-4b3f-9dd5-afbb50584979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f0e6e2-feaf-4bff-9ed5-cad39d40a24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44e3f59-9981-48ef-bf16-86581e826c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a375641e-5c60-4b1e-8000-fcaef79b203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8b93a7-8991-413d-9fd5-6bba610653f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399779aa-32d4-4870-a5fc-eaff54c18e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01d7eb3-0c80-4bef-b0d6-4c4dd96f0782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd19cae-d3df-457c-b154-ccfd2893e109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dbf900-d3e4-4d61-b356-65113920689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2111f5-1d16-49d0-98da-40f8be9d3d19",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f547cb7e-5dcf-4ac4-b42b-58cdb807816f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b16775-8b6a-42cf-a62b-556a5471e5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8eea58-6b0e-4344-bb68-ca1ba2d2cbb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896d0fb4-f00e-498c-9778-1d329e9c2005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77752c6f-d54a-4fc6-801c-00533bc0e811",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef751c5-8d23-4191-aa4c-b2c0976d9e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9141d3-04d9-4fd5-95b2-f9e68ce5fea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458997bb-ae24-4471-9918-2ca62a2ce2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03bdce4-6cb2-4cda-8dd4-405d46044327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe46059-38e7-4077-98de-cd0ca31d32be",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631a5cee-ff40-49fd-9f3c-0c7b3c17aa95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5c2986-629e-4d7b-9e78-64819af75ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286948b8-f91b-4e72-88a0-1c17925f324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71b7c9c-92ea-427b-9ad2-5cf97a3030ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ba0dc0-4796-4122-899a-9df771592dde",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b5c0d-5295-4eb6-9b90-96d10a45c07a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04494d81-475e-4884-a00c-0c9d2dd53521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539b4db-f699-4403-9147-20c1dd29f200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d523d-b4cd-4e06-b03c-d1b21e5a4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db69185-c0b5-447b-9c41-9280b828ce0d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e318ac-4740-4360-8e76-f27e4257f22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04fb5f21-8944-41c0-ab41-a1f064206f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521319fe-bec4-4d1c-8b61-ff24d7cde7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062d274b-c8a9-450e-a568-9fa40bad3e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a1a04-ace9-4972-a643-455a09438a22",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e70dd15-2631-4b6b-a643-60feb4bab3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32dabe6e-5c22-4a10-8391-0833afab5065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05966618-4399-423f-970a-9e75bfe19da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95635a88-34b2-4c41-8b3c-ddf92ab53d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3bfc21-46cf-49a5-8f9a-8b620a4d5c87",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6055e540-b307-457f-af27-60b0458e5cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8073a24-4799-4638-871f-a17cd33b6f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162b4929-dc93-48d9-bf90-57c85a562c7f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31348f86-9203-4392-b7c2-ddd35e49fb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ce6b5a-d836-407e-8a8a-568fe67134af",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc84436-7cbd-4b12-b00f-6ccd1394374d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf00ed2-192b-4ced-8511-a53fb358f90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a42c27d-10d8-42e7-9ae5-d4e799b458ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1990b3-a344-42d6-a320-7f8e86997efc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f7692fb-eb27-4609-a6bb-5697dd98314d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be5df812-3383-4afa-ad88-b304463250af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab50ef3b-d2d4-4ee4-84db-1cf4b87e36db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f29f1df-a660-4b19-8b18-77225e5afb35"
                    }
                  }
                ]
              },
              {
                "id": "382a73c6-5d2d-4075-997e-fd8fa8783300",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fa395a7-c1fd-49a2-8559-479ea2224e7a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc8ce46-5158-4b53-a258-c133c9c92cd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e2ce9c3-ad59-4e37-ba7b-f57442c2c455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01400302-7fca-414b-829c-21e41b2f2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b18495d-4bce-4a95-a2ef-3ab3341d9c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d22911-5f16-4862-b3fa-f4c0fa217ff6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77462fd-e654-4011-a70e-c795535da46d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9366a63-a055-425e-a28d-e329ef69e45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765ce462-8a3b-4e9a-9664-cc6247e8d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d31b6e38-e5f7-4ec0-ae43-c35ed25fdb1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e4d9363-314f-40f1-a4e4-8ca7b458b5c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2724e35-f0c6-4cdb-855f-eb3c1ef9ebdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6692981f-779e-4fd6-8e7f-d4a0cf6d35c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17032fd8-6a11-40fb-839b-cced95f945a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "ac8b6ee3-2525-4904-b035-a4897d80928d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2480a804-e50e-4ef2-bcb7-57579b93f29c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edded99f-993f-4004-9c9f-50edc076e461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e97ddbb3-9981-4819-b79f-35c4d55a641b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d6b3310-3a5a-4901-9232-f72eb0ef015c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "217ea2cf-8564-45f9-86f8-b93cadda28be"
                    }
                  }
                ]
              },
              {
                "id": "d18e0c47-93af-4416-9985-74924a392804",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "703d2afa-5485-4634-afae-786b4fd43f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fd74e7e-7db1-49b2-8214-c7f5c872124e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dbbe84d-5170-49a1-8452-11a0bea414b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b6038ae-6ea9-455b-aa92-6db1c5b47f83"
                    }
                  }
                ]
              },
              {
                "id": "412fb7be-4f7d-469b-8d3b-9680e4444dd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ebfaf0e-b33b-4c8e-9e73-28e53e8b75be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6793f720-7ab1-4945-a474-be35dbb1db2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "544f9132-6d73-4c1e-a646-d782813177c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2acfed16-c27c-447c-9c96-b7b0afbf3573"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69e371b5-3b1f-4f54-96aa-aaaa2cb52fa2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2c4db5e1-ed17-45e8-92f0-b4b6d6f570e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eb24934-aec4-4165-9750-7ba451d1440f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b8869b-fad1-4be6-a880-c55380bbe689"
            }
          }
        ]
      },
      {
        "id": "7ee0ed34-8cb1-4048-ba45-275b25365bfb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "372ea874-2747-426d-9105-616ab57549d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9a7a9e2-ca97-4d66-8be9-8cf02007fb0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc5ecd-477e-4b8d-8c02-2abef34b010b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "207adad6-d77b-4fbe-94ee-ce8fa2121796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8130fc65-01af-4c78-a702-1efa253c0bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6c2f76b-850c-42e5-afaa-55e9a229963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fb7fe1-d034-4a35-86a0-307336c7608f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb85fdf6-9722-45de-86cb-c25dc5a7ca15",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74930baf-dae9-4006-b686-d0c85ac72442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d0bda6-06bd-4bb7-a582-95c1cc899a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d45cbf00-6e38-461c-a3b6-f1ab400b5d79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec3e0732-953a-4a02-9f2d-326fd4bdb3a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ce4469b-339f-4c3f-9561-756f5706cf65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b301dc61-aa96-41bb-a0d2-ffae6b4ee4e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5386ac26-2dfd-4e1d-9b7b-00c0b799386c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdfbc6db-7c16-4adc-a302-00a03a64b97b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fa728ba0-70c6-4bd7-884b-ffd9eddb803f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53c86dd5-d2d1-4e63-8aca-49af1ef6e38a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f896797f-1cd3-46ec-8192-f0f270b88ffd"
            }
          }
        ]
      },
      {
        "id": "3163612f-2964-406d-82e5-ff3b53d6c482",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3bc2c34a-9cb7-4def-a3d2-c18cda8229f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb37501b-ea4f-45de-a127-ee83834d66de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5aa34dc-161f-49cf-8b23-77bb524c873c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5234a40-f3fa-431e-9444-de0755cc3d80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fa8b5901-6be8-4d88-abae-7f4f22c16188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d60d6b3-78cb-4d4d-a804-0bb8fee006aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10c101f-b344-458d-a1fa-86521d8deb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf54f6d-4256-41aa-8b8a-885c301f10ca",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c351167d-f6b3-44ef-871a-d25e490eca51",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a56e0a9-82b7-4261-a600-77e21da94e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4738a821-11b6-4ad2-a00e-609df14c9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d204ca0-4cfb-4ecd-a4cf-d4f78f5a2eb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0138dee-cf62-44d9-af66-36eca0c28698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09afb746-eb85-4dbc-9b6c-c17d1dfb01ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5b00336-e954-4dfe-a130-5486e1a6625d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38201643-b722-4e7b-992e-afa48c3f64d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d2b8b41-8a87-4332-8b66-fd5830a8698f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9c7b5dec-c2e2-46de-82df-55b3c3cf5dd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ada8ea3-3a5a-4a91-95de-279bc3cd4ae5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eadd2a06-d098-4668-89f1-0b2dfa20cfde"
            }
          }
        ]
      },
      {
        "id": "6acbe490-1457-4d12-ad67-a7de4d7e7c28",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b26ae062-f6a8-47ac-88e6-5cc6b741ca9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c0e4e08-a185-4156-bf02-24e0fd637bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "178a7ccb-796e-4c68-983e-c58c22924fd9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b5ff5e-e67b-4c04-844a-534021a22518",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "64870e29-ff74-4df6-84cf-30d39cae34ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cec096-46cf-44ab-8ae7-16de87575b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50e70513-6fa1-497f-93ca-11daeb17aa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b22ccc-092b-4d81-9faf-e5ed62978356",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccf6213-da7c-4282-9112-fe9c87fac396",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af14e236-c12b-4e7a-8a8a-3c3ed49c7061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc8e7d4-6f01-4804-93c9-93ec5a5c7c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7924ef14-bfe8-43db-a0fd-9cf6bd1330eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "430bfaaa-adfd-4ce3-83b4-99932489201f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb5bd3ad-fbc8-4d5b-a0ea-c1f68d04ccb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1d045b7-1313-430a-ae02-481866a78555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6997e53-0daa-4874-8eb9-fa8bd0dda822"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3d8616c-d007-480e-b198-d38a86c7b2b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dd68c9ef-450d-4a24-aaf7-6042ebd52a12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb8341f-6cb1-48af-b1c6-4032e26461b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b297729-52f4-474e-aaa1-9606266e8fae"
            }
          }
        ]
      },
      {
        "id": "364bd207-d854-4f12-9069-f99309d357b1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e559315d-f3bd-4650-8db0-058c71c547c8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7ffa13d-30dd-4550-a48d-d769a4c18caf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e125beca-88ce-48e2-8283-090e97471c05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4d1c847-26a2-4a45-b7a4-0aacca3299ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad406a2e-6000-4138-8d85-6d1154a3ab2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1231,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 166,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 621,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 610,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 201.3493975903615,
      "responseMin": 5,
      "responseMax": 2639,
      "responseSd": 329.637659188174,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665363572107,
      "completed": 1665363612649
    },
    "executions": [
      {
        "id": "a200908b-1430-4cae-85f0-9cefd12c1a56",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3e93a784-b19a-4b44-9be8-a63de218232b",
          "httpRequestId": "242f244f-3438-4385-8554-3b1528d1dc23"
        },
        "item": {
          "id": "a200908b-1430-4cae-85f0-9cefd12c1a56",
          "name": "did_json"
        },
        "response": {
          "id": "92492772-52e7-4bd2-957e-77e739bd5ac8",
          "status": "OK",
          "code": 200,
          "responseTime": 2639,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91c775-3599-4393-a2a4-b705148808da",
        "cursor": {
          "ref": "ff075028-4a89-49dc-9cce-ac2431ba65a4",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3fa23c21-4825-48bb-9764-e1c63806e86c"
        },
        "item": {
          "id": "9c91c775-3599-4393-a2a4-b705148808da",
          "name": "did:invalid"
        },
        "response": {
          "id": "68dd3267-cb3d-4b9e-8264-9f7b4c30e4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91c775-3599-4393-a2a4-b705148808da",
        "cursor": {
          "ref": "ff075028-4a89-49dc-9cce-ac2431ba65a4",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3fa23c21-4825-48bb-9764-e1c63806e86c"
        },
        "item": {
          "id": "9c91c775-3599-4393-a2a4-b705148808da",
          "name": "did:invalid"
        },
        "response": {
          "id": "68dd3267-cb3d-4b9e-8264-9f7b4c30e4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4cd002-d19e-4b00-b36d-21e5a7f88028",
        "cursor": {
          "ref": "52ed8c30-0849-407c-90b0-2428a8b0e5a1",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bba6d842-49f2-475e-a6f4-00e964ca6197"
        },
        "item": {
          "id": "5d4cd002-d19e-4b00-b36d-21e5a7f88028",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be2c4e96-791b-41e6-bf64-187b31111511",
          "status": "Not Found",
          "code": 404,
          "responseTime": 391,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e705f68-64f7-4ffc-b6be-2ccd036bc217",
        "cursor": {
          "ref": "7c40a009-e68f-406c-8fc4-7404b373a4df",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dca0b9c1-39dc-4078-8676-c146ffe27890"
        },
        "item": {
          "id": "6e705f68-64f7-4ffc-b6be-2ccd036bc217",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a5be4a3f-0d37-4fff-8abb-98d3a2cba481",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d8c3ee-1a2e-44b1-b869-97acb311ebf2",
        "cursor": {
          "ref": "3402c5f8-7a29-4a4b-b988-401f9d8e26cf",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fb9c6ff2-f189-442f-8d3a-f2f0514c9752"
        },
        "item": {
          "id": "04d8c3ee-1a2e-44b1-b869-97acb311ebf2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dce0b2d9-af5f-4e95-a031-eb76bcb1590d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b156566-a77d-4e73-b1e9-87c0578f9f15",
        "cursor": {
          "ref": "c36836a9-7e8b-461f-a043-1111a48f7613",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71f77e59-2a90-4708-bc2b-4b7bb3e5cd8c"
        },
        "item": {
          "id": "6b156566-a77d-4e73-b1e9-87c0578f9f15",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a693ff46-6c91-4858-ab08-dbbd7b8b5933",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b156566-a77d-4e73-b1e9-87c0578f9f15",
        "cursor": {
          "ref": "c36836a9-7e8b-461f-a043-1111a48f7613",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71f77e59-2a90-4708-bc2b-4b7bb3e5cd8c"
        },
        "item": {
          "id": "6b156566-a77d-4e73-b1e9-87c0578f9f15",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a693ff46-6c91-4858-ab08-dbbd7b8b5933",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdd7155-a567-434f-8735-771cca3dcce7",
        "cursor": {
          "ref": "fdb0948f-805c-4817-bc18-55998fa75c14",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3ceaf733-564e-443f-b8a0-99d7518d9505"
        },
        "item": {
          "id": "6cdd7155-a567-434f-8735-771cca3dcce7",
          "name": "identifiers"
        },
        "response": {
          "id": "bb962eac-c0dd-4efa-be22-dbffd1098fd1",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a1d932-480d-442e-bac7-c1e7b9556507",
        "cursor": {
          "ref": "7642c8b7-e71b-43a5-86c2-b7de1cfa2158",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cfab22b0-ab99-4ae6-a0ff-4a8e30643054"
        },
        "item": {
          "id": "85a1d932-480d-442e-bac7-c1e7b9556507",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8c4da22d-1798-4625-9e56-4dc616d351b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a1d932-480d-442e-bac7-c1e7b9556507",
        "cursor": {
          "ref": "7642c8b7-e71b-43a5-86c2-b7de1cfa2158",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cfab22b0-ab99-4ae6-a0ff-4a8e30643054"
        },
        "item": {
          "id": "85a1d932-480d-442e-bac7-c1e7b9556507",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8c4da22d-1798-4625-9e56-4dc616d351b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50020f3c-a1bb-4e24-acd0-e9695dca167f",
        "cursor": {
          "ref": "e57a691b-4cd4-4fcc-b17e-0bc91f9a9ab3",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6fba4e6c-ed85-47df-92b6-b7204c6b90f8"
        },
        "item": {
          "id": "50020f3c-a1bb-4e24-acd0-e9695dca167f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8bf83c66-ba97-46ea-83c8-f336fc15295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06668746-96b0-4ec9-ac73-cfd6d5772b2c",
        "cursor": {
          "ref": "617a2879-c489-4680-8565-d838a6d5a743",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a88195a2-b966-4fde-95ec-6718c3e14046"
        },
        "item": {
          "id": "06668746-96b0-4ec9-ac73-cfd6d5772b2c",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "70e282be-f889-4dac-b518-ec4cc1dbca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a26954b-e608-4678-aec8-fc044a2ef87a",
        "cursor": {
          "ref": "7c010999-c649-4325-b7d4-a55fe46a20e2",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c5beb7a-08cf-4d27-8e60-700821da36aa"
        },
        "item": {
          "id": "9a26954b-e608-4678-aec8-fc044a2ef87a",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "9bcb29bd-a204-46ef-a46f-e64d72212473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6e15e7-fa88-4951-9031-9af63185aaf7",
        "cursor": {
          "ref": "511fc3f7-4db8-4cf6-8db3-aefe75e6f992",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "15893ff4-836d-47ac-9496-51a30d02cf20"
        },
        "item": {
          "id": "fb6e15e7-fa88-4951-9031-9af63185aaf7",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "226be7ef-ce85-44d4-9ef4-161c3acaa48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ca652e-5249-47e5-8e72-80b4dee321b3",
        "cursor": {
          "ref": "62b6e0f3-c3b5-41ec-9067-1ba6b13d4cea",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9c1df2da-348e-493a-9f95-504723a15123"
        },
        "item": {
          "id": "05ca652e-5249-47e5-8e72-80b4dee321b3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5a551b58-cad6-47da-8683-0a5398a38716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1664d524-395d-4fc0-ad19-96201fc42f2d",
        "cursor": {
          "ref": "684f0954-8c6b-4e5b-8cea-12a13100dce9",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b0eb0e37-9927-4d6d-b7a2-f5ba039bf67d"
        },
        "item": {
          "id": "1664d524-395d-4fc0-ad19-96201fc42f2d",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "bfc2d7b5-2d89-46f5-a897-71bb74f9f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b73e7cd-4bc1-4cfd-8fc2-e69c4387a2ab",
        "cursor": {
          "ref": "7d4825cd-ffa9-42bd-9114-6c6450d6e682",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "056eadaa-82bf-4e0a-9d9a-62738485bda1"
        },
        "item": {
          "id": "5b73e7cd-4bc1-4cfd-8fc2-e69c4387a2ab",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "26ef6096-8a28-46a5-aac4-a655215f4346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb984058-b8c0-4042-8eb0-0a26ca9aa2b2",
        "cursor": {
          "ref": "11fd1de5-dd93-4aaf-8d4f-e820cf246daa",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9596e31f-e565-4a6a-8012-9a2c35050890"
        },
        "item": {
          "id": "cb984058-b8c0-4042-8eb0-0a26ca9aa2b2",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "b12f04c7-ae30-4369-a81b-099d5e438595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bdb177-5277-4973-b0fb-014e2dcf5326",
        "cursor": {
          "ref": "c8c7299b-63d5-4c40-bff5-a17c1919634d",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e01410d1-5e47-4923-a2c4-cb8611e761aa"
        },
        "item": {
          "id": "36bdb177-5277-4973-b0fb-014e2dcf5326",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "445d293b-7df7-4517-8b84-829736094856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96761128-8374-4362-afaa-626dc214885c",
        "cursor": {
          "ref": "4a0bbd7f-b7f9-4a19-a434-5ab2895cf35f",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "63e449f4-83b8-42c8-93dd-0b829b17c17d"
        },
        "item": {
          "id": "96761128-8374-4362-afaa-626dc214885c",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "65fd44bb-e959-45e5-b705-173a640d6d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4394aac4-14d1-43dd-880d-1173a38e81f2",
        "cursor": {
          "ref": "5a0dcbfa-dce3-44e2-9c6e-23994e93304e",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "083a12e0-9890-4804-8878-1d5944964c1e"
        },
        "item": {
          "id": "4394aac4-14d1-43dd-880d-1173a38e81f2",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "3b81e7a8-ddb7-4cc4-90a9-297a57e96430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c29db3d-fa4e-42d2-9dd4-21f0a91edb65",
        "cursor": {
          "ref": "b7b3bf38-0b84-48a2-a9ae-9b1f61c18df7",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f21b20f-30de-4a4b-b2e4-ff12fb5ea396"
        },
        "item": {
          "id": "5c29db3d-fa4e-42d2-9dd4-21f0a91edb65",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "08654d99-d991-4d50-ab2e-9e1757e28821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc310ab7-cc96-4485-bd47-e28cd9c6910a",
        "cursor": {
          "ref": "f75991c6-810e-461a-9f4f-28c999e098da",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4ec5fa56-e353-45f3-a5b4-d4a66eafe0df"
        },
        "item": {
          "id": "cc310ab7-cc96-4485-bd47-e28cd9c6910a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "96a53ac3-8852-4d54-b9cf-8556ee01400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3ada0-563d-4431-9d3d-58beea820461",
        "cursor": {
          "ref": "2cdb6517-2a64-4ba0-9ecb-85be28e70dbb",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "48f3fb78-4c14-4aa2-a416-2270f81849b3"
        },
        "item": {
          "id": "dfe3ada0-563d-4431-9d3d-58beea820461",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "c8bd39c0-73c0-4f08-aa1d-66f999b2093e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef09438e-8dfd-4a85-a30d-ec1a5ea805d3",
        "cursor": {
          "ref": "da2df51f-5af5-4bee-af0c-4df2ab8617c5",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1bcdd0d8-0228-4009-b478-698a2c5a5e20"
        },
        "item": {
          "id": "ef09438e-8dfd-4a85-a30d-ec1a5ea805d3",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "8689a643-ed00-4e29-88c7-7f8a78ca9893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a880cf-91ac-4006-a377-332cba54fdd6",
        "cursor": {
          "ref": "4cd60bab-2e0a-4d6b-83bb-4cbbadc95193",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6a1d0fed-31ea-44ed-8d0d-fe459b44ab81"
        },
        "item": {
          "id": "35a880cf-91ac-4006-a377-332cba54fdd6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "30c40a74-d959-493c-83cd-0f6ca7210e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204be27e-3427-4b2e-b5a5-624e3bd1bbbc",
        "cursor": {
          "ref": "4ac5ddb9-9e95-4fbb-bc16-e13552cb1f44",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "548400a9-03f9-4463-a9c2-c631c12245a1"
        },
        "item": {
          "id": "204be27e-3427-4b2e-b5a5-624e3bd1bbbc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "40e40c3b-f01f-47fa-ad32-b9ccb762320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb90b8b-cd3d-4c79-97ae-9ddc107e5bee",
        "cursor": {
          "ref": "8898bb00-0168-44fc-9dda-d64052c25ec8",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da2c3622-899c-48d4-8792-7a202ea4c99b"
        },
        "item": {
          "id": "3bb90b8b-cd3d-4c79-97ae-9ddc107e5bee",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "07a4314a-88b4-4766-a1ce-6954b8ebda13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92428c51-facd-441b-9a6a-3c1633621e97",
        "cursor": {
          "ref": "c2ea1704-2f2f-4d9e-a59d-3fe10b2fc10c",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f0cbbc8f-aa96-4921-a3dc-8cfcedd0db2b"
        },
        "item": {
          "id": "92428c51-facd-441b-9a6a-3c1633621e97",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7381c2e9-7e25-4f15-b010-24100a4a6329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b270c16-9ab7-4d77-887b-f503fe420deb",
        "cursor": {
          "ref": "f7ee0b23-65f4-4d57-acb4-fe1913acb592",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "62a9cd7e-e6c2-4863-813f-338e6946cb51"
        },
        "item": {
          "id": "8b270c16-9ab7-4d77-887b-f503fe420deb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7c9b90d5-4ded-4176-a755-dcbd30cd0a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f2142b-3238-4194-a3f8-904afc6de72f",
        "cursor": {
          "ref": "711711b9-7359-45e9-9767-9ffc680c091a",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8c42aa6d-874c-4dc3-bccf-6020b4b78737"
        },
        "item": {
          "id": "44f2142b-3238-4194-a3f8-904afc6de72f",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "654401be-7642-48fd-96bb-93ee3aace921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb031d4-a45c-4c69-8e39-8dd390740fa8",
        "cursor": {
          "ref": "204bce4f-2895-41ef-8401-55e030af9560",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba1f9335-e03e-44d0-b9bd-1e1e7258799e"
        },
        "item": {
          "id": "efb031d4-a45c-4c69-8e39-8dd390740fa8",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "c84c2b78-815e-4feb-a640-e4c08fb3f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1538d635-45ce-4f5b-a839-62399340bad5",
        "cursor": {
          "ref": "d3268d3d-a098-4624-bdba-af404157c031",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "95a1d23a-f7ab-4e7c-8483-bd6b7fdd5949"
        },
        "item": {
          "id": "1538d635-45ce-4f5b-a839-62399340bad5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e38c852d-00e0-472a-a54c-234c57fbe8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebf254d-0b30-4836-a89f-a61582a14934",
        "cursor": {
          "ref": "f0c0080f-862b-45c9-af07-982d404e4a54",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "42241fa1-f0b0-4026-85fb-37502d64852b"
        },
        "item": {
          "id": "7ebf254d-0b30-4836-a89f-a61582a14934",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "08c25566-2ab9-470d-9fc2-3fd1f6cc3d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85364438-9229-4632-800f-529db10f948c",
        "cursor": {
          "ref": "293d0315-379b-40fb-9897-c776ae01af74",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d0d30dae-32b5-4cb4-8818-3cf0f878600d"
        },
        "item": {
          "id": "85364438-9229-4632-800f-529db10f948c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "899546b4-40d0-4871-aaa3-26cfe377b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb2169-db29-465b-8d8b-1f2108263de9",
        "cursor": {
          "ref": "617eb0ff-63b2-4a98-997b-cdc3d4b2ac2a",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c4f5d61e-4121-4ac4-bd57-6f6ece034174"
        },
        "item": {
          "id": "8bcb2169-db29-465b-8d8b-1f2108263de9",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "0422e7d0-5420-4c01-a825-a372837057ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0277bfbd-28bb-46ab-acf1-8e3544dc46ea",
        "cursor": {
          "ref": "2a446d1e-f1a8-4350-8d6f-12a6e1518536",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8f1ea628-2644-4642-a4c7-d471117266bc"
        },
        "item": {
          "id": "0277bfbd-28bb-46ab-acf1-8e3544dc46ea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "28bd345b-fd0e-4999-a076-a6988e5aabdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f01a65-a4d8-433f-8a35-e96db1af0849",
        "cursor": {
          "ref": "bf1bb73f-1195-4d7d-83cf-b5b5ebf9029c",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7fee49f-7cf5-4470-a21f-3d9eac18ad6e"
        },
        "item": {
          "id": "45f01a65-a4d8-433f-8a35-e96db1af0849",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "8320b8a3-fb8a-4024-a7b8-835cebc8914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da8fa15-0662-447b-b57e-e94393b35b2f",
        "cursor": {
          "ref": "4000dff4-b3b2-4ff4-b122-c077589ff289",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1c502e2-26b6-446d-91f5-59f3442af237"
        },
        "item": {
          "id": "7da8fa15-0662-447b-b57e-e94393b35b2f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0fe269be-59b2-4b9e-a676-1ebffa002b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdf2176-8bfc-4995-b466-1d3a128f0d8c",
        "cursor": {
          "ref": "a1a91777-578c-4bbf-a47a-1dc3b23dcf23",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c87e65f0-5afb-4a67-a6c0-93da6352c532"
        },
        "item": {
          "id": "afdf2176-8bfc-4995-b466-1d3a128f0d8c",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "2f23957d-176b-4116-a11a-b2422061266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d306c8f-e406-4582-87d7-027243854fcd",
        "cursor": {
          "ref": "c1fbc198-f31d-4ed0-8793-51a369acdab5",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e75f26b3-005e-4238-97ae-de70af91498b"
        },
        "item": {
          "id": "4d306c8f-e406-4582-87d7-027243854fcd",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "02281545-2026-4802-aa5b-60dfe956ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3ed414-8db2-4ffd-b62e-d77487cfc989",
        "cursor": {
          "ref": "56f35f34-2be1-4c28-b239-6ca4385dfff4",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b6439a4-3fab-4b83-98e2-6d8b49b56342"
        },
        "item": {
          "id": "db3ed414-8db2-4ffd-b62e-d77487cfc989",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f9cb942-e5bf-4a59-9fd5-38427fa9e5d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad60fba4-97c2-4d20-8316-0f37f7a6aaef",
        "cursor": {
          "ref": "a40d95c0-5848-4173-b53a-b89346d5a7a5",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "12b4916e-b9a5-4c30-828e-3736e06ef0e6"
        },
        "item": {
          "id": "ad60fba4-97c2-4d20-8316-0f37f7a6aaef",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8418e03e-ff4a-4269-b792-70c51c06b489",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef31a7bf-2b1b-4d8c-8015-174f03a17b71",
        "cursor": {
          "ref": "596839bd-2542-45cf-87e7-fc00ac672d8f",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bcb8adb7-b8d0-4988-9382-906298494f42"
        },
        "item": {
          "id": "ef31a7bf-2b1b-4d8c-8015-174f03a17b71",
          "name": "credentials_issue"
        },
        "response": {
          "id": "116e2f8d-a61b-450f-a3c0-8fb9a422bdfb",
          "status": "Created",
          "code": 201,
          "responseTime": 392,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba8780-00cf-4fd7-a8a9-d61f546c80b5",
        "cursor": {
          "ref": "4157c18e-a4c8-4188-a834-5dadea04a441",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "94f59487-823a-4950-863c-8b5394a9d763"
        },
        "item": {
          "id": "edba8780-00cf-4fd7-a8a9-d61f546c80b5",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "7df91433-48c7-428b-a7c5-70ca9116382d",
          "status": "Created",
          "code": 201,
          "responseTime": 1253,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c43a2fd-5738-4ced-80a5-81a6d5b3d423",
        "cursor": {
          "ref": "234cd79a-2d6a-4508-9272-1720fdccc9f6",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5fcf84c-8e7e-4e8a-8c05-8411e13be366"
        },
        "item": {
          "id": "1c43a2fd-5738-4ced-80a5-81a6d5b3d423",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c91752c8-a750-4850-987b-54b709178061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "2bb372ec-3b77-4325-81f1-4dba48dd0680",
        "cursor": {
          "ref": "0ffd97fd-0dbc-4813-a125-52661a0b2a22",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3dc2ce4c-03d7-4b4c-8092-ac52724986dc"
        },
        "item": {
          "id": "2bb372ec-3b77-4325-81f1-4dba48dd0680",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6db0d35a-a654-4325-a7f3-ba40b7c54dbf",
          "status": "Created",
          "code": 201,
          "responseTime": 767,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0082cb8c-f622-46bd-b3c2-2ed4d82359df",
        "cursor": {
          "ref": "5f640c2e-c670-40f2-98bb-fc75519b21f9",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4faf28aa-889a-4574-8a94-a133d986836d"
        },
        "item": {
          "id": "0082cb8c-f622-46bd-b3c2-2ed4d82359df",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3972f328-7ec2-4fa2-a42b-303232d16b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "0c74cec3-3822-48f9-999e-6c91d2cf9900",
        "cursor": {
          "ref": "541e5797-f804-40c1-97e8-bce9226888b1",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8eebf2bb-b42d-4181-97fa-8736739a1e4f"
        },
        "item": {
          "id": "0c74cec3-3822-48f9-999e-6c91d2cf9900",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "afcdd0fa-7566-4f8a-8ea6-f9c43dcbf0c7",
          "status": "Created",
          "code": 201,
          "responseTime": 507,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4eb644-3303-4e1b-8f60-03db461770e5",
        "cursor": {
          "ref": "ef0dcb30-6c7c-4d01-b9c8-473e91f65685",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bfa49c8b-3c69-4641-aa06-57dc7ad3deb8"
        },
        "item": {
          "id": "4e4eb644-3303-4e1b-8f60-03db461770e5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2d97361-18c0-43d3-96ed-3ac645f8e905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4eb644-3303-4e1b-8f60-03db461770e5",
        "cursor": {
          "ref": "ef0dcb30-6c7c-4d01-b9c8-473e91f65685",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bfa49c8b-3c69-4641-aa06-57dc7ad3deb8"
        },
        "item": {
          "id": "4e4eb644-3303-4e1b-8f60-03db461770e5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2d97361-18c0-43d3-96ed-3ac645f8e905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a278a-d158-4014-8f33-4ab5b27fc40a",
        "cursor": {
          "ref": "1e96f342-90c3-4476-8920-e69a5019b17c",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13bbfaaa-a116-454c-954f-29df56c38cf4"
        },
        "item": {
          "id": "ba5a278a-d158-4014-8f33-4ab5b27fc40a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "eb2dc2df-b85d-41cc-a390-ce23adce8e33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 19,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec454f36-1ba8-43f1-8fde-e3e5eb96f009",
        "cursor": {
          "ref": "b95945de-10e8-4836-9b91-3f8e2419fe79",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6452d57d-9d22-468f-94a7-397b33a7d86d"
        },
        "item": {
          "id": "ec454f36-1ba8-43f1-8fde-e3e5eb96f009",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "497b41af-3159-40a4-9c48-dcf468dc1c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec454f36-1ba8-43f1-8fde-e3e5eb96f009",
        "cursor": {
          "ref": "b95945de-10e8-4836-9b91-3f8e2419fe79",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6452d57d-9d22-468f-94a7-397b33a7d86d"
        },
        "item": {
          "id": "ec454f36-1ba8-43f1-8fde-e3e5eb96f009",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "497b41af-3159-40a4-9c48-dcf468dc1c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14de6139-b20c-4272-b80d-421e7ff09aa4",
        "cursor": {
          "ref": "c08d805a-b0fd-4af1-88f6-ee867b970f14",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f0841d49-53dc-47b5-b039-00c1edf81218"
        },
        "item": {
          "id": "14de6139-b20c-4272-b80d-421e7ff09aa4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "decb0d90-4ab6-4ba7-b846-401e6a53c899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74104893-80a5-4a62-9780-560320120161",
        "cursor": {
          "ref": "3f327892-6a81-4b85-aa97-4ca43fdfa9b5",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f1c15448-331b-44d5-9f3c-795e36f1b93b"
        },
        "item": {
          "id": "74104893-80a5-4a62-9780-560320120161",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eb1f3bd9-874f-4913-b1cb-23fb85eaa0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177441fc-7c54-408b-9efe-7fe277d1991d",
        "cursor": {
          "ref": "e62f980d-ae2b-4938-bd18-e01d980910e6",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3ff5fcc9-f4e3-4579-9bfa-0fc605b1889c"
        },
        "item": {
          "id": "177441fc-7c54-408b-9efe-7fe277d1991d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4fec010e-0a52-4688-9212-896573cdf6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b2b3d2-9315-4fbb-8b83-2bb67c6ff419",
        "cursor": {
          "ref": "e94bfa48-36da-43f8-9592-dd3032c589b6",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eafcbf65-b23f-464b-a623-5c7fa77f9282"
        },
        "item": {
          "id": "22b2b3d2-9315-4fbb-8b83-2bb67c6ff419",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fbf83784-2f91-47a1-baa4-5e6a7ffa83b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c938cda-4df3-47e5-94e7-38c3ea9bf5bb",
        "cursor": {
          "ref": "7b4c0b37-baab-4741-81b8-ebb00ec9ebac",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "55304f59-e09d-4a16-a419-45f14af8a064"
        },
        "item": {
          "id": "4c938cda-4df3-47e5-94e7-38c3ea9bf5bb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "15ff6377-6643-4506-a4f2-3464622e1495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f311fd55-e4d1-4c4b-9c83-f1dcbdc08f99",
        "cursor": {
          "ref": "1ffbfb89-0751-4f4f-a3f5-b185131465dd",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c79affc0-cbaa-4313-bbfe-eb328ae1a15f"
        },
        "item": {
          "id": "f311fd55-e4d1-4c4b-9c83-f1dcbdc08f99",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3e6b9bc9-7073-4d35-ac97-64a469aa0882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1698,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba0a81-0c84-4215-8ec5-cafdf6535346",
        "cursor": {
          "ref": "1b1a844d-e9b4-47c3-9c3f-9823c92b55f9",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "92d5a74c-4353-4652-8122-94a9f9e0d312"
        },
        "item": {
          "id": "dcba0a81-0c84-4215-8ec5-cafdf6535346",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d9541ec4-db08-43ba-b404-29fa9a0d78a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3305f79b-a985-4ec6-9d4f-59f3c6ceb068",
        "cursor": {
          "ref": "2a7b48bf-d7dd-4aef-8922-e0c4baca346d",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "43464acf-f2dc-432e-8568-66fe3f27d947"
        },
        "item": {
          "id": "3305f79b-a985-4ec6-9d4f-59f3c6ceb068",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4b368e00-80d2-4148-8391-1021b6539853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345ffd15-de27-41ea-99d8-6ae14503383c",
        "cursor": {
          "ref": "e97e3e2d-1799-4fed-89d3-62c9d4b5ab85",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d48a293f-bdcd-4c1f-9a86-ea2646297f0b"
        },
        "item": {
          "id": "345ffd15-de27-41ea-99d8-6ae14503383c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "80093412-345e-4a16-b5bf-dfb4fcdb3bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755070d2-6a05-4741-982e-ed45f7059197",
        "cursor": {
          "ref": "236ce11e-e25e-473f-a4d3-0ad78b9d5073",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "19a45523-61c3-49ce-abda-65dfbfb7bb82"
        },
        "item": {
          "id": "755070d2-6a05-4741-982e-ed45f7059197",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d47c44c-686d-4e8f-b7ec-1f69f938b342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8d2d5-de8e-4c02-b0f9-cfa74553caab",
        "cursor": {
          "ref": "6d283853-dd39-47f8-bcff-f8e27f19ae88",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "62f2cef4-b1fc-4724-981c-b8bd05e3b3b2"
        },
        "item": {
          "id": "cfe8d2d5-de8e-4c02-b0f9-cfa74553caab",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0fdadf40-7eb9-4342-8c7c-4264cae7dc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3343e6-29dd-4a9b-b9c1-58537c682f6a",
        "cursor": {
          "ref": "dc7244f4-4db3-4a51-af46-b3f6fda1ba00",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8670ae6-860d-40e9-9fcc-42a4c34bd8eb"
        },
        "item": {
          "id": "2a3343e6-29dd-4a9b-b9c1-58537c682f6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "58d27061-66e0-434c-8b99-9882dccfbc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaf000c-6eb8-4fbd-a4b3-a25c86b4ecb4",
        "cursor": {
          "ref": "e7fe1fc0-f77f-419e-9109-9274be713801",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5f4469c9-9fcb-4946-ad69-30d1500309b0"
        },
        "item": {
          "id": "deaf000c-6eb8-4fbd-a4b3-a25c86b4ecb4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0d3bb0c6-7e82-4c60-9de6-97835a94954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367615c4-af88-4376-8e7b-200c7b0de5bb",
        "cursor": {
          "ref": "14b78331-81a1-49cc-b548-e9bd7881eaa7",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7192eea2-4521-445e-909c-7adec05271e7"
        },
        "item": {
          "id": "367615c4-af88-4376-8e7b-200c7b0de5bb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f055dcf6-7159-43fb-980e-3ee78b728bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b1773-a272-485b-843e-54878bc342f2",
        "cursor": {
          "ref": "a7afbdb9-5db3-4a9b-8448-d0d1820de3f9",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a50e1c38-38d3-4b6e-bddc-53be256bd7a2"
        },
        "item": {
          "id": "559b1773-a272-485b-843e-54878bc342f2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5b516af3-c673-4543-b235-e047ae62b43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf3a1cb-77cf-45ef-b9bd-01de9dedb825",
        "cursor": {
          "ref": "6b615e8f-e0b3-43f8-9483-ad0e790a1fed",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "41a0ba9d-d710-42ca-bfd6-a7e059865a87"
        },
        "item": {
          "id": "ecf3a1cb-77cf-45ef-b9bd-01de9dedb825",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0c7b2fc8-a7a6-47e5-8d08-615d7f320af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74aaadb-d409-42e8-ad9f-d622f3e92b07",
        "cursor": {
          "ref": "132579e7-df78-4570-bb7e-4107cf2666a8",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "02946a04-38af-4294-9f62-87c57c129a1c"
        },
        "item": {
          "id": "c74aaadb-d409-42e8-ad9f-d622f3e92b07",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "273c99d1-827e-4c13-b282-4c114b5dcce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595879c4-56df-490d-ac1b-edf723a8c137",
        "cursor": {
          "ref": "71e526d9-aa14-4389-932d-fd3fe435d2da",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a853de2-7084-43ad-bb19-44ecd1e58a41"
        },
        "item": {
          "id": "595879c4-56df-490d-ac1b-edf723a8c137",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6fb82071-2463-462d-a91a-be2ab42077f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9d80e5-7849-419a-9115-006a5bb34b02",
        "cursor": {
          "ref": "12125a4f-e5ba-41e3-ad2f-708897d25761",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2811d5cb-8df5-4c4c-a5b8-6eb6c98f2f11"
        },
        "item": {
          "id": "7d9d80e5-7849-419a-9115-006a5bb34b02",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f222fd00-3eab-4462-b077-39c990a72614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b102b5f-f974-428f-8322-2fa51ff540a9",
        "cursor": {
          "ref": "4a374460-ce21-43ca-a893-e795c022fdec",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2cbfe7d2-8d6f-479a-8e1c-4ef096b2a372"
        },
        "item": {
          "id": "4b102b5f-f974-428f-8322-2fa51ff540a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9f60e5cc-e518-46f5-8741-ab3ce7c1c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be84bc-a4ce-4c6a-b851-8ece3b06fe7a",
        "cursor": {
          "ref": "17ad1b44-c36d-44b0-a0e7-08f448315ef3",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "660a1281-b181-4820-a13c-6e15b0d4b61a"
        },
        "item": {
          "id": "32be84bc-a4ce-4c6a-b851-8ece3b06fe7a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "67e6cfc5-855e-4af7-90f9-faf932f2c724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee347df-e378-4178-a200-511672f6ffc9",
        "cursor": {
          "ref": "d6c13c05-4da4-4ab9-8d6f-59eee4560ad2",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d295bd0-b743-498b-83cd-9d260515b35a"
        },
        "item": {
          "id": "5ee347df-e378-4178-a200-511672f6ffc9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "927f6d9f-6408-4643-880b-9f3d52b54326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cd6382-dbd8-4d41-9690-45755c1ac1ee",
        "cursor": {
          "ref": "8ed2bfb4-27f6-42c2-979e-c8539f013b14",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f95365f6-d17d-4996-a948-87e2c9a51ccf"
        },
        "item": {
          "id": "62cd6382-dbd8-4d41-9690-45755c1ac1ee",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1fc34aa-00e5-4f48-b85f-244c64aae5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca236b34-48db-45c1-b2dc-842030f2a161",
        "cursor": {
          "ref": "15640dba-9ea5-49d8-a915-ccd1b00d2ec5",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85c3f235-02f9-4723-8d42-76b1ec736fff"
        },
        "item": {
          "id": "ca236b34-48db-45c1-b2dc-842030f2a161",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c5d2e13-eb57-40dd-be19-bec51e019280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f23da-b62a-47bf-b518-183ec8a02822",
        "cursor": {
          "ref": "a8c79fe3-6db2-4ffc-a8ed-2a97e684cd65",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b3797db-559b-4a9c-b97d-ba60dca77e99"
        },
        "item": {
          "id": "501f23da-b62a-47bf-b518-183ec8a02822",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0a7e1616-49f3-4220-8b5e-a79b6874c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f3dbc-cb1d-4edc-a724-fe1e65687a27",
        "cursor": {
          "ref": "e41e8f5f-cdf7-482a-97c8-6947799d3d52",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1ba5b230-addb-4e39-83d8-80ec2f049505"
        },
        "item": {
          "id": "027f3dbc-cb1d-4edc-a724-fe1e65687a27",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bfc7c5ed-4ff7-4ec5-8675-d84552529b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e69439-72ad-4e17-b0d7-d0943c9a8c6d",
        "cursor": {
          "ref": "7d7155fa-372e-495b-a4a2-da0ea1e219eb",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c4f84f6d-ef30-41ae-ac59-829a00e2b112"
        },
        "item": {
          "id": "69e69439-72ad-4e17-b0d7-d0943c9a8c6d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5f6ba580-dc23-424c-bded-d20ea0452056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd3de86-df4c-49e2-94c0-91319d41aa7a",
        "cursor": {
          "ref": "065de2f5-582b-4bac-b597-763219eeb0fb",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "04afb0f9-4710-4d94-b3e2-7c6313f026b7"
        },
        "item": {
          "id": "edd3de86-df4c-49e2-94c0-91319d41aa7a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cd81de5f-96c3-47c2-b7e5-7dd10389a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f73b6e-2f09-426f-9c9c-4d6396728552",
        "cursor": {
          "ref": "a8a3e46a-6826-442b-84fa-af00ed13c0a7",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bd1a9831-e07e-4770-9dc0-0dfdc0feac45"
        },
        "item": {
          "id": "40f73b6e-2f09-426f-9c9c-4d6396728552",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a31b5856-ed2b-4bc6-8a94-c0d506dbc458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a1be3-c956-492f-b233-9f7edcbbfee7",
        "cursor": {
          "ref": "59943a73-abdb-4977-8613-631d8ac68cdb",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3383fba7-bc51-4d85-b90c-e5d29aaa6251"
        },
        "item": {
          "id": "cd0a1be3-c956-492f-b233-9f7edcbbfee7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "74dcad25-f32e-4e4b-981f-1df74cd2a90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08d6023-7f85-4775-9f33-e6977b3817d1",
        "cursor": {
          "ref": "a5363744-e363-4772-8ba8-22ba80c4df42",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a78adc61-a2be-4b55-852a-0f1c9b4f2a3e"
        },
        "item": {
          "id": "d08d6023-7f85-4775-9f33-e6977b3817d1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e9cbc423-6cf5-4b7d-ac61-dc356b0e1dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466154e9-bfeb-4249-99c5-b70f3169b336",
        "cursor": {
          "ref": "f886166d-c66a-47e4-a285-723e5fe9a787",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0ef05330-37c3-4051-b3b4-821cd8ffd8ad"
        },
        "item": {
          "id": "466154e9-bfeb-4249-99c5-b70f3169b336",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d45810ce-f40a-4882-9349-12e96c287cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3883a884-dfc3-43a0-bd83-09028ec08527",
        "cursor": {
          "ref": "2b9c7bea-93e1-41db-8388-d33c4993d930",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0dd7b9de-62db-48f3-95df-ed0fc85b976a"
        },
        "item": {
          "id": "3883a884-dfc3-43a0-bd83-09028ec08527",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f726ccb4-3460-462f-b6c5-25fa7ae9e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6dad55-6c6f-4fbf-bc96-98e0b0acb91f",
        "cursor": {
          "ref": "68b238f8-4062-4ae4-abb8-2dd36069d61c",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f8ba67ca-fae6-4cf3-9fde-8e27737d684a"
        },
        "item": {
          "id": "db6dad55-6c6f-4fbf-bc96-98e0b0acb91f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "582dedc8-166d-4f18-866d-56ed32e5aa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d6a324-3194-4970-a208-33a48c5f1567",
        "cursor": {
          "ref": "cb4fd2a8-09e1-4d7d-9e34-563da0a7fe78",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9dac37e8-0e72-42b2-8131-89629a81b4a0"
        },
        "item": {
          "id": "10d6a324-3194-4970-a208-33a48c5f1567",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6b096c7f-a2cc-44e9-8f73-120371a4b739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ee542c-4abc-4cbb-bf6d-1a15382ea010",
        "cursor": {
          "ref": "90e36049-470d-4677-88ad-49ab595220b9",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ec2473e0-a159-4c19-bbae-980218fb6bfe"
        },
        "item": {
          "id": "c3ee542c-4abc-4cbb-bf6d-1a15382ea010",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "91528eb8-642b-484e-b1be-9a40163755a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0dfd8-19ec-42fd-8af8-5af60477592e",
        "cursor": {
          "ref": "e62b6d54-79f1-42d8-ac98-764d2898c720",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "042d93fc-9cdb-473c-bb98-df012d104c04"
        },
        "item": {
          "id": "12f0dfd8-19ec-42fd-8af8-5af60477592e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3dc7de94-bbc4-4f33-9d7a-4b4c30af2511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefcd231-1754-4392-9a9a-45275b10d990",
        "cursor": {
          "ref": "33d2bd40-cc38-4e8e-8341-81a4f2d3080f",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8044be3c-8153-4f76-964b-9ce8b3b5a03f"
        },
        "item": {
          "id": "aefcd231-1754-4392-9a9a-45275b10d990",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dcadf57b-e460-4235-83b4-07dbfbef47c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85633e36-5ded-4bd9-8c58-f5b0b0eac505",
        "cursor": {
          "ref": "84168581-a180-4a00-a1c8-dbf142427ac0",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab123599-6cee-4f10-a8fc-055c4079d0eb"
        },
        "item": {
          "id": "85633e36-5ded-4bd9-8c58-f5b0b0eac505",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "95ec7980-8c81-4c88-bdb4-ce54fd6ac338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f90a9-4d7b-46a5-8adb-de58f4d90991",
        "cursor": {
          "ref": "e698a7c4-7ff7-44e1-adbb-a3c651ea2ff6",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bf0399c4-fb58-4415-a380-aaffec1c1719"
        },
        "item": {
          "id": "534f90a9-4d7b-46a5-8adb-de58f4d90991",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "27875819-e397-40b6-a27a-654c835e4ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b85326-8d21-41ff-96e9-f1015d4f884e",
        "cursor": {
          "ref": "0860f659-8aaf-4069-8ac5-9751f46e4c60",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7f490f31-71d6-46b8-b2d9-b29c408f6f3f"
        },
        "item": {
          "id": "08b85326-8d21-41ff-96e9-f1015d4f884e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "011ebfcd-72c0-4a9d-bd12-7d4201b271e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaa77f9-1d82-4057-a6e9-077bed32dd5f",
        "cursor": {
          "ref": "cf024fda-6724-47e6-a48f-621b856aa3c4",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "354d19fb-11d8-449a-981e-b6232fc08880"
        },
        "item": {
          "id": "4eaa77f9-1d82-4057-a6e9-077bed32dd5f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dea0324e-e03f-4dc9-b20a-bb94003c10fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a464660a-5b99-4304-af67-c1c3c9b3c9db",
        "cursor": {
          "ref": "7f596eae-8226-4dd2-abf5-0e93586d9ef2",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a9936859-0777-48d0-a200-83b6bdec2081"
        },
        "item": {
          "id": "a464660a-5b99-4304-af67-c1c3c9b3c9db",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f16a4472-303a-4944-a675-574854456681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82463475-6536-4e62-b08a-e0ce7bea600b",
        "cursor": {
          "ref": "987bc612-7cef-4036-8764-59af78978ccb",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "efde9ea7-555d-4b20-b192-30a22faef200"
        },
        "item": {
          "id": "82463475-6536-4e62-b08a-e0ce7bea600b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d2c4bbe1-57c5-471a-8d6a-47029fa03bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf2a78c-c80b-4871-a3ba-1bdfc694aec5",
        "cursor": {
          "ref": "ebf0bc5a-88f9-4731-9a6f-e0bdcfb12689",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7da4d5cd-7f26-4a08-aeca-6fc60e321f5d"
        },
        "item": {
          "id": "6bf2a78c-c80b-4871-a3ba-1bdfc694aec5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "628353a9-d7e4-4876-80a1-2a5522edc68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390043f4-4a64-4e1a-9a04-bebd7038edbd",
        "cursor": {
          "ref": "32337e8d-5415-4c1a-86e1-0256b0dc0b06",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3060b3c7-a865-4cbd-9121-5270121e4f76"
        },
        "item": {
          "id": "390043f4-4a64-4e1a-9a04-bebd7038edbd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d9560379-4c61-4dcb-aeeb-58a829934bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59636158-ccc5-420e-8f7c-98cb908ad688",
        "cursor": {
          "ref": "2527b7a6-99ee-41ce-a8be-9e7f87981807",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8500c3e8-3450-40b9-8308-d2177e2f6f49"
        },
        "item": {
          "id": "59636158-ccc5-420e-8f7c-98cb908ad688",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "25335d79-ef57-4066-8615-07db89e11bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f7144a-7e08-4882-bf05-e5036e912c70",
        "cursor": {
          "ref": "89374605-efa4-41f5-8f81-878e4f10b4c0",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c0c2fe9-d855-4b55-bb30-44e45f413a64"
        },
        "item": {
          "id": "f8f7144a-7e08-4882-bf05-e5036e912c70",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bccf557a-4219-4a67-9964-b8b41618ad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aecffe9-a041-490a-bb0a-8a07597a491f",
        "cursor": {
          "ref": "bc33f137-0821-4ba1-b3de-4d1062d42b27",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fcbeaf7d-e0c8-4795-ac97-ff8b5b335535"
        },
        "item": {
          "id": "5aecffe9-a041-490a-bb0a-8a07597a491f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "76603797-ded3-477e-a7f4-bc8e5c730e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5de57a7-7aa2-4750-ba66-bbc6c03b1418",
        "cursor": {
          "ref": "89b27d20-ce60-4a43-87bd-c4d592ca7cf3",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85b9f437-4624-4bfb-ae69-75283d9534e8"
        },
        "item": {
          "id": "a5de57a7-7aa2-4750-ba66-bbc6c03b1418",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "af62a2d3-4947-4572-9792-ee56a45d176a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcb6816-93af-4d5d-aa5e-6f96da04ddb7",
        "cursor": {
          "ref": "360aa906-64ef-4fbf-bf29-59d57ebf856d",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "53fb2e67-673c-4ec7-a79d-cdeefdcf1595"
        },
        "item": {
          "id": "0fcb6816-93af-4d5d-aa5e-6f96da04ddb7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "594b3de4-a436-4c5d-b703-2ef6cd443773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c76ad7-ccc5-4609-aebd-fe7a201409d9",
        "cursor": {
          "ref": "832d03be-d99b-4212-9703-91ab4037b2f3",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b248e021-2af8-456d-b4e2-4fb5a43d39e6"
        },
        "item": {
          "id": "c5c76ad7-ccc5-4609-aebd-fe7a201409d9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "418e8b32-eb73-4e9f-8bb4-0ac157139249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1401e79-3c2b-4b4a-a3bc-5f078019c195",
        "cursor": {
          "ref": "702d7a0e-9ee3-4c34-81b3-dd8f0b9db310",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d40779f3-1a9a-46a5-9ad0-5055becb0916"
        },
        "item": {
          "id": "e1401e79-3c2b-4b4a-a3bc-5f078019c195",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8c44b5b2-dbc5-4ae7-bba7-d8e9ee8a5f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3573e63a-841a-408b-bfea-e2b3397e235b",
        "cursor": {
          "ref": "0cbd983e-3b9f-465e-9b23-07d5cb3f24f5",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d4c752c-96df-4e12-a310-e08da2da8310"
        },
        "item": {
          "id": "3573e63a-841a-408b-bfea-e2b3397e235b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f82d990f-bbe3-4c3b-a85f-1e855bf48917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a177f8c-d63a-4fe5-b263-c9ef3731735a",
        "cursor": {
          "ref": "131ae28e-a314-41ab-a038-f0f8216e28d9",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b1b1606f-8a2a-45f3-951d-5444cf1f9880"
        },
        "item": {
          "id": "3a177f8c-d63a-4fe5-b263-c9ef3731735a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4c77f3c6-c95a-4f5c-8215-a154d177ee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa307fba-203c-48dd-aa19-06e132a2d4b7",
        "cursor": {
          "ref": "9baaf45a-374c-4df2-9bff-0a1cb71b32a9",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6f466cea-28c2-4581-9864-2fe7fab8f253"
        },
        "item": {
          "id": "fa307fba-203c-48dd-aa19-06e132a2d4b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3bca3156-7682-4c80-8519-faf29dde5310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e1a40-3f26-47a4-af79-1eb3f83b3a74",
        "cursor": {
          "ref": "3d0b3845-2249-453c-83ad-b3c4b0019a9c",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d281e95-c46d-4547-ada8-94dd4b0156cc"
        },
        "item": {
          "id": "2a5e1a40-3f26-47a4-af79-1eb3f83b3a74",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "be81a3d1-3523-49e9-b2ae-b49e341ffb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f561d4-8998-4e73-834f-5d03d3b53728",
        "cursor": {
          "ref": "0aeb6764-49ed-401c-947f-a3518b970e73",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "99e8ecbd-9829-4dce-8f06-d6f08b11b8d8"
        },
        "item": {
          "id": "41f561d4-8998-4e73-834f-5d03d3b53728",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7ac8e5ad-5f54-409b-af3f-22b2ec7d8f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c13344-c420-4b87-ba74-de72b93c89e9",
        "cursor": {
          "ref": "626f56ac-6f4d-4249-bda1-c13e58173b3d",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c0de0a47-b9a2-43e8-9075-4ad17e32bee2"
        },
        "item": {
          "id": "a3c13344-c420-4b87-ba74-de72b93c89e9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "815d5ef1-3d6f-42ca-91c0-e1ddbce45ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b1ccba-f6ba-47fc-878a-bc9504c0b9b6",
        "cursor": {
          "ref": "66b3a134-1bd4-43f2-a6c0-4e5ac0041e74",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9609863f-26a9-4dc6-b109-bb6d4d36a757"
        },
        "item": {
          "id": "27b1ccba-f6ba-47fc-878a-bc9504c0b9b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a20f2b35-a9e0-4925-994e-b98b49bdf86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd938c94-5698-4fe7-807d-9fb2410cc0c3",
        "cursor": {
          "ref": "9f195d09-ce03-45f5-b085-6dc813f6c852",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2e8c9d3c-c2fe-4712-9689-33acab3316bb"
        },
        "item": {
          "id": "cd938c94-5698-4fe7-807d-9fb2410cc0c3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e30344d7-d262-4ed1-a46a-5414fd3b1e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ccddf0-d83b-4aa8-9540-4cb1b638c3d8",
        "cursor": {
          "ref": "6a178e15-e2f7-45ee-9066-92ff1778080a",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cd47862b-da4d-4ad5-a4ce-ef2e01548f8e"
        },
        "item": {
          "id": "a2ccddf0-d83b-4aa8-9540-4cb1b638c3d8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d31c1ea-de4f-4a4c-8269-2410e2c2a2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a494ba-8153-4793-a838-3ff37f94f49f",
        "cursor": {
          "ref": "dc3082b6-a1ca-49b5-ac6e-051b7b942396",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3b1b4f6c-72af-47fc-a30f-f9dc0c60404f"
        },
        "item": {
          "id": "a1a494ba-8153-4793-a838-3ff37f94f49f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "216381c0-6944-4cec-b5f8-634a416c198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4a2221-5d97-4a1c-826b-cdbd3715eb91",
        "cursor": {
          "ref": "abb24850-04c7-44f6-b1b6-61d1302c495d",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a109d362-c5b3-423d-8a67-d93d96248c7a"
        },
        "item": {
          "id": "5f4a2221-5d97-4a1c-826b-cdbd3715eb91",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cf677d2e-19b7-4f1b-8236-89e61f4c19ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe33db-175b-4def-9829-aec8a0cd6c1c",
        "cursor": {
          "ref": "85f9ce2a-ee61-4195-b704-a2d41df9eae6",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "41266c4f-c9e1-4e2c-9b56-76e8bb636125"
        },
        "item": {
          "id": "8ebe33db-175b-4def-9829-aec8a0cd6c1c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aa086d4e-e279-4333-9c9f-e65af9c64a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5df4dc-d7a5-4618-8d43-4f6994c36f00",
        "cursor": {
          "ref": "a96a508f-d553-4fa1-a796-16223a603475",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "50bb6d37-13a0-4252-a4f6-2a16d649b00f"
        },
        "item": {
          "id": "ab5df4dc-d7a5-4618-8d43-4f6994c36f00",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6d0523bf-f128-4efd-9940-008af2362bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66db84a-207c-4eec-b53b-b39de71892fd",
        "cursor": {
          "ref": "a4687362-ee03-4271-9ac4-06af29196913",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "58d0f517-7423-4733-9c7e-4c77cbb7de2c"
        },
        "item": {
          "id": "a66db84a-207c-4eec-b53b-b39de71892fd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fcacb246-75c5-44a2-af89-7b5eef75e2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d5b5ea-d824-4c76-9b49-1c4ceec673b4",
        "cursor": {
          "ref": "daaa5c7a-200d-4baa-96ba-5e44527dd746",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fabaea99-ea79-4fcb-808a-1c996428cbcc"
        },
        "item": {
          "id": "63d5b5ea-d824-4c76-9b49-1c4ceec673b4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a52d4495-a938-47ac-9702-8283dc05307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2844dbd2-058d-4809-9b8b-c87b4896c7f8",
        "cursor": {
          "ref": "79ad8e38-fdf7-44cb-8040-838fe5cc4678",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "69724d4c-6370-4a8b-8ead-8a53b50b8ed0"
        },
        "item": {
          "id": "2844dbd2-058d-4809-9b8b-c87b4896c7f8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "63c36548-c746-4b5f-a499-ccded769e068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3d0e5-59eb-4420-ad0b-5ff37825c2b2",
        "cursor": {
          "ref": "8540dc00-056c-4916-8883-c3880accae80",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "babe4466-a8be-4c51-935a-94ac970c6191"
        },
        "item": {
          "id": "90c3d0e5-59eb-4420-ad0b-5ff37825c2b2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d2a52658-57e9-4302-917d-08a0076aa414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed2eb2-eb71-4c2f-b609-fb851cf6e8d3",
        "cursor": {
          "ref": "7a6b78ac-f856-4749-b84f-34c56717df2b",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "33a7e5c7-3a9d-4a27-b00a-eb9dda09e90e"
        },
        "item": {
          "id": "1fed2eb2-eb71-4c2f-b609-fb851cf6e8d3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "275d25b3-e4bf-4ed2-b3e6-022f9b49558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d9fad5-cf84-40b4-ac04-39860b9fb19b",
        "cursor": {
          "ref": "20dd3616-7dc3-4485-917d-91a2933a051a",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7f693088-5861-447a-b8e5-43b5c5d0a535"
        },
        "item": {
          "id": "69d9fad5-cf84-40b4-ac04-39860b9fb19b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f4ed90cb-8a81-4f3f-95fd-77869bcbde56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d088b90e-545f-452e-bcae-b8ab90712db5",
        "cursor": {
          "ref": "d02f29ca-1abf-4767-8065-d7138cf1f575",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7cd5276c-2309-41d7-8399-667cd3ea8a63"
        },
        "item": {
          "id": "d088b90e-545f-452e-bcae-b8ab90712db5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "513a358e-ee29-4a03-a008-b005fcad1c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d10212-4c88-4423-b835-ea5a33d25185",
        "cursor": {
          "ref": "215b0c3c-afec-4fd9-b883-bf5514049f4c",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2b9ed182-ec07-461c-b577-789d00d5b762"
        },
        "item": {
          "id": "e9d10212-4c88-4423-b835-ea5a33d25185",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a73e6e34-451a-4c11-b546-5225303331a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d992644-82d9-403a-b71f-c3787f1ed99e",
        "cursor": {
          "ref": "129c92fd-8273-414e-93f9-6fb9de86bf2d",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8215d0b5-1173-4d84-ae40-2e4077364505"
        },
        "item": {
          "id": "5d992644-82d9-403a-b71f-c3787f1ed99e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "71ffcfc1-e912-406a-b732-b08dfd28705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a9b6f-7cc4-4759-bc4f-f4902bd620a9",
        "cursor": {
          "ref": "20210073-af41-46fa-9594-e6ffcf6b9fe2",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "49e7d9db-3f45-4b93-a8f4-bbd3bd6c1533"
        },
        "item": {
          "id": "586a9b6f-7cc4-4759-bc4f-f4902bd620a9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "761bf5b5-3e70-4971-9770-55fa221f5c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f295f-a362-475d-a8a5-d6f5829d3a53",
        "cursor": {
          "ref": "8aa6d9ee-39d0-4204-a111-1525fc5f7ffe",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dd8bb01b-8ce1-41e6-a25e-c4eeae623415"
        },
        "item": {
          "id": "302f295f-a362-475d-a8a5-d6f5829d3a53",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d09ea553-92e0-422c-9032-7e73c7c302e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa8a836-cbcb-4177-a2ce-23fb300874e6",
        "cursor": {
          "ref": "4f5e4d66-3609-4640-9e7b-12794275ca5c",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3411d9a3-5ee4-464f-8833-683321c65d44"
        },
        "item": {
          "id": "3aa8a836-cbcb-4177-a2ce-23fb300874e6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "63e14737-8ad5-447d-ae14-60365c1ca5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc3db3-06f7-423a-a49d-baa4b389c27f",
        "cursor": {
          "ref": "2a95c69f-7314-498e-bb5e-b131df97ccd7",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7bd376c6-9a42-409f-b2e5-ec94e9f69677"
        },
        "item": {
          "id": "02fc3db3-06f7-423a-a49d-baa4b389c27f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55b741f1-4eaa-40e9-a8c4-04bd653f075f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019de332-f106-4984-a306-b91432a5a989",
        "cursor": {
          "ref": "74eada7c-37a4-4338-8af5-9e8307f1ec92",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "31476e1c-4e63-43a6-8a72-c4f4e6b3b33e"
        },
        "item": {
          "id": "019de332-f106-4984-a306-b91432a5a989",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c8e95318-905d-4262-93b3-ab5d36c421dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca4cf2a-56fa-4927-8067-4f35c2323cac",
        "cursor": {
          "ref": "143b6d58-c51c-4722-8020-101546b838d1",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aee35dd7-a4d3-4774-a8dd-af97229c2e5d"
        },
        "item": {
          "id": "1ca4cf2a-56fa-4927-8067-4f35c2323cac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5843f4db-ef20-49a4-99e1-1cc4eb3e2d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec925b9-38e1-4abc-a4f6-da51e6092a13",
        "cursor": {
          "ref": "7ed6260f-fce5-4b8a-b050-a4aa3e2c17aa",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17fd6f93-c167-423f-a81b-e31dc30db2a1"
        },
        "item": {
          "id": "5ec925b9-38e1-4abc-a4f6-da51e6092a13",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf53abf1-7398-4db9-9565-263c94fd556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44430cbc-b32e-4fa0-89cd-cc5e1df2dc0c",
        "cursor": {
          "ref": "e5098c21-743e-430b-93d2-44c47552fb0f",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "116c3546-b7e8-4ef6-9627-45732a97847d"
        },
        "item": {
          "id": "44430cbc-b32e-4fa0-89cd-cc5e1df2dc0c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5fc743b5-af52-4ce4-b2ce-b5d59a3fca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ec0db-8eaa-4e62-a1ca-e47665c5c3b9",
        "cursor": {
          "ref": "e9a08c4c-7630-435f-8418-9704adc29152",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aa3e0764-3420-4c7c-a331-6ff68d42d00c"
        },
        "item": {
          "id": "ce7ec0db-8eaa-4e62-a1ca-e47665c5c3b9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a1002568-90a9-4d0b-9870-bcbb37d693d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdcd884-aae3-40da-9d93-bef5e36d4ac4",
        "cursor": {
          "ref": "15081eed-d875-4ac6-89ae-13e411d82ca2",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9431c0af-de62-432d-bf6f-01461bca46e8"
        },
        "item": {
          "id": "bbdcd884-aae3-40da-9d93-bef5e36d4ac4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "949add40-bfb7-4619-bd29-2604484f6e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d93bed-801e-4cce-ad7d-a2626c824a65",
        "cursor": {
          "ref": "72bc69a6-1e2d-4290-92ab-60662f45bf31",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2ff32318-3d77-478f-9927-eec12c3ce664"
        },
        "item": {
          "id": "d0d93bed-801e-4cce-ad7d-a2626c824a65",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7715e299-0a6f-4ff8-ad17-fcb294ae3577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf55979-a29e-42fb-9814-ab7e6e317332",
        "cursor": {
          "ref": "167f2671-3db9-4e47-9541-9eb138b4ef1d",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "187e679b-7944-429a-b090-23dd21450b2d"
        },
        "item": {
          "id": "ccf55979-a29e-42fb-9814-ab7e6e317332",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "46864bf7-bd7f-4af6-aacd-923098d6f821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8b93a7-8991-413d-9fd5-6bba610653f4",
        "cursor": {
          "ref": "585fae9a-1276-48f9-93b0-12dcebe5d477",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b938fd1a-e880-49a9-81b3-5020c274c1e7"
        },
        "item": {
          "id": "aa8b93a7-8991-413d-9fd5-6bba610653f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3e7f853-b084-4fd7-be0e-9f34d57b5c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2111f5-1d16-49d0-98da-40f8be9d3d19",
        "cursor": {
          "ref": "7d6e8ad4-3e6d-42b9-a79c-89adf4e4ceb1",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80c40d5e-9d80-4200-959b-f0a7c4313f12"
        },
        "item": {
          "id": "9d2111f5-1d16-49d0-98da-40f8be9d3d19",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "735bea63-06da-41b8-b985-c5755cfa40f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77752c6f-d54a-4fc6-801c-00533bc0e811",
        "cursor": {
          "ref": "6d44ad67-54e7-4238-8280-b77f1c850215",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "01f19e01-0a30-4c6c-82c9-056a74ee2dd3"
        },
        "item": {
          "id": "77752c6f-d54a-4fc6-801c-00533bc0e811",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "007e7bc0-0a95-447b-9890-80aec2db15c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe46059-38e7-4077-98de-cd0ca31d32be",
        "cursor": {
          "ref": "15a6466c-57f6-4747-a6ca-65c08b2b0293",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b2f56b43-8a52-4c44-aa96-4cf177291cda"
        },
        "item": {
          "id": "4fe46059-38e7-4077-98de-cd0ca31d32be",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3bf64861-f223-4239-8359-5293d07fd563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ba0dc0-4796-4122-899a-9df771592dde",
        "cursor": {
          "ref": "7cb8287e-a34b-4593-8c77-b3ff3d0c963b",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ae000986-d139-4b27-b2ec-e8f57f3ee575"
        },
        "item": {
          "id": "53ba0dc0-4796-4122-899a-9df771592dde",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2f6147a7-901b-440f-b941-1895522e7586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db69185-c0b5-447b-9c41-9280b828ce0d",
        "cursor": {
          "ref": "5f8655f3-e032-457c-8fa8-bb45257dbe39",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "288046d2-49b0-402b-bd84-b26c129f28d2"
        },
        "item": {
          "id": "8db69185-c0b5-447b-9c41-9280b828ce0d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ca7fa032-14bf-4ef2-aa3d-b1460c83d78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a1a04-ace9-4972-a643-455a09438a22",
        "cursor": {
          "ref": "7b91cf58-5640-4da4-9d22-6adf4b8ea2fb",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "06e5e6dd-613b-4d99-b411-6765217a5f49"
        },
        "item": {
          "id": "227a1a04-ace9-4972-a643-455a09438a22",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2c608936-b98a-46a0-ae5b-cc6202abf46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3bfc21-46cf-49a5-8f9a-8b620a4d5c87",
        "cursor": {
          "ref": "a2bed550-d110-4196-9819-111605cf5f9e",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6b42899-6f23-4d1d-87b2-5ef23bc05180"
        },
        "item": {
          "id": "1d3bfc21-46cf-49a5-8f9a-8b620a4d5c87",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6aed6613-79ee-4914-87e5-83c73a25b883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ce6b5a-d836-407e-8a8a-568fe67134af",
        "cursor": {
          "ref": "142a6ae7-f5be-42e0-8ec8-640763614992",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9f6296d3-3563-4288-88df-8ebf936fd653"
        },
        "item": {
          "id": "d3ce6b5a-d836-407e-8a8a-568fe67134af",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ebd19dce-eb3f-45d0-b834-f559d868b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa395a7-c1fd-49a2-8559-479ea2224e7a",
        "cursor": {
          "ref": "040fe3e8-94a3-472b-9d8e-b6f10d543d35",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7cfc0a0-d61c-4685-8865-3e7c609b5375"
        },
        "item": {
          "id": "7fa395a7-c1fd-49a2-8559-479ea2224e7a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1ae414e9-57bf-4033-8e1b-ce03403bff79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d22911-5f16-4862-b3fa-f4c0fa217ff6",
        "cursor": {
          "ref": "049530af-2a15-4540-ba97-a21c12bacd70",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4f2da825-8d7f-468f-8399-13b9ea7f7176"
        },
        "item": {
          "id": "93d22911-5f16-4862-b3fa-f4c0fa217ff6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c6236dd0-8b3a-422a-9d8a-547803335d78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 26,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2480a804-e50e-4ef2-bcb7-57579b93f29c",
        "cursor": {
          "ref": "52c558e8-20cf-4d38-a087-ac284dc5dc94",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "46432526-0fcc-475d-a120-d23a739c3c5f"
        },
        "item": {
          "id": "2480a804-e50e-4ef2-bcb7-57579b93f29c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3be6b0d-e959-4447-8c85-9282045a13f4",
          "status": "OK",
          "code": 200,
          "responseTime": 1447,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18e0c47-93af-4416-9985-74924a392804",
        "cursor": {
          "ref": "d23ddd89-93ee-4467-bb14-b8ba4df1a3ee",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "182ecf5a-b6dd-45ed-a168-04a5ca975cf2"
        },
        "item": {
          "id": "d18e0c47-93af-4416-9985-74924a392804",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "3fe2c689-aea4-40a6-a218-33fccee493fb",
          "status": "OK",
          "code": 200,
          "responseTime": 511,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412fb7be-4f7d-469b-8d3b-9680e4444dd7",
        "cursor": {
          "ref": "ec215021-a754-4047-863b-d71fb6dd5ff1",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "18eb967f-3898-494b-a7bf-f6ad0907c7e3"
        },
        "item": {
          "id": "412fb7be-4f7d-469b-8d3b-9680e4444dd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "00b6c71f-e332-423d-90d7-5c9e9469edb3",
          "status": "OK",
          "code": 200,
          "responseTime": 574,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
        "cursor": {
          "ref": "0f1b9c8f-a5af-474a-a889-bb5e98f6ee63",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bf87cbb8-cf27-43eb-966c-352669202661"
        },
        "item": {
          "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d05d8d9f-f220-4d30-905a-4d0579ead764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
        "cursor": {
          "ref": "0f1b9c8f-a5af-474a-a889-bb5e98f6ee63",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bf87cbb8-cf27-43eb-966c-352669202661"
        },
        "item": {
          "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d05d8d9f-f220-4d30-905a-4d0579ead764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
        "cursor": {
          "ref": "0f1b9c8f-a5af-474a-a889-bb5e98f6ee63",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bf87cbb8-cf27-43eb-966c-352669202661"
        },
        "item": {
          "id": "dbb930b1-472f-4970-91c0-9ae65d02d78d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d05d8d9f-f220-4d30-905a-4d0579ead764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb7fe1-d034-4a35-86a0-307336c7608f",
        "cursor": {
          "ref": "906540ea-e336-45aa-bb40-0325abce0f8d",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e3c4586f-4aee-43c6-9e9e-116b7b90ef6b"
        },
        "item": {
          "id": "25fb7fe1-d034-4a35-86a0-307336c7608f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "098456bb-c4d9-4b86-8693-57dec0b5f866",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aa34dc-161f-49cf-8b23-77bb524c873c",
        "cursor": {
          "ref": "40eb2b54-0956-4fda-8459-c1b91e32e4d6",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b6213c0-a7cf-4d58-b149-e9ce82e899b6"
        },
        "item": {
          "id": "e5aa34dc-161f-49cf-8b23-77bb524c873c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8968d444-053b-44f3-99da-accb0a6a563c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "e5aa34dc-161f-49cf-8b23-77bb524c873c",
        "cursor": {
          "ref": "40eb2b54-0956-4fda-8459-c1b91e32e4d6",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b6213c0-a7cf-4d58-b149-e9ce82e899b6"
        },
        "item": {
          "id": "e5aa34dc-161f-49cf-8b23-77bb524c873c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8968d444-053b-44f3-99da-accb0a6a563c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "faf54f6d-4256-41aa-8b8a-885c301f10ca",
        "cursor": {
          "ref": "128a6190-62ba-4a53-b009-169476f7e1e7",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2029f2ba-2cd1-44dc-ad75-00c2f123d31a"
        },
        "item": {
          "id": "faf54f6d-4256-41aa-8b8a-885c301f10ca",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6fdda20d-81b2-417f-b660-c7f79ba917fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "178a7ccb-796e-4c68-983e-c58c22924fd9",
        "cursor": {
          "ref": "2479dd83-19f1-4061-a49b-a17b53ca0e02",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae0d61e7-2ff4-4b74-92b9-257ba153a212"
        },
        "item": {
          "id": "178a7ccb-796e-4c68-983e-c58c22924fd9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6f8187bf-e9bb-407f-a3ec-d7f7b9af8f8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178a7ccb-796e-4c68-983e-c58c22924fd9",
        "cursor": {
          "ref": "2479dd83-19f1-4061-a49b-a17b53ca0e02",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae0d61e7-2ff4-4b74-92b9-257ba153a212"
        },
        "item": {
          "id": "178a7ccb-796e-4c68-983e-c58c22924fd9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6f8187bf-e9bb-407f-a3ec-d7f7b9af8f8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b22ccc-092b-4d81-9faf-e5ed62978356",
        "cursor": {
          "ref": "9f4a3953-bda1-43cb-a185-4f58e2925a81",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "908ac6ad-be48-4348-8131-52b4d846e407"
        },
        "item": {
          "id": "e2b22ccc-092b-4d81-9faf-e5ed62978356",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8f11167c-7b81-459d-bfd4-fb9272eb4e62",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}