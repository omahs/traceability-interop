openapi: 3.0.0
info:
  title: Presentation Exchange Service
  version: "0.0.0"
tags:
  - name: Presentation Exchange Service
    description: APIs for exchanging presentations
paths:
  /presentations/available:
    post:
      tags:
        - Presentation Exchange Service
      summary: Begin a Verifiable Presentation
      operationId: notifyPresentationAvailable
      description: Obtain the challenge for the presentation
      requestBody:
        description: Details of the presentation the client intends to submit in the storePresentation operation.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyPresentationAvailableRequest"
      responses:
        "200":
          description: Proceed with presentation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotifyPresentationAvailableResponse"
        "400":
          description: Request for presentation is malformed
        "501":
          description: Not implemented
        "500":
          description: internal error
  /presentations/submissions:
    post:
      tags:
        - Presentation Exchange Service
      summary: Complete a Verifiable Presentation
      operationId: storePresentation
      description: Submit a presentation over a challenge
      requestBody:
        description: A verifiable presentation over a challenge that was obtained from the notifyPresentationAvailable operation.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorePresentationRequest"
      responses:
        "202":
          description: Presentation accepted
        "400":
          description: Presentation is malformed
        "401":
          description: Presentation did not contain a proof
        "402":
          description: Payment required
        "403":
          description: Presentation verification failed
        "425":
          description: Server is unwilling to risk processing a request that might be replayed
        "501":
          description: Not implemented
        "500":
          description: internal error

components:
  NotifyPresentationAvailableRequest:
    type: object
    properties:
      query:
        type: object
        description: See https://w3c-ccg.github.io/vp-request-spec/#format
        properties:
          type:
            type: string
            description: "The type of query the server should reply with."
          credentialQuery:
            type: object
            description: "Details of the client's available presentation"

    example:
      {
        "query":
          [
            {
              "type": "RequestQueryByFrame",
              "credentialQuery":
                [
                  {
                    "type":
                      ["VerifiableCredential", "CommercialInvoiceCertificate"],
                    "reason": "Wallet XYZ is ready to selectively disclose new credentials.",
                  },
                ],
            },
          ],
      }

  NotifyPresentationAvailableResponse:
    type: object
    properties:
      query:
        type: object
        description: See https://w3c-ccg.github.io/vp-request-spec/#format
      domain:
        type: string
        description: See https://w3id.org/security#domain
      challenge:
        type: string
        description: See https://w3id.org/security#challenge
    example:
      {
        "query":
          [
            {
              "type": "QueryByFrame",
              "credentialQuery":
                {
                  "frame":
                    {
                      "@context":
                        [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://w3id.org/traceability/v1",
                          "https://w3id.org/bbs/v1",
                        ],
                      "type":
                        [
                          "VerifiableCredential",
                          "CommercialInvoiceCertificate",
                        ],
                      "credentialSubject":
                        {
                          "@explicit": true,
                          "type": ["CommercialInvoice"],
                          "purchaseDate": {},
                          "destinationCountry": {},
                        },
                    },
                },
            },
          ],
        "domain": "jobs.example.com",
        "challenge": "3182bdea-63d9-11ea-b6de-3b7c1404d57f",
      }
  StorePresentationRequest:
    $ref: "./components/VerifiablePresentation.yml"
