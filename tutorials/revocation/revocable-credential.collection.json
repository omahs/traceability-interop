{
  "info": {
    "_postman_id": "f650d61f-ef0a-4aab-9555-9646a4fa99f9",
    "name": "VC API - Revocable Credentials",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Get Access Token For Application",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": ["pm.environment.set(\"access_token\", pm.response.json().access_token);", ""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"audience\": \"http://localhost:8080\",\n    \"client_id\": \"{{CLIENT_ID}}\",\n    \"client_secret\": \"{{CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/oauth/token",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["oauth", "token"]
        }
      },
      "response": []
    },
    {
      "name": "Issue Revocable Credential",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const verifiableCredential = pm.response.json()",
              "pm.environment.set(\"revocable_credential\", JSON.stringify(pm.response.json(verifiableCredential)));",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const credentialId = 'urn:uuid:' + _.random(0, 1024);",
              "",
              "pm.environment.set(\"revocable_credential_id\", credentialId);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"{{revocable_credential_id}}\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MkneEzjgD4Rerd14F62MmcKXY5LQsLQeY6UntTQmtSKwFh\",\n    \"issuanceDate\": \"2010-01-01T19:23:24Z\",\n    \"credentialSubject\": {\n      \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\",\n    \"created\": \"2020-04-02T18:48:36Z\",\n    \"credentialStatus\": {\n      \"type\": \"RevocationList2020Status\"\n    }\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/credentials/issue",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["credentials", "issue"]
        }
      },
      "response": []
    },
    {
      "name": "Confirm Credential is Not Revoked",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "",
              "pm.test(\"should confirm credential is not revoked\", function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.checks).to.eql([",
              "        \"proof\",",
              "        \"credentialStatus\"",
              "    ]);",
              "    pm.expect(responseJson.errors).to.eql([]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"verifiableCredential\": {{revocable_credential}}\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/credentials/verify",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["credentials", "verify"]
        }
      },
      "response": []
    },
    {
      "name": "Revoke Credential",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"credentialId\": \"{{revocable_credential_id}}\",\n  \"credentialStatus\": [{ \"type\": \"RevocationList2020Status\", \"status\": \"1\" }]\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/credentials/status",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["credentials", "status"]
        }
      },
      "response": []
    },
    {
      "name": "Confirm Credential is Revoked",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "",
              "pm.test(\"should confirm credential is not revoked\", function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.checks).to.eql([",
              "        \"proof\",",
              "        \"credentialStatus\"",
              "    ]);",
              "    pm.expect(responseJson.errors).to.eql([",
              "        \"proof\",",
              "        \"credentialStatus\"",
              "    ]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"verifiableCredential\": {{revocable_credential}}\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/credentials/verify",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["credentials", "verify"]
        }
      },
      "response": []
    }
  ]
}
